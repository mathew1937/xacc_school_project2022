#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_35(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(9121592);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(9121928);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(9121984);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(9122320);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(9122656);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(9122992);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata5.bind(*p_1_trace_tdata5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata5);
        xsim_sc_channel<0, bool > *p_1_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready5.bind(*p_1_trace_tready5);
        p_1_trace_tready5->set_sv_netview_offsetfromdp(9123328);
        xsim_sc_channel<0, bool > *p_1_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast5.bind(*p_1_trace_tlast5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid5.bind(*p_1_trace_tid5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest5.bind(*p_1_trace_tdest5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest5);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid5.bind(*p_1_trace_tvalid5);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata6.bind(*p_1_trace_tdata6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata6);
        xsim_sc_channel<0, bool > *p_1_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready6.bind(*p_1_trace_tready6);
        p_1_trace_tready6->set_sv_netview_offsetfromdp(9123664);
        xsim_sc_channel<0, bool > *p_1_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast6.bind(*p_1_trace_tlast6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid6.bind(*p_1_trace_tid6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest6.bind(*p_1_trace_tdest6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest6);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid6.bind(*p_1_trace_tvalid6);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid6);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata7 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata7.bind(*p_1_trace_tdata7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata7);
        xsim_sc_channel<0, bool > *p_1_trace_tready7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready7.bind(*p_1_trace_tready7);
        p_1_trace_tready7->set_sv_netview_offsetfromdp(9124000);
        xsim_sc_channel<0, bool > *p_1_trace_tlast7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast7.bind(*p_1_trace_tlast7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid7.bind(*p_1_trace_tid7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest7.bind(*p_1_trace_tdest7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest7);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid7.bind(*p_1_trace_tvalid7);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid7);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata8 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata8.bind(*p_1_trace_tdata8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata8);
        xsim_sc_channel<0, bool > *p_1_trace_tready8 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready8.bind(*p_1_trace_tready8);
        p_1_trace_tready8->set_sv_netview_offsetfromdp(9124336);
        xsim_sc_channel<0, bool > *p_1_trace_tlast8 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast8.bind(*p_1_trace_tlast8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast8);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid8 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid8.bind(*p_1_trace_tid8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid8);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest8 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest8.bind(*p_1_trace_tdest8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest8);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid8 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid8.bind(*p_1_trace_tvalid8);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid8);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata9 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata9.bind(*p_1_trace_tdata9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata9);
        xsim_sc_channel<0, bool > *p_1_trace_tready9 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready9.bind(*p_1_trace_tready9);
        p_1_trace_tready9->set_sv_netview_offsetfromdp(9124672);
        xsim_sc_channel<0, bool > *p_1_trace_tlast9 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast9.bind(*p_1_trace_tlast9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast9);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid9 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid9.bind(*p_1_trace_tid9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid9);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest9 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest9.bind(*p_1_trace_tdest9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest9);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid9 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid9.bind(*p_1_trace_tvalid9);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid9);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata10 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata10.bind(*p_1_trace_tdata10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata10);
        xsim_sc_channel<0, bool > *p_1_trace_tready10 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready10.bind(*p_1_trace_tready10);
        p_1_trace_tready10->set_sv_netview_offsetfromdp(9125008);
        xsim_sc_channel<0, bool > *p_1_trace_tlast10 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast10.bind(*p_1_trace_tlast10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast10);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid10 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid10.bind(*p_1_trace_tid10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid10);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest10 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest10.bind(*p_1_trace_tdest10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest10);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid10 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid10.bind(*p_1_trace_tvalid10);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid10);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(9125400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(9125624);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(9125680);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(9125792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(9125960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(9126016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(9126072);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(9126128);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(9126352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(9126576);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(9126632);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(9126744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(9126912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(9126968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(9127024);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(9127080);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(9127304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(9127752);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(9127808);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(9127976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(9128032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(9128088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(9128256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(9128536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(9128592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(9128648);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(9128704);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(9129256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(9129480);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(9129536);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(9129648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(9129872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(9129928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(9129984);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(9130040);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(9131160);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(9131216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(9131272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(9131328);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(9131384);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(9131824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(9132048);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(9132104);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(9132216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(9132384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(9132440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(9132496);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(9132552);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(9134344);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(9134400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(9134456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(9134512);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(9134624);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(9134680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(9134736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(9134792);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(9134848);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(9134904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(535);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(9136408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(9136632);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(9136688);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(9136800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(9136968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(9137024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(9137080);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(9137136);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_AWID.bind(*p_4_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_AWLEN.bind(*p_4_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_AWSIZE.bind(*p_4_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_AWBURST.bind(*p_4_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WLAST.bind(*p_4_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WLAST);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_ARID.bind(*p_4_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_ARLEN.bind(*p_4_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_ARSIZE.bind(*p_4_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_ARBURST.bind(*p_4_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RDATA);
        xsim_sc_channel<0, bool > *p_4_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RLAST.bind(*p_4_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_RID.bind(*p_4_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_BID.bind(*p_4_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BID);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tready.bind(*p_4_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_rd_tdata.bind(*p_4_m_axis_rd_tdata);
        p_4_m_axis_rd_tdata->set_sv_netview_offsetfromdp(9138928);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tlast.bind(*p_4_m_axis_rd_tlast);
        p_4_m_axis_rd_tlast->set_sv_netview_offsetfromdp(9138984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tid.bind(*p_4_m_axis_rd_tid);
        p_4_m_axis_rd_tid->set_sv_netview_offsetfromdp(9139040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tdest.bind(*p_4_m_axis_rd_tdest);
        p_4_m_axis_rd_tdest->set_sv_netview_offsetfromdp(9139096);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tready.bind(*p_4_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_wr_tdata.bind(*p_4_m_axis_wr_tdata);
        p_4_m_axis_wr_tdata->set_sv_netview_offsetfromdp(9139208);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tlast.bind(*p_4_m_axis_wr_tlast);
        p_4_m_axis_wr_tlast->set_sv_netview_offsetfromdp(9139264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tid.bind(*p_4_m_axis_wr_tid);
        p_4_m_axis_wr_tid->set_sv_netview_offsetfromdp(9139320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tdest.bind(*p_4_m_axis_wr_tdest);
        p_4_m_axis_wr_tdest->set_sv_netview_offsetfromdp(9139376);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tvalid.bind(*p_4_m_axis_wr_tvalid);
        p_4_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(9139432);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tvalid.bind(*p_4_m_axis_rd_tvalid);
        p_4_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(9139488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr_mon.bind(*p_4_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot_mon.bind(*p_4_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid_mon.bind(*p_4_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready_mon.bind(*p_4_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata_mon.bind(*p_4_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb_mon.bind(*p_4_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid_mon.bind(*p_4_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready_mon.bind(*p_4_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp_mon.bind(*p_4_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid_mon.bind(*p_4_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready_mon.bind(*p_4_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr_mon.bind(*p_4_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot_mon.bind(*p_4_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid_mon.bind(*p_4_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready_mon.bind(*p_4_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata_mon.bind(*p_4_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp_mon.bind(*p_4_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid_mon.bind(*p_4_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready_mon.bind(*p_4_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready_mon);
        sc_inst_5 = new pfm_dynamic_dpa_mon3_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon3");
        sc_inst_5->xsim_set_dbg_index(536);
        xsim_sc_channel<0, bool > *p_5_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_clk.bind(*p_5_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_clk);
        xsim_sc_channel<0, bool > *p_5_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_resetn.bind(*p_5_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_resetn);
        xsim_sc_channel<0, bool > *p_5_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_clk.bind(*p_5_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_trace_clk);
        xsim_sc_channel<0, bool > *p_5_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_rst.bind(*p_5_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(9140992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(9141216);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(9141272);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(9141384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(9141552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(9141608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(9141664);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(9141720);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWVALID.bind(*p_5_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_5_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWREADY.bind(*p_5_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_AWADDR.bind(*p_5_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_AWID.bind(*p_5_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_AWLEN.bind(*p_5_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_AWSIZE.bind(*p_5_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_AWBURST.bind(*p_5_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_5_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WVALID.bind(*p_5_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WVALID);
        xsim_sc_channel<0, bool > *p_5_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WREADY.bind(*p_5_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_WDATA.bind(*p_5_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->mon_WSTRB.bind(*p_5_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_5_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WLAST.bind(*p_5_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_WLAST);
        xsim_sc_channel<0, bool > *p_5_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARVALID.bind(*p_5_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_5_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARREADY.bind(*p_5_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_ARADDR.bind(*p_5_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_ARID.bind(*p_5_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_ARLEN.bind(*p_5_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_ARSIZE.bind(*p_5_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_ARBURST.bind(*p_5_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_5_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RVALID.bind(*p_5_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RVALID);
        xsim_sc_channel<0, bool > *p_5_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RREADY.bind(*p_5_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->mon_RDATA.bind(*p_5_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RDATA);
        xsim_sc_channel<0, bool > *p_5_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RLAST.bind(*p_5_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_RID.bind(*p_5_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_RRESP.bind(*p_5_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_RRESP);
        xsim_sc_channel<0, bool > *p_5_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BVALID.bind(*p_5_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_BVALID);
        xsim_sc_channel<0, bool > *p_5_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BREADY.bind(*p_5_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_BRESP.bind(*p_5_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_BID.bind(*p_5_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_5_mon_BID);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tready.bind(*p_5_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_rd_tdata.bind(*p_5_m_axis_rd_tdata);
        p_5_m_axis_rd_tdata->set_sv_netview_offsetfromdp(9143512);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tlast.bind(*p_5_m_axis_rd_tlast);
        p_5_m_axis_rd_tlast->set_sv_netview_offsetfromdp(9143568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tid.bind(*p_5_m_axis_rd_tid);
        p_5_m_axis_rd_tid->set_sv_netview_offsetfromdp(9143624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tdest.bind(*p_5_m_axis_rd_tdest);
        p_5_m_axis_rd_tdest->set_sv_netview_offsetfromdp(9143680);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tready.bind(*p_5_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_wr_tdata.bind(*p_5_m_axis_wr_tdata);
        p_5_m_axis_wr_tdata->set_sv_netview_offsetfromdp(9143792);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tlast.bind(*p_5_m_axis_wr_tlast);
        p_5_m_axis_wr_tlast->set_sv_netview_offsetfromdp(9143848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tid.bind(*p_5_m_axis_wr_tid);
        p_5_m_axis_wr_tid->set_sv_netview_offsetfromdp(9143904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tdest.bind(*p_5_m_axis_wr_tdest);
        p_5_m_axis_wr_tdest->set_sv_netview_offsetfromdp(9143960);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tvalid.bind(*p_5_m_axis_wr_tvalid);
        p_5_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(9144016);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tvalid.bind(*p_5_m_axis_rd_tvalid);
        p_5_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(9144072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr_mon.bind(*p_5_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot_mon.bind(*p_5_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid_mon.bind(*p_5_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready_mon.bind(*p_5_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata_mon.bind(*p_5_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb_mon.bind(*p_5_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid_mon.bind(*p_5_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready_mon.bind(*p_5_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp_mon.bind(*p_5_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid_mon.bind(*p_5_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready_mon.bind(*p_5_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr_mon.bind(*p_5_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot_mon.bind(*p_5_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid_mon.bind(*p_5_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready_mon.bind(*p_5_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata_mon.bind(*p_5_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp_mon.bind(*p_5_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid_mon.bind(*p_5_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready_mon.bind(*p_5_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready_mon);
        sc_inst_6 = new pfm_dynamic_dpa_mon4_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon4");
        sc_inst_6->xsim_set_dbg_index(537);
        xsim_sc_channel<0, bool > *p_6_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_clk.bind(*p_6_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_clk);
        xsim_sc_channel<0, bool > *p_6_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_resetn.bind(*p_6_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_resetn);
        xsim_sc_channel<0, bool > *p_6_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_6->trace_clk.bind(*p_6_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_trace_clk);
        xsim_sc_channel<0, bool > *p_6_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_6->trace_rst.bind(*p_6_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(9145576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(9145800);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(9145856);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(9145968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(9146136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(9146192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(9146248);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(9146304);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<0, bool > *p_6_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_AWVALID.bind(*p_6_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_6_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_AWREADY.bind(*p_6_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->mon_AWADDR.bind(*p_6_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_AWID.bind(*p_6_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->mon_AWLEN.bind(*p_6_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->mon_AWSIZE.bind(*p_6_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_AWBURST.bind(*p_6_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_6_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_WVALID.bind(*p_6_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WVALID);
        xsim_sc_channel<0, bool > *p_6_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_WREADY.bind(*p_6_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->mon_WDATA.bind(*p_6_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->mon_WSTRB.bind(*p_6_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_6_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_WLAST.bind(*p_6_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_WLAST);
        xsim_sc_channel<0, bool > *p_6_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_ARVALID.bind(*p_6_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_6_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_ARREADY.bind(*p_6_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->mon_ARADDR.bind(*p_6_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_ARID.bind(*p_6_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->mon_ARLEN.bind(*p_6_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->mon_ARSIZE.bind(*p_6_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_ARBURST.bind(*p_6_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_6_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_RVALID.bind(*p_6_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RVALID);
        xsim_sc_channel<0, bool > *p_6_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_RREADY.bind(*p_6_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->mon_RDATA.bind(*p_6_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RDATA);
        xsim_sc_channel<0, bool > *p_6_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_RLAST.bind(*p_6_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_RID.bind(*p_6_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_RRESP.bind(*p_6_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_RRESP);
        xsim_sc_channel<0, bool > *p_6_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_BVALID.bind(*p_6_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_BVALID);
        xsim_sc_channel<0, bool > *p_6_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_BREADY.bind(*p_6_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_BRESP.bind(*p_6_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_BID.bind(*p_6_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_6_mon_BID);
        xsim_sc_channel<0, bool > *p_6_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_rd_tready.bind(*p_6_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->m_axis_rd_tdata.bind(*p_6_m_axis_rd_tdata);
        p_6_m_axis_rd_tdata->set_sv_netview_offsetfromdp(9148096);
        xsim_sc_channel<0, bool > *p_6_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_rd_tlast.bind(*p_6_m_axis_rd_tlast);
        p_6_m_axis_rd_tlast->set_sv_netview_offsetfromdp(9148152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_rd_tid.bind(*p_6_m_axis_rd_tid);
        p_6_m_axis_rd_tid->set_sv_netview_offsetfromdp(9148208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_rd_tdest.bind(*p_6_m_axis_rd_tdest);
        p_6_m_axis_rd_tdest->set_sv_netview_offsetfromdp(9148264);
        xsim_sc_channel<0, bool > *p_6_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_wr_tready.bind(*p_6_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->m_axis_wr_tdata.bind(*p_6_m_axis_wr_tdata);
        p_6_m_axis_wr_tdata->set_sv_netview_offsetfromdp(9148376);
        xsim_sc_channel<0, bool > *p_6_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_wr_tlast.bind(*p_6_m_axis_wr_tlast);
        p_6_m_axis_wr_tlast->set_sv_netview_offsetfromdp(9148432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_wr_tid.bind(*p_6_m_axis_wr_tid);
        p_6_m_axis_wr_tid->set_sv_netview_offsetfromdp(9148488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_wr_tdest.bind(*p_6_m_axis_wr_tdest);
        p_6_m_axis_wr_tdest->set_sv_netview_offsetfromdp(9148544);
        xsim_sc_channel<0, bool > *p_6_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_wr_tvalid.bind(*p_6_m_axis_wr_tvalid);
        p_6_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(9148600);
        xsim_sc_channel<0, bool > *p_6_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_rd_tvalid.bind(*p_6_m_axis_rd_tvalid);
        p_6_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(9148656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr_mon.bind(*p_6_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot_mon.bind(*p_6_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid_mon.bind(*p_6_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready_mon.bind(*p_6_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata_mon.bind(*p_6_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb_mon.bind(*p_6_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid_mon.bind(*p_6_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready_mon.bind(*p_6_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp_mon.bind(*p_6_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid_mon.bind(*p_6_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready_mon.bind(*p_6_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr_mon.bind(*p_6_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot_mon.bind(*p_6_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid_mon.bind(*p_6_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready_mon.bind(*p_6_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata_mon.bind(*p_6_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp_mon.bind(*p_6_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid_mon.bind(*p_6_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready_mon.bind(*p_6_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready_mon);
        sc_inst_7 = new pfm_dynamic_dpa_mon5_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon5");
        sc_inst_7->xsim_set_dbg_index(538);
        xsim_sc_channel<0, bool > *p_7_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_clk.bind(*p_7_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_clk);
        xsim_sc_channel<0, bool > *p_7_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_resetn.bind(*p_7_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_resetn);
        xsim_sc_channel<0, bool > *p_7_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->trace_clk.bind(*p_7_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_trace_clk);
        xsim_sc_channel<0, bool > *p_7_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_7->trace_rst.bind(*p_7_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(9150160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(9150384);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(9150440);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(9150552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(9150720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(9150776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(9150832);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(9150888);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_AWVALID.bind(*p_7_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_7_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_AWREADY.bind(*p_7_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->mon_AWADDR.bind(*p_7_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->mon_AWID.bind(*p_7_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->mon_AWLEN.bind(*p_7_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->mon_AWSIZE.bind(*p_7_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->mon_AWBURST.bind(*p_7_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_7_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_WVALID.bind(*p_7_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WVALID);
        xsim_sc_channel<0, bool > *p_7_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_WREADY.bind(*p_7_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->mon_WDATA.bind(*p_7_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->mon_WSTRB.bind(*p_7_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_7_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_WLAST.bind(*p_7_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_WLAST);
        xsim_sc_channel<0, bool > *p_7_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_ARVALID.bind(*p_7_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_7_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_ARREADY.bind(*p_7_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->mon_ARADDR.bind(*p_7_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->mon_ARID.bind(*p_7_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->mon_ARLEN.bind(*p_7_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->mon_ARSIZE.bind(*p_7_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->mon_ARBURST.bind(*p_7_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_7_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_RVALID.bind(*p_7_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RVALID);
        xsim_sc_channel<0, bool > *p_7_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_RREADY.bind(*p_7_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->mon_RDATA.bind(*p_7_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RDATA);
        xsim_sc_channel<0, bool > *p_7_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_RLAST.bind(*p_7_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->mon_RID.bind(*p_7_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->mon_RRESP.bind(*p_7_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_RRESP);
        xsim_sc_channel<0, bool > *p_7_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_BVALID.bind(*p_7_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_BVALID);
        xsim_sc_channel<0, bool > *p_7_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_7->mon_BREADY.bind(*p_7_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->mon_BRESP.bind(*p_7_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->mon_BID.bind(*p_7_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_7_mon_BID);
        xsim_sc_channel<0, bool > *p_7_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_rd_tready.bind(*p_7_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axis_rd_tdata.bind(*p_7_m_axis_rd_tdata);
        p_7_m_axis_rd_tdata->set_sv_netview_offsetfromdp(9152680);
        xsim_sc_channel<0, bool > *p_7_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_rd_tlast.bind(*p_7_m_axis_rd_tlast);
        p_7_m_axis_rd_tlast->set_sv_netview_offsetfromdp(9152736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axis_rd_tid.bind(*p_7_m_axis_rd_tid);
        p_7_m_axis_rd_tid->set_sv_netview_offsetfromdp(9152792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axis_rd_tdest.bind(*p_7_m_axis_rd_tdest);
        p_7_m_axis_rd_tdest->set_sv_netview_offsetfromdp(9152848);
        xsim_sc_channel<0, bool > *p_7_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_wr_tready.bind(*p_7_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->m_axis_wr_tdata.bind(*p_7_m_axis_wr_tdata);
        p_7_m_axis_wr_tdata->set_sv_netview_offsetfromdp(9152960);
        xsim_sc_channel<0, bool > *p_7_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_wr_tlast.bind(*p_7_m_axis_wr_tlast);
        p_7_m_axis_wr_tlast->set_sv_netview_offsetfromdp(9153016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axis_wr_tid.bind(*p_7_m_axis_wr_tid);
        p_7_m_axis_wr_tid->set_sv_netview_offsetfromdp(9153072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axis_wr_tdest.bind(*p_7_m_axis_wr_tdest);
        p_7_m_axis_wr_tdest->set_sv_netview_offsetfromdp(9153128);
        xsim_sc_channel<0, bool > *p_7_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_wr_tvalid.bind(*p_7_m_axis_wr_tvalid);
        p_7_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(9153184);
        xsim_sc_channel<0, bool > *p_7_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axis_rd_tvalid.bind(*p_7_m_axis_rd_tvalid);
        p_7_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(9153240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr_mon.bind(*p_7_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot_mon.bind(*p_7_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid_mon.bind(*p_7_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready_mon.bind(*p_7_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata_mon.bind(*p_7_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb_mon.bind(*p_7_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid_mon.bind(*p_7_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready_mon.bind(*p_7_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp_mon.bind(*p_7_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid_mon.bind(*p_7_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready_mon.bind(*p_7_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr_mon.bind(*p_7_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot_mon.bind(*p_7_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid_mon.bind(*p_7_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready_mon.bind(*p_7_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata_mon.bind(*p_7_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp_mon.bind(*p_7_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid_mon.bind(*p_7_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready_mon.bind(*p_7_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready_mon);
        sc_inst_8 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_8->xsim_set_dbg_index(30);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk1.bind(*p_8_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk1);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_awid.bind(*p_8_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S00_AXI_awaddr.bind(*p_8_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S00_AXI_awlen.bind(*p_8_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S00_AXI_awsize.bind(*p_8_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S00_AXI_awburst.bind(*p_8_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_8_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S00_AXI_awlock.bind(*p_8_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S00_AXI_awcache.bind(*p_8_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S00_AXI_awprot.bind(*p_8_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S00_AXI_awqos.bind(*p_8_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_awuser.bind(*p_8_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_awvalid.bind(*p_8_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_awready.bind(*p_8_S00_AXI_awready);
        p_8_S00_AXI_awready->set_sv_netview_offsetfromdp(11038112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S00_AXI_wdata.bind(*p_8_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S00_AXI_wstrb.bind(*p_8_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_wlast.bind(*p_8_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_wuser.bind(*p_8_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_wvalid.bind(*p_8_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_wready.bind(*p_8_S00_AXI_wready);
        p_8_S00_AXI_wready->set_sv_netview_offsetfromdp(11038448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_bid.bind(*p_8_S00_AXI_bid);
        p_8_S00_AXI_bid->set_sv_netview_offsetfromdp(11038504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S00_AXI_bresp.bind(*p_8_S00_AXI_bresp);
        p_8_S00_AXI_bresp->set_sv_netview_offsetfromdp(11038560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_buser.bind(*p_8_S00_AXI_buser);
        p_8_S00_AXI_buser->set_sv_netview_offsetfromdp(11038616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_bvalid.bind(*p_8_S00_AXI_bvalid);
        p_8_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11038672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_bready.bind(*p_8_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_arid.bind(*p_8_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S00_AXI_araddr.bind(*p_8_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S00_AXI_arlen.bind(*p_8_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S00_AXI_arsize.bind(*p_8_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S00_AXI_arburst.bind(*p_8_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_8_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S00_AXI_arlock.bind(*p_8_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S00_AXI_arcache.bind(*p_8_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S00_AXI_arprot.bind(*p_8_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S00_AXI_arqos.bind(*p_8_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_aruser.bind(*p_8_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_arvalid.bind(*p_8_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_arready.bind(*p_8_S00_AXI_arready);
        p_8_S00_AXI_arready->set_sv_netview_offsetfromdp(11039400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_rid.bind(*p_8_S00_AXI_rid);
        p_8_S00_AXI_rid->set_sv_netview_offsetfromdp(11039456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S00_AXI_rdata.bind(*p_8_S00_AXI_rdata);
        p_8_S00_AXI_rdata->set_sv_netview_offsetfromdp(11039512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S00_AXI_rresp.bind(*p_8_S00_AXI_rresp);
        p_8_S00_AXI_rresp->set_sv_netview_offsetfromdp(11039568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_rlast.bind(*p_8_S00_AXI_rlast);
        p_8_S00_AXI_rlast->set_sv_netview_offsetfromdp(11039624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_ruser.bind(*p_8_S00_AXI_ruser);
        p_8_S00_AXI_ruser->set_sv_netview_offsetfromdp(11039680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_rvalid.bind(*p_8_S00_AXI_rvalid);
        p_8_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11039736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S00_AXI_rready.bind(*p_8_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_awid.bind(*p_8_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S01_AXI_awaddr.bind(*p_8_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S01_AXI_awlen.bind(*p_8_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S01_AXI_awsize.bind(*p_8_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S01_AXI_awburst.bind(*p_8_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_8_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S01_AXI_awlock.bind(*p_8_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S01_AXI_awcache.bind(*p_8_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S01_AXI_awprot.bind(*p_8_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S01_AXI_awqos.bind(*p_8_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_awuser.bind(*p_8_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_awvalid.bind(*p_8_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_awready.bind(*p_8_S01_AXI_awready);
        p_8_S01_AXI_awready->set_sv_netview_offsetfromdp(11040464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S01_AXI_wdata.bind(*p_8_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S01_AXI_wstrb.bind(*p_8_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_wlast.bind(*p_8_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_wuser.bind(*p_8_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_wvalid.bind(*p_8_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_wready.bind(*p_8_S01_AXI_wready);
        p_8_S01_AXI_wready->set_sv_netview_offsetfromdp(11040800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_bid.bind(*p_8_S01_AXI_bid);
        p_8_S01_AXI_bid->set_sv_netview_offsetfromdp(11040856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S01_AXI_bresp.bind(*p_8_S01_AXI_bresp);
        p_8_S01_AXI_bresp->set_sv_netview_offsetfromdp(11040912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_buser.bind(*p_8_S01_AXI_buser);
        p_8_S01_AXI_buser->set_sv_netview_offsetfromdp(11040968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_bvalid.bind(*p_8_S01_AXI_bvalid);
        p_8_S01_AXI_bvalid->set_sv_netview_offsetfromdp(11041024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_bready.bind(*p_8_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_arid.bind(*p_8_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S01_AXI_araddr.bind(*p_8_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S01_AXI_arlen.bind(*p_8_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S01_AXI_arsize.bind(*p_8_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S01_AXI_arburst.bind(*p_8_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_8_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S01_AXI_arlock.bind(*p_8_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S01_AXI_arcache.bind(*p_8_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S01_AXI_arprot.bind(*p_8_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S01_AXI_arqos.bind(*p_8_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_aruser.bind(*p_8_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_arvalid.bind(*p_8_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_arready.bind(*p_8_S01_AXI_arready);
        p_8_S01_AXI_arready->set_sv_netview_offsetfromdp(11041752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_rid.bind(*p_8_S01_AXI_rid);
        p_8_S01_AXI_rid->set_sv_netview_offsetfromdp(11041808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S01_AXI_rdata.bind(*p_8_S01_AXI_rdata);
        p_8_S01_AXI_rdata->set_sv_netview_offsetfromdp(11041864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S01_AXI_rresp.bind(*p_8_S01_AXI_rresp);
        p_8_S01_AXI_rresp->set_sv_netview_offsetfromdp(11041920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_rlast.bind(*p_8_S01_AXI_rlast);
        p_8_S01_AXI_rlast->set_sv_netview_offsetfromdp(11041976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_ruser.bind(*p_8_S01_AXI_ruser);
        p_8_S01_AXI_ruser->set_sv_netview_offsetfromdp(11042032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_rvalid.bind(*p_8_S01_AXI_rvalid);
        p_8_S01_AXI_rvalid->set_sv_netview_offsetfromdp(11042088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S01_AXI_rready.bind(*p_8_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_awid.bind(*p_8_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S02_AXI_awaddr.bind(*p_8_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S02_AXI_awlen.bind(*p_8_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S02_AXI_awsize.bind(*p_8_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S02_AXI_awburst.bind(*p_8_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_8_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S02_AXI_awlock.bind(*p_8_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S02_AXI_awcache.bind(*p_8_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S02_AXI_awprot.bind(*p_8_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S02_AXI_awqos.bind(*p_8_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_awuser.bind(*p_8_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_awvalid.bind(*p_8_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_awready.bind(*p_8_S02_AXI_awready);
        p_8_S02_AXI_awready->set_sv_netview_offsetfromdp(11042816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S02_AXI_wdata.bind(*p_8_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S02_AXI_wstrb.bind(*p_8_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_wlast.bind(*p_8_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_wuser.bind(*p_8_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_wvalid.bind(*p_8_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_wready.bind(*p_8_S02_AXI_wready);
        p_8_S02_AXI_wready->set_sv_netview_offsetfromdp(11043152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_bid.bind(*p_8_S02_AXI_bid);
        p_8_S02_AXI_bid->set_sv_netview_offsetfromdp(11043208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S02_AXI_bresp.bind(*p_8_S02_AXI_bresp);
        p_8_S02_AXI_bresp->set_sv_netview_offsetfromdp(11043264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_buser.bind(*p_8_S02_AXI_buser);
        p_8_S02_AXI_buser->set_sv_netview_offsetfromdp(11043320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_bvalid.bind(*p_8_S02_AXI_bvalid);
        p_8_S02_AXI_bvalid->set_sv_netview_offsetfromdp(11043376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_bready.bind(*p_8_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_arid.bind(*p_8_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S02_AXI_araddr.bind(*p_8_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S02_AXI_arlen.bind(*p_8_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S02_AXI_arsize.bind(*p_8_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S02_AXI_arburst.bind(*p_8_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_8_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S02_AXI_arlock.bind(*p_8_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S02_AXI_arcache.bind(*p_8_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S02_AXI_arprot.bind(*p_8_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S02_AXI_arqos.bind(*p_8_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_aruser.bind(*p_8_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_arvalid.bind(*p_8_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_arready.bind(*p_8_S02_AXI_arready);
        p_8_S02_AXI_arready->set_sv_netview_offsetfromdp(11044104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_rid.bind(*p_8_S02_AXI_rid);
        p_8_S02_AXI_rid->set_sv_netview_offsetfromdp(11044160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S02_AXI_rdata.bind(*p_8_S02_AXI_rdata);
        p_8_S02_AXI_rdata->set_sv_netview_offsetfromdp(11044216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S02_AXI_rresp.bind(*p_8_S02_AXI_rresp);
        p_8_S02_AXI_rresp->set_sv_netview_offsetfromdp(11044272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_rlast.bind(*p_8_S02_AXI_rlast);
        p_8_S02_AXI_rlast->set_sv_netview_offsetfromdp(11044328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_ruser.bind(*p_8_S02_AXI_ruser);
        p_8_S02_AXI_ruser->set_sv_netview_offsetfromdp(11044384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_rvalid.bind(*p_8_S02_AXI_rvalid);
        p_8_S02_AXI_rvalid->set_sv_netview_offsetfromdp(11044440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S02_AXI_rready.bind(*p_8_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_awid.bind(*p_8_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S03_AXI_awaddr.bind(*p_8_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S03_AXI_awlen.bind(*p_8_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S03_AXI_awsize.bind(*p_8_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S03_AXI_awburst.bind(*p_8_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_8_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S03_AXI_awlock.bind(*p_8_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S03_AXI_awcache.bind(*p_8_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S03_AXI_awprot.bind(*p_8_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S03_AXI_awqos.bind(*p_8_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_awuser.bind(*p_8_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_awvalid.bind(*p_8_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_awready.bind(*p_8_S03_AXI_awready);
        p_8_S03_AXI_awready->set_sv_netview_offsetfromdp(11045168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S03_AXI_wdata.bind(*p_8_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S03_AXI_wstrb.bind(*p_8_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_wlast.bind(*p_8_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_wuser.bind(*p_8_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_wvalid.bind(*p_8_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_wready.bind(*p_8_S03_AXI_wready);
        p_8_S03_AXI_wready->set_sv_netview_offsetfromdp(11045504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_bid.bind(*p_8_S03_AXI_bid);
        p_8_S03_AXI_bid->set_sv_netview_offsetfromdp(11045560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S03_AXI_bresp.bind(*p_8_S03_AXI_bresp);
        p_8_S03_AXI_bresp->set_sv_netview_offsetfromdp(11045616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_buser.bind(*p_8_S03_AXI_buser);
        p_8_S03_AXI_buser->set_sv_netview_offsetfromdp(11045672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_bvalid.bind(*p_8_S03_AXI_bvalid);
        p_8_S03_AXI_bvalid->set_sv_netview_offsetfromdp(11045728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_bready.bind(*p_8_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_arid.bind(*p_8_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S03_AXI_araddr.bind(*p_8_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S03_AXI_arlen.bind(*p_8_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S03_AXI_arsize.bind(*p_8_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S03_AXI_arburst.bind(*p_8_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_8_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S03_AXI_arlock.bind(*p_8_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S03_AXI_arcache.bind(*p_8_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S03_AXI_arprot.bind(*p_8_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S03_AXI_arqos.bind(*p_8_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_aruser.bind(*p_8_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_arvalid.bind(*p_8_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_arready.bind(*p_8_S03_AXI_arready);
        p_8_S03_AXI_arready->set_sv_netview_offsetfromdp(11046456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_rid.bind(*p_8_S03_AXI_rid);
        p_8_S03_AXI_rid->set_sv_netview_offsetfromdp(11046512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S03_AXI_rdata.bind(*p_8_S03_AXI_rdata);
        p_8_S03_AXI_rdata->set_sv_netview_offsetfromdp(11046568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S03_AXI_rresp.bind(*p_8_S03_AXI_rresp);
        p_8_S03_AXI_rresp->set_sv_netview_offsetfromdp(11046624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_rlast.bind(*p_8_S03_AXI_rlast);
        p_8_S03_AXI_rlast->set_sv_netview_offsetfromdp(11046680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_ruser.bind(*p_8_S03_AXI_ruser);
        p_8_S03_AXI_ruser->set_sv_netview_offsetfromdp(11046736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_rvalid.bind(*p_8_S03_AXI_rvalid);
        p_8_S03_AXI_rvalid->set_sv_netview_offsetfromdp(11046792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S03_AXI_rready.bind(*p_8_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S04_AXI_awaddr.bind(*p_8_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S04_AXI_awlen.bind(*p_8_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S04_AXI_awsize.bind(*p_8_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_8_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S04_AXI_awlock.bind(*p_8_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S04_AXI_awcache.bind(*p_8_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S04_AXI_awprot.bind(*p_8_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S04_AXI_awregion.bind(*p_8_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S04_AXI_awqos.bind(*p_8_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_awvalid.bind(*p_8_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_awready.bind(*p_8_S04_AXI_awready);
        p_8_S04_AXI_awready->set_sv_netview_offsetfromdp(11047408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S04_AXI_wdata.bind(*p_8_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S04_AXI_wstrb.bind(*p_8_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_wlast.bind(*p_8_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_wvalid.bind(*p_8_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_wready.bind(*p_8_S04_AXI_wready);
        p_8_S04_AXI_wready->set_sv_netview_offsetfromdp(11047688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S04_AXI_bresp.bind(*p_8_S04_AXI_bresp);
        p_8_S04_AXI_bresp->set_sv_netview_offsetfromdp(11047744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_bvalid.bind(*p_8_S04_AXI_bvalid);
        p_8_S04_AXI_bvalid->set_sv_netview_offsetfromdp(11047800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_bready.bind(*p_8_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S04_AXI_araddr.bind(*p_8_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S04_AXI_arlen.bind(*p_8_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S04_AXI_arsize.bind(*p_8_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_8_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S04_AXI_arlock.bind(*p_8_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S04_AXI_arcache.bind(*p_8_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S04_AXI_arprot.bind(*p_8_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S04_AXI_arregion.bind(*p_8_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S04_AXI_arqos.bind(*p_8_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_arvalid.bind(*p_8_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_arready.bind(*p_8_S04_AXI_arready);
        p_8_S04_AXI_arready->set_sv_netview_offsetfromdp(11048416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S04_AXI_rdata.bind(*p_8_S04_AXI_rdata);
        p_8_S04_AXI_rdata->set_sv_netview_offsetfromdp(11048472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S04_AXI_rresp.bind(*p_8_S04_AXI_rresp);
        p_8_S04_AXI_rresp->set_sv_netview_offsetfromdp(11048528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_rlast.bind(*p_8_S04_AXI_rlast);
        p_8_S04_AXI_rlast->set_sv_netview_offsetfromdp(11048584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_rvalid.bind(*p_8_S04_AXI_rvalid);
        p_8_S04_AXI_rvalid->set_sv_netview_offsetfromdp(11048640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S04_AXI_rready.bind(*p_8_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S05_AXI_awaddr.bind(*p_8_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S05_AXI_awlen.bind(*p_8_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S05_AXI_awsize.bind(*p_8_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_8_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S05_AXI_awlock.bind(*p_8_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S05_AXI_awcache.bind(*p_8_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S05_AXI_awprot.bind(*p_8_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S05_AXI_awregion.bind(*p_8_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S05_AXI_awqos.bind(*p_8_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_awvalid.bind(*p_8_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_awready.bind(*p_8_S05_AXI_awready);
        p_8_S05_AXI_awready->set_sv_netview_offsetfromdp(11049256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S05_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S05_AXI_wdata.bind(*p_8_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S05_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S05_AXI_wstrb.bind(*p_8_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_wlast.bind(*p_8_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_wvalid.bind(*p_8_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_wready.bind(*p_8_S05_AXI_wready);
        p_8_S05_AXI_wready->set_sv_netview_offsetfromdp(11049536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S05_AXI_bresp.bind(*p_8_S05_AXI_bresp);
        p_8_S05_AXI_bresp->set_sv_netview_offsetfromdp(11049592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_bvalid.bind(*p_8_S05_AXI_bvalid);
        p_8_S05_AXI_bvalid->set_sv_netview_offsetfromdp(11049648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_bready.bind(*p_8_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S05_AXI_araddr.bind(*p_8_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S05_AXI_arlen.bind(*p_8_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S05_AXI_arsize.bind(*p_8_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_8_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S05_AXI_arlock.bind(*p_8_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S05_AXI_arcache.bind(*p_8_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S05_AXI_arprot.bind(*p_8_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S05_AXI_arregion.bind(*p_8_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S05_AXI_arqos.bind(*p_8_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_arvalid.bind(*p_8_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_arready.bind(*p_8_S05_AXI_arready);
        p_8_S05_AXI_arready->set_sv_netview_offsetfromdp(11050264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S05_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S05_AXI_rdata.bind(*p_8_S05_AXI_rdata);
        p_8_S05_AXI_rdata->set_sv_netview_offsetfromdp(11050320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S05_AXI_rresp.bind(*p_8_S05_AXI_rresp);
        p_8_S05_AXI_rresp->set_sv_netview_offsetfromdp(11050376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_rlast.bind(*p_8_S05_AXI_rlast);
        p_8_S05_AXI_rlast->set_sv_netview_offsetfromdp(11050432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_rvalid.bind(*p_8_S05_AXI_rvalid);
        p_8_S05_AXI_rvalid->set_sv_netview_offsetfromdp(11050488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S05_AXI_rready.bind(*p_8_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S05_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S06_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S06_AXI_awaddr.bind(*p_8_S06_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S06_AXI_awlen.bind(*p_8_S06_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S06_AXI_awsize.bind(*p_8_S06_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_awsize);
        xsim_sc_channel<0, bool > *p_8_S06_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S06_AXI_awlock.bind(*p_8_S06_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S06_AXI_awcache.bind(*p_8_S06_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S06_AXI_awprot.bind(*p_8_S06_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S06_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S06_AXI_awregion.bind(*p_8_S06_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S06_AXI_awqos.bind(*p_8_S06_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_awvalid.bind(*p_8_S06_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_awready.bind(*p_8_S06_AXI_awready);
        p_8_S06_AXI_awready->set_sv_netview_offsetfromdp(11051104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S06_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S06_AXI_wdata.bind(*p_8_S06_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S06_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S06_AXI_wstrb.bind(*p_8_S06_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_wlast.bind(*p_8_S06_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_wvalid.bind(*p_8_S06_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_wready.bind(*p_8_S06_AXI_wready);
        p_8_S06_AXI_wready->set_sv_netview_offsetfromdp(11051384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S06_AXI_bresp.bind(*p_8_S06_AXI_bresp);
        p_8_S06_AXI_bresp->set_sv_netview_offsetfromdp(11051440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_bvalid.bind(*p_8_S06_AXI_bvalid);
        p_8_S06_AXI_bvalid->set_sv_netview_offsetfromdp(11051496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_bready.bind(*p_8_S06_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S06_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S06_AXI_araddr.bind(*p_8_S06_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S06_AXI_arlen.bind(*p_8_S06_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S06_AXI_arsize.bind(*p_8_S06_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_arsize);
        xsim_sc_channel<0, bool > *p_8_S06_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S06_AXI_arlock.bind(*p_8_S06_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S06_AXI_arcache.bind(*p_8_S06_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S06_AXI_arprot.bind(*p_8_S06_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S06_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S06_AXI_arregion.bind(*p_8_S06_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S06_AXI_arqos.bind(*p_8_S06_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_arvalid.bind(*p_8_S06_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_arready.bind(*p_8_S06_AXI_arready);
        p_8_S06_AXI_arready->set_sv_netview_offsetfromdp(11052112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S06_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S06_AXI_rdata.bind(*p_8_S06_AXI_rdata);
        p_8_S06_AXI_rdata->set_sv_netview_offsetfromdp(11052168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S06_AXI_rresp.bind(*p_8_S06_AXI_rresp);
        p_8_S06_AXI_rresp->set_sv_netview_offsetfromdp(11052224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_rlast.bind(*p_8_S06_AXI_rlast);
        p_8_S06_AXI_rlast->set_sv_netview_offsetfromdp(11052280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_rvalid.bind(*p_8_S06_AXI_rvalid);
        p_8_S06_AXI_rvalid->set_sv_netview_offsetfromdp(11052336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S06_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S06_AXI_rready.bind(*p_8_S06_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S06_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S07_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S07_AXI_awaddr.bind(*p_8_S07_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S07_AXI_awlen.bind(*p_8_S07_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S07_AXI_awsize.bind(*p_8_S07_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_awsize);
        xsim_sc_channel<0, bool > *p_8_S07_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S07_AXI_awlock.bind(*p_8_S07_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S07_AXI_awcache.bind(*p_8_S07_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S07_AXI_awprot.bind(*p_8_S07_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S07_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S07_AXI_awregion.bind(*p_8_S07_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S07_AXI_awqos.bind(*p_8_S07_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_awvalid.bind(*p_8_S07_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_awready.bind(*p_8_S07_AXI_awready);
        p_8_S07_AXI_awready->set_sv_netview_offsetfromdp(11052952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S07_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S07_AXI_wdata.bind(*p_8_S07_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S07_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S07_AXI_wstrb.bind(*p_8_S07_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_wlast.bind(*p_8_S07_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_wvalid.bind(*p_8_S07_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_wready.bind(*p_8_S07_AXI_wready);
        p_8_S07_AXI_wready->set_sv_netview_offsetfromdp(11053232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S07_AXI_bresp.bind(*p_8_S07_AXI_bresp);
        p_8_S07_AXI_bresp->set_sv_netview_offsetfromdp(11053288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_bvalid.bind(*p_8_S07_AXI_bvalid);
        p_8_S07_AXI_bvalid->set_sv_netview_offsetfromdp(11053344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_bready.bind(*p_8_S07_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S07_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S07_AXI_araddr.bind(*p_8_S07_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S07_AXI_arlen.bind(*p_8_S07_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S07_AXI_arsize.bind(*p_8_S07_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_arsize);
        xsim_sc_channel<0, bool > *p_8_S07_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S07_AXI_arlock.bind(*p_8_S07_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S07_AXI_arcache.bind(*p_8_S07_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S07_AXI_arprot.bind(*p_8_S07_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S07_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S07_AXI_arregion.bind(*p_8_S07_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S07_AXI_arqos.bind(*p_8_S07_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_arvalid.bind(*p_8_S07_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_arready.bind(*p_8_S07_AXI_arready);
        p_8_S07_AXI_arready->set_sv_netview_offsetfromdp(11053960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S07_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S07_AXI_rdata.bind(*p_8_S07_AXI_rdata);
        p_8_S07_AXI_rdata->set_sv_netview_offsetfromdp(11054016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S07_AXI_rresp.bind(*p_8_S07_AXI_rresp);
        p_8_S07_AXI_rresp->set_sv_netview_offsetfromdp(11054072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_rlast.bind(*p_8_S07_AXI_rlast);
        p_8_S07_AXI_rlast->set_sv_netview_offsetfromdp(11054128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_rvalid.bind(*p_8_S07_AXI_rvalid);
        p_8_S07_AXI_rvalid->set_sv_netview_offsetfromdp(11054184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S07_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S07_AXI_rready.bind(*p_8_S07_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S07_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S08_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S08_AXI_awaddr.bind(*p_8_S08_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S08_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S08_AXI_awlen.bind(*p_8_S08_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S08_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S08_AXI_awsize.bind(*p_8_S08_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_awsize);
        xsim_sc_channel<0, bool > *p_8_S08_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S08_AXI_awlock.bind(*p_8_S08_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S08_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S08_AXI_awcache.bind(*p_8_S08_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S08_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S08_AXI_awprot.bind(*p_8_S08_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S08_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S08_AXI_awregion.bind(*p_8_S08_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S08_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S08_AXI_awqos.bind(*p_8_S08_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_awvalid.bind(*p_8_S08_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_awready.bind(*p_8_S08_AXI_awready);
        p_8_S08_AXI_awready->set_sv_netview_offsetfromdp(11054800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S08_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S08_AXI_wdata.bind(*p_8_S08_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S08_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S08_AXI_wstrb.bind(*p_8_S08_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_wlast.bind(*p_8_S08_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_wvalid.bind(*p_8_S08_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_wready.bind(*p_8_S08_AXI_wready);
        p_8_S08_AXI_wready->set_sv_netview_offsetfromdp(11055080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S08_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S08_AXI_bresp.bind(*p_8_S08_AXI_bresp);
        p_8_S08_AXI_bresp->set_sv_netview_offsetfromdp(11055136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_bvalid.bind(*p_8_S08_AXI_bvalid);
        p_8_S08_AXI_bvalid->set_sv_netview_offsetfromdp(11055192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_bready.bind(*p_8_S08_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_S08_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->S08_AXI_araddr.bind(*p_8_S08_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_S08_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->S08_AXI_arlen.bind(*p_8_S08_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S08_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S08_AXI_arsize.bind(*p_8_S08_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_arsize);
        xsim_sc_channel<0, bool > *p_8_S08_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->S08_AXI_arlock.bind(*p_8_S08_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S08_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S08_AXI_arcache.bind(*p_8_S08_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_S08_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->S08_AXI_arprot.bind(*p_8_S08_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S08_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S08_AXI_arregion.bind(*p_8_S08_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_S08_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->S08_AXI_arqos.bind(*p_8_S08_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_arvalid.bind(*p_8_S08_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_arready.bind(*p_8_S08_AXI_arready);
        p_8_S08_AXI_arready->set_sv_netview_offsetfromdp(11055808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_S08_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->S08_AXI_rdata.bind(*p_8_S08_AXI_rdata);
        p_8_S08_AXI_rdata->set_sv_netview_offsetfromdp(11055864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_S08_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->S08_AXI_rresp.bind(*p_8_S08_AXI_rresp);
        p_8_S08_AXI_rresp->set_sv_netview_offsetfromdp(11055920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_rlast.bind(*p_8_S08_AXI_rlast);
        p_8_S08_AXI_rlast->set_sv_netview_offsetfromdp(11055976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_rvalid.bind(*p_8_S08_AXI_rvalid);
        p_8_S08_AXI_rvalid->set_sv_netview_offsetfromdp(11056032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_S08_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->S08_AXI_rready.bind(*p_8_S08_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_S08_AXI_rready);
        xsim_sc_channel<0, bool > *p_8_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_8->ddr4_mem_calib_complete.bind(*p_8_ddr4_mem_calib_complete);
        p_8_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(11056144);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M00_AXI_awid.bind(*p_8_M00_AXI_awid);
        p_8_M00_AXI_awid->set_sv_netview_offsetfromdp(11056200);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->M00_AXI_awaddr.bind(*p_8_M00_AXI_awaddr);
        p_8_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11056256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->M00_AXI_awlen.bind(*p_8_M00_AXI_awlen);
        p_8_M00_AXI_awlen->set_sv_netview_offsetfromdp(11056312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M00_AXI_awsize.bind(*p_8_M00_AXI_awsize);
        p_8_M00_AXI_awsize->set_sv_netview_offsetfromdp(11056368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M00_AXI_awburst.bind(*p_8_M00_AXI_awburst);
        p_8_M00_AXI_awburst->set_sv_netview_offsetfromdp(11056424);
        xsim_sc_channel<0, bool > *p_8_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->M00_AXI_awlock.bind(*p_8_M00_AXI_awlock);
        p_8_M00_AXI_awlock->set_sv_netview_offsetfromdp(11056480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M00_AXI_awcache.bind(*p_8_M00_AXI_awcache);
        p_8_M00_AXI_awcache->set_sv_netview_offsetfromdp(11056536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M00_AXI_awprot.bind(*p_8_M00_AXI_awprot);
        p_8_M00_AXI_awprot->set_sv_netview_offsetfromdp(11056592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M00_AXI_awqos.bind(*p_8_M00_AXI_awqos);
        p_8_M00_AXI_awqos->set_sv_netview_offsetfromdp(11056648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->M00_AXI_awuser.bind(*p_8_M00_AXI_awuser);
        p_8_M00_AXI_awuser->set_sv_netview_offsetfromdp(11056704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_awvalid.bind(*p_8_M00_AXI_awvalid);
        p_8_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11056760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_awready.bind(*p_8_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->M00_AXI_wdata.bind(*p_8_M00_AXI_wdata);
        p_8_M00_AXI_wdata->set_sv_netview_offsetfromdp(11056872);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->M00_AXI_wstrb.bind(*p_8_M00_AXI_wstrb);
        p_8_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11056928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_wlast.bind(*p_8_M00_AXI_wlast);
        p_8_M00_AXI_wlast->set_sv_netview_offsetfromdp(11056984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_wuser.bind(*p_8_M00_AXI_wuser);
        p_8_M00_AXI_wuser->set_sv_netview_offsetfromdp(11057040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_wvalid.bind(*p_8_M00_AXI_wvalid);
        p_8_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11057096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_wready.bind(*p_8_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M00_AXI_bid.bind(*p_8_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M00_AXI_bresp.bind(*p_8_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_buser.bind(*p_8_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_bvalid.bind(*p_8_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_bready.bind(*p_8_M00_AXI_bready);
        p_8_M00_AXI_bready->set_sv_netview_offsetfromdp(11057432);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M00_AXI_arid.bind(*p_8_M00_AXI_arid);
        p_8_M00_AXI_arid->set_sv_netview_offsetfromdp(11057488);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->M00_AXI_araddr.bind(*p_8_M00_AXI_araddr);
        p_8_M00_AXI_araddr->set_sv_netview_offsetfromdp(11057544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->M00_AXI_arlen.bind(*p_8_M00_AXI_arlen);
        p_8_M00_AXI_arlen->set_sv_netview_offsetfromdp(11057600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M00_AXI_arsize.bind(*p_8_M00_AXI_arsize);
        p_8_M00_AXI_arsize->set_sv_netview_offsetfromdp(11057656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M00_AXI_arburst.bind(*p_8_M00_AXI_arburst);
        p_8_M00_AXI_arburst->set_sv_netview_offsetfromdp(11057712);
        xsim_sc_channel<0, bool > *p_8_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->M00_AXI_arlock.bind(*p_8_M00_AXI_arlock);
        p_8_M00_AXI_arlock->set_sv_netview_offsetfromdp(11057768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M00_AXI_arcache.bind(*p_8_M00_AXI_arcache);
        p_8_M00_AXI_arcache->set_sv_netview_offsetfromdp(11057824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M00_AXI_arprot.bind(*p_8_M00_AXI_arprot);
        p_8_M00_AXI_arprot->set_sv_netview_offsetfromdp(11057880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M00_AXI_arqos.bind(*p_8_M00_AXI_arqos);
        p_8_M00_AXI_arqos->set_sv_netview_offsetfromdp(11057936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->M00_AXI_aruser.bind(*p_8_M00_AXI_aruser);
        p_8_M00_AXI_aruser->set_sv_netview_offsetfromdp(11057992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_arvalid.bind(*p_8_M00_AXI_arvalid);
        p_8_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11058048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_arready.bind(*p_8_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M00_AXI_rid.bind(*p_8_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->M00_AXI_rdata.bind(*p_8_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M00_AXI_rresp.bind(*p_8_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_rlast.bind(*p_8_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_ruser.bind(*p_8_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_rvalid.bind(*p_8_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M00_AXI_rready.bind(*p_8_M00_AXI_rready);
        p_8_M00_AXI_rready->set_sv_netview_offsetfromdp(11058496);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_8_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_8->M01_AXI_awaddr.bind(*p_8_M01_AXI_awaddr);
        p_8_M01_AXI_awaddr->set_sv_netview_offsetfromdp(11058552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->M01_AXI_awlen.bind(*p_8_M01_AXI_awlen);
        p_8_M01_AXI_awlen->set_sv_netview_offsetfromdp(11058608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M01_AXI_awsize.bind(*p_8_M01_AXI_awsize);
        p_8_M01_AXI_awsize->set_sv_netview_offsetfromdp(11058664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M01_AXI_awburst.bind(*p_8_M01_AXI_awburst);
        p_8_M01_AXI_awburst->set_sv_netview_offsetfromdp(11058720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M01_AXI_awprot.bind(*p_8_M01_AXI_awprot);
        p_8_M01_AXI_awprot->set_sv_netview_offsetfromdp(11058776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_awvalid.bind(*p_8_M01_AXI_awvalid);
        p_8_M01_AXI_awvalid->set_sv_netview_offsetfromdp(11058832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_awready.bind(*p_8_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->M01_AXI_wdata.bind(*p_8_M01_AXI_wdata);
        p_8_M01_AXI_wdata->set_sv_netview_offsetfromdp(11058944);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->M01_AXI_wstrb.bind(*p_8_M01_AXI_wstrb);
        p_8_M01_AXI_wstrb->set_sv_netview_offsetfromdp(11059000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_wlast.bind(*p_8_M01_AXI_wlast);
        p_8_M01_AXI_wlast->set_sv_netview_offsetfromdp(11059056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_wvalid.bind(*p_8_M01_AXI_wvalid);
        p_8_M01_AXI_wvalid->set_sv_netview_offsetfromdp(11059112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_wready.bind(*p_8_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M01_AXI_bresp.bind(*p_8_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_bvalid.bind(*p_8_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_bready.bind(*p_8_M01_AXI_bready);
        p_8_M01_AXI_bready->set_sv_netview_offsetfromdp(11059336);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_8_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_8->M01_AXI_araddr.bind(*p_8_M01_AXI_araddr);
        p_8_M01_AXI_araddr->set_sv_netview_offsetfromdp(11059392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->M01_AXI_arlen.bind(*p_8_M01_AXI_arlen);
        p_8_M01_AXI_arlen->set_sv_netview_offsetfromdp(11059448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M01_AXI_arsize.bind(*p_8_M01_AXI_arsize);
        p_8_M01_AXI_arsize->set_sv_netview_offsetfromdp(11059504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M01_AXI_arburst.bind(*p_8_M01_AXI_arburst);
        p_8_M01_AXI_arburst->set_sv_netview_offsetfromdp(11059560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M01_AXI_arprot.bind(*p_8_M01_AXI_arprot);
        p_8_M01_AXI_arprot->set_sv_netview_offsetfromdp(11059616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_arvalid.bind(*p_8_M01_AXI_arvalid);
        p_8_M01_AXI_arvalid->set_sv_netview_offsetfromdp(11059672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_arready.bind(*p_8_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->M01_AXI_rdata.bind(*p_8_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M01_AXI_rresp.bind(*p_8_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_rlast.bind(*p_8_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_rvalid.bind(*p_8_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M01_AXI_rready.bind(*p_8_M01_AXI_rready);
        p_8_M01_AXI_rready->set_sv_netview_offsetfromdp(11060008);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M02_AXI_awid.bind(*p_8_M02_AXI_awid);
        p_8_M02_AXI_awid->set_sv_netview_offsetfromdp(11060064);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->M02_AXI_awaddr.bind(*p_8_M02_AXI_awaddr);
        p_8_M02_AXI_awaddr->set_sv_netview_offsetfromdp(11060120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->M02_AXI_awlen.bind(*p_8_M02_AXI_awlen);
        p_8_M02_AXI_awlen->set_sv_netview_offsetfromdp(11060176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M02_AXI_awsize.bind(*p_8_M02_AXI_awsize);
        p_8_M02_AXI_awsize->set_sv_netview_offsetfromdp(11060232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M02_AXI_awburst.bind(*p_8_M02_AXI_awburst);
        p_8_M02_AXI_awburst->set_sv_netview_offsetfromdp(11060288);
        xsim_sc_channel<0, bool > *p_8_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->M02_AXI_awlock.bind(*p_8_M02_AXI_awlock);
        p_8_M02_AXI_awlock->set_sv_netview_offsetfromdp(11060344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M02_AXI_awcache.bind(*p_8_M02_AXI_awcache);
        p_8_M02_AXI_awcache->set_sv_netview_offsetfromdp(11060400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M02_AXI_awprot.bind(*p_8_M02_AXI_awprot);
        p_8_M02_AXI_awprot->set_sv_netview_offsetfromdp(11060456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M02_AXI_awqos.bind(*p_8_M02_AXI_awqos);
        p_8_M02_AXI_awqos->set_sv_netview_offsetfromdp(11060512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->M02_AXI_awuser.bind(*p_8_M02_AXI_awuser);
        p_8_M02_AXI_awuser->set_sv_netview_offsetfromdp(11060568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_awvalid.bind(*p_8_M02_AXI_awvalid);
        p_8_M02_AXI_awvalid->set_sv_netview_offsetfromdp(11060624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_awready.bind(*p_8_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->M02_AXI_wdata.bind(*p_8_M02_AXI_wdata);
        p_8_M02_AXI_wdata->set_sv_netview_offsetfromdp(11060736);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->M02_AXI_wstrb.bind(*p_8_M02_AXI_wstrb);
        p_8_M02_AXI_wstrb->set_sv_netview_offsetfromdp(11060792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_wlast.bind(*p_8_M02_AXI_wlast);
        p_8_M02_AXI_wlast->set_sv_netview_offsetfromdp(11060848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_wuser.bind(*p_8_M02_AXI_wuser);
        p_8_M02_AXI_wuser->set_sv_netview_offsetfromdp(11060904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_wvalid.bind(*p_8_M02_AXI_wvalid);
        p_8_M02_AXI_wvalid->set_sv_netview_offsetfromdp(11060960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_wready.bind(*p_8_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M02_AXI_bid.bind(*p_8_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M02_AXI_bresp.bind(*p_8_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_buser.bind(*p_8_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_bvalid.bind(*p_8_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_bready.bind(*p_8_M02_AXI_bready);
        p_8_M02_AXI_bready->set_sv_netview_offsetfromdp(11061296);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M02_AXI_arid.bind(*p_8_M02_AXI_arid);
        p_8_M02_AXI_arid->set_sv_netview_offsetfromdp(11061352);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->M02_AXI_araddr.bind(*p_8_M02_AXI_araddr);
        p_8_M02_AXI_araddr->set_sv_netview_offsetfromdp(11061408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->M02_AXI_arlen.bind(*p_8_M02_AXI_arlen);
        p_8_M02_AXI_arlen->set_sv_netview_offsetfromdp(11061464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M02_AXI_arsize.bind(*p_8_M02_AXI_arsize);
        p_8_M02_AXI_arsize->set_sv_netview_offsetfromdp(11061520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M02_AXI_arburst.bind(*p_8_M02_AXI_arburst);
        p_8_M02_AXI_arburst->set_sv_netview_offsetfromdp(11061576);
        xsim_sc_channel<0, bool > *p_8_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->M02_AXI_arlock.bind(*p_8_M02_AXI_arlock);
        p_8_M02_AXI_arlock->set_sv_netview_offsetfromdp(11061632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M02_AXI_arcache.bind(*p_8_M02_AXI_arcache);
        p_8_M02_AXI_arcache->set_sv_netview_offsetfromdp(11061688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M02_AXI_arprot.bind(*p_8_M02_AXI_arprot);
        p_8_M02_AXI_arprot->set_sv_netview_offsetfromdp(11061744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M02_AXI_arqos.bind(*p_8_M02_AXI_arqos);
        p_8_M02_AXI_arqos->set_sv_netview_offsetfromdp(11061800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->M02_AXI_aruser.bind(*p_8_M02_AXI_aruser);
        p_8_M02_AXI_aruser->set_sv_netview_offsetfromdp(11061856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_arvalid.bind(*p_8_M02_AXI_arvalid);
        p_8_M02_AXI_arvalid->set_sv_netview_offsetfromdp(11061912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_arready.bind(*p_8_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M02_AXI_rid.bind(*p_8_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->M02_AXI_rdata.bind(*p_8_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M02_AXI_rresp.bind(*p_8_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_rlast.bind(*p_8_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_ruser.bind(*p_8_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_rvalid.bind(*p_8_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M02_AXI_rready.bind(*p_8_M02_AXI_rready);
        p_8_M02_AXI_rready->set_sv_netview_offsetfromdp(11062360);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M03_AXI_awid.bind(*p_8_M03_AXI_awid);
        p_8_M03_AXI_awid->set_sv_netview_offsetfromdp(11062416);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->M03_AXI_awaddr.bind(*p_8_M03_AXI_awaddr);
        p_8_M03_AXI_awaddr->set_sv_netview_offsetfromdp(11062472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->M03_AXI_awlen.bind(*p_8_M03_AXI_awlen);
        p_8_M03_AXI_awlen->set_sv_netview_offsetfromdp(11062528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M03_AXI_awsize.bind(*p_8_M03_AXI_awsize);
        p_8_M03_AXI_awsize->set_sv_netview_offsetfromdp(11062584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M03_AXI_awburst.bind(*p_8_M03_AXI_awburst);
        p_8_M03_AXI_awburst->set_sv_netview_offsetfromdp(11062640);
        xsim_sc_channel<0, bool > *p_8_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->M03_AXI_awlock.bind(*p_8_M03_AXI_awlock);
        p_8_M03_AXI_awlock->set_sv_netview_offsetfromdp(11062696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M03_AXI_awcache.bind(*p_8_M03_AXI_awcache);
        p_8_M03_AXI_awcache->set_sv_netview_offsetfromdp(11062752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M03_AXI_awprot.bind(*p_8_M03_AXI_awprot);
        p_8_M03_AXI_awprot->set_sv_netview_offsetfromdp(11062808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M03_AXI_awqos.bind(*p_8_M03_AXI_awqos);
        p_8_M03_AXI_awqos->set_sv_netview_offsetfromdp(11062864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->M03_AXI_awuser.bind(*p_8_M03_AXI_awuser);
        p_8_M03_AXI_awuser->set_sv_netview_offsetfromdp(11062920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_awvalid.bind(*p_8_M03_AXI_awvalid);
        p_8_M03_AXI_awvalid->set_sv_netview_offsetfromdp(11062976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_awready.bind(*p_8_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->M03_AXI_wdata.bind(*p_8_M03_AXI_wdata);
        p_8_M03_AXI_wdata->set_sv_netview_offsetfromdp(11063088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->M03_AXI_wstrb.bind(*p_8_M03_AXI_wstrb);
        p_8_M03_AXI_wstrb->set_sv_netview_offsetfromdp(11063144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_wlast.bind(*p_8_M03_AXI_wlast);
        p_8_M03_AXI_wlast->set_sv_netview_offsetfromdp(11063200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_wuser.bind(*p_8_M03_AXI_wuser);
        p_8_M03_AXI_wuser->set_sv_netview_offsetfromdp(11063256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_wvalid.bind(*p_8_M03_AXI_wvalid);
        p_8_M03_AXI_wvalid->set_sv_netview_offsetfromdp(11063312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_wready.bind(*p_8_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M03_AXI_bid.bind(*p_8_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M03_AXI_bresp.bind(*p_8_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_buser.bind(*p_8_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_bvalid.bind(*p_8_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_bready.bind(*p_8_M03_AXI_bready);
        p_8_M03_AXI_bready->set_sv_netview_offsetfromdp(11063648);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M03_AXI_arid.bind(*p_8_M03_AXI_arid);
        p_8_M03_AXI_arid->set_sv_netview_offsetfromdp(11063704);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->M03_AXI_araddr.bind(*p_8_M03_AXI_araddr);
        p_8_M03_AXI_araddr->set_sv_netview_offsetfromdp(11063760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->M03_AXI_arlen.bind(*p_8_M03_AXI_arlen);
        p_8_M03_AXI_arlen->set_sv_netview_offsetfromdp(11063816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M03_AXI_arsize.bind(*p_8_M03_AXI_arsize);
        p_8_M03_AXI_arsize->set_sv_netview_offsetfromdp(11063872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M03_AXI_arburst.bind(*p_8_M03_AXI_arburst);
        p_8_M03_AXI_arburst->set_sv_netview_offsetfromdp(11063928);
        xsim_sc_channel<0, bool > *p_8_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->M03_AXI_arlock.bind(*p_8_M03_AXI_arlock);
        p_8_M03_AXI_arlock->set_sv_netview_offsetfromdp(11063984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M03_AXI_arcache.bind(*p_8_M03_AXI_arcache);
        p_8_M03_AXI_arcache->set_sv_netview_offsetfromdp(11064040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->M03_AXI_arprot.bind(*p_8_M03_AXI_arprot);
        p_8_M03_AXI_arprot->set_sv_netview_offsetfromdp(11064096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->M03_AXI_arqos.bind(*p_8_M03_AXI_arqos);
        p_8_M03_AXI_arqos->set_sv_netview_offsetfromdp(11064152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->M03_AXI_aruser.bind(*p_8_M03_AXI_aruser);
        p_8_M03_AXI_aruser->set_sv_netview_offsetfromdp(11064208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_arvalid.bind(*p_8_M03_AXI_arvalid);
        p_8_M03_AXI_arvalid->set_sv_netview_offsetfromdp(11064264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_arready.bind(*p_8_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->M03_AXI_rid.bind(*p_8_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->M03_AXI_rdata.bind(*p_8_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->M03_AXI_rresp.bind(*p_8_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_rlast.bind(*p_8_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_ruser.bind(*p_8_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_rvalid.bind(*p_8_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->M03_AXI_rready.bind(*p_8_M03_AXI_rready);
        p_8_M03_AXI_rready->set_sv_netview_offsetfromdp(11064712);
        sc_inst_9 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_9->xsim_set_dbg_index(31);
        sc_inst_10 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_10->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_10_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ui_clk.bind(*p_10_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_awid.bind(*p_10_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_awaddr.bind(*p_10_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_awlen.bind(*p_10_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awsize.bind(*p_10_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_awburst.bind(*p_10_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awlock.bind(*p_10_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awcache.bind(*p_10_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awprot.bind(*p_10_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awregion.bind(*p_10_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awqos.bind(*p_10_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_awuser.bind(*p_10_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awvalid.bind(*p_10_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awready.bind(*p_10_c0_ddr_saxi_awready);
        p_10_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(11065592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_wdata.bind(*p_10_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->c0_ddr_saxi_wstrb.bind(*p_10_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wlast.bind(*p_10_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_wuser.bind(*p_10_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wvalid.bind(*p_10_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wready.bind(*p_10_c0_ddr_saxi_wready);
        p_10_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(11065928);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_bid.bind(*p_10_c0_ddr_saxi_bid);
        p_10_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(11065984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_bresp.bind(*p_10_c0_ddr_saxi_bresp);
        p_10_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(11066040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_buser.bind(*p_10_c0_ddr_saxi_buser);
        p_10_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(11066096);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bvalid.bind(*p_10_c0_ddr_saxi_bvalid);
        p_10_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(11066152);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bready.bind(*p_10_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_arid.bind(*p_10_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_araddr.bind(*p_10_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_arlen.bind(*p_10_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arsize.bind(*p_10_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_arburst.bind(*p_10_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arlock.bind(*p_10_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arcache.bind(*p_10_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arprot.bind(*p_10_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arregion.bind(*p_10_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arqos.bind(*p_10_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_aruser.bind(*p_10_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arvalid.bind(*p_10_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arready.bind(*p_10_c0_ddr_saxi_arready);
        p_10_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(11066936);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_rid.bind(*p_10_c0_ddr_saxi_rid);
        p_10_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(11066992);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_rdata.bind(*p_10_c0_ddr_saxi_rdata);
        p_10_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(11067048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_rresp.bind(*p_10_c0_ddr_saxi_rresp);
        p_10_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(11067104);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rlast.bind(*p_10_c0_ddr_saxi_rlast);
        p_10_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(11067160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_ruser.bind(*p_10_c0_ddr_saxi_ruser);
        p_10_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(11067216);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rvalid.bind(*p_10_c0_ddr_saxi_rvalid);
        p_10_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(11067272);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rready.bind(*p_10_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aclk.bind(*p_10_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aresetn.bind(*p_10_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_awid.bind(*p_10_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awaddr.bind(*p_10_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_awlen.bind(*p_10_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awsize.bind(*p_10_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_awburst.bind(*p_10_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awlock.bind(*p_10_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awcache.bind(*p_10_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awprot.bind(*p_10_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awregion.bind(*p_10_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awqos.bind(*p_10_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awuser.bind(*p_10_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awvalid.bind(*p_10_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awready.bind(*p_10_s_xdma_axi_awready);
        p_10_s_xdma_axi_awready->set_sv_netview_offsetfromdp(11068168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_wdata.bind(*p_10_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_wstrb.bind(*p_10_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wlast.bind(*p_10_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_wuser.bind(*p_10_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wvalid.bind(*p_10_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wready.bind(*p_10_s_xdma_axi_wready);
        p_10_s_xdma_axi_wready->set_sv_netview_offsetfromdp(11068504);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_bid.bind(*p_10_s_xdma_axi_bid);
        p_10_s_xdma_axi_bid->set_sv_netview_offsetfromdp(11068560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_bresp.bind(*p_10_s_xdma_axi_bresp);
        p_10_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(11068616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_buser.bind(*p_10_s_xdma_axi_buser);
        p_10_s_xdma_axi_buser->set_sv_netview_offsetfromdp(11068672);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bvalid.bind(*p_10_s_xdma_axi_bvalid);
        p_10_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(11068728);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bready.bind(*p_10_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_arid.bind(*p_10_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_araddr.bind(*p_10_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_arlen.bind(*p_10_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arsize.bind(*p_10_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_arburst.bind(*p_10_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arlock.bind(*p_10_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arcache.bind(*p_10_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arprot.bind(*p_10_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arregion.bind(*p_10_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arqos.bind(*p_10_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_aruser.bind(*p_10_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arvalid.bind(*p_10_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arready.bind(*p_10_s_xdma_axi_arready);
        p_10_s_xdma_axi_arready->set_sv_netview_offsetfromdp(11069512);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_rid.bind(*p_10_s_xdma_axi_rid);
        p_10_s_xdma_axi_rid->set_sv_netview_offsetfromdp(11069568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_rdata.bind(*p_10_s_xdma_axi_rdata);
        p_10_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(11069624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_rresp.bind(*p_10_s_xdma_axi_rresp);
        p_10_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(11069680);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rlast.bind(*p_10_s_xdma_axi_rlast);
        p_10_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(11069736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_ruser.bind(*p_10_s_xdma_axi_ruser);
        p_10_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(11069792);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rvalid.bind(*p_10_s_xdma_axi_rvalid);
        p_10_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(11069848);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rready.bind(*p_10_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aclk.bind(*p_10_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aresetn.bind(*p_10_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_xdma_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_11->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_11_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ui_clk.bind(*p_11_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_awid.bind(*p_11_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_11_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_11->c0_ddr_saxi_awaddr.bind(*p_11_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->c0_ddr_saxi_awlen.bind(*p_11_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_awsize.bind(*p_11_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_awburst.bind(*p_11_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_awlock.bind(*p_11_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_awcache.bind(*p_11_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_awprot.bind(*p_11_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_awregion.bind(*p_11_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_awqos.bind(*p_11_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->c0_ddr_saxi_awuser.bind(*p_11_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_awvalid.bind(*p_11_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_awready.bind(*p_11_c0_ddr_saxi_awready);
        p_11_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(11070848);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_11_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_11->c0_ddr_saxi_wdata.bind(*p_11_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->c0_ddr_saxi_wstrb.bind(*p_11_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_wlast.bind(*p_11_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->c0_ddr_saxi_wuser.bind(*p_11_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_wvalid.bind(*p_11_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_wready.bind(*p_11_c0_ddr_saxi_wready);
        p_11_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(11071184);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_bid.bind(*p_11_c0_ddr_saxi_bid);
        p_11_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(11071240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_bresp.bind(*p_11_c0_ddr_saxi_bresp);
        p_11_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(11071296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->c0_ddr_saxi_buser.bind(*p_11_c0_ddr_saxi_buser);
        p_11_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(11071352);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_bvalid.bind(*p_11_c0_ddr_saxi_bvalid);
        p_11_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(11071408);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_bready.bind(*p_11_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_arid.bind(*p_11_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_11_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_11->c0_ddr_saxi_araddr.bind(*p_11_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->c0_ddr_saxi_arlen.bind(*p_11_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_arsize.bind(*p_11_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_arburst.bind(*p_11_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_arlock.bind(*p_11_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_arcache.bind(*p_11_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_arprot.bind(*p_11_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_arregion.bind(*p_11_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_arqos.bind(*p_11_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->c0_ddr_saxi_aruser.bind(*p_11_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_arvalid.bind(*p_11_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_arready.bind(*p_11_c0_ddr_saxi_arready);
        p_11_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(11072192);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_rid.bind(*p_11_c0_ddr_saxi_rid);
        p_11_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(11072248);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_11_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_11->c0_ddr_saxi_rdata.bind(*p_11_c0_ddr_saxi_rdata);
        p_11_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(11072304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_rresp.bind(*p_11_c0_ddr_saxi_rresp);
        p_11_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(11072360);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_rlast.bind(*p_11_c0_ddr_saxi_rlast);
        p_11_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(11072416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->c0_ddr_saxi_ruser.bind(*p_11_c0_ddr_saxi_ruser);
        p_11_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(11072472);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_rvalid.bind(*p_11_c0_ddr_saxi_rvalid);
        p_11_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(11072528);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_rready.bind(*p_11_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_aclk.bind(*p_11_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_aresetn.bind(*p_11_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_awid.bind(*p_11_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_awaddr.bind(*p_11_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_xdma_axi_awlen.bind(*p_11_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_awsize.bind(*p_11_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_awburst.bind(*p_11_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_awlock.bind(*p_11_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_awcache.bind(*p_11_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_awprot.bind(*p_11_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_awregion.bind(*p_11_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_awqos.bind(*p_11_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_awuser.bind(*p_11_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_awvalid.bind(*p_11_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_awready.bind(*p_11_s_xdma_axi_awready);
        p_11_s_xdma_axi_awready->set_sv_netview_offsetfromdp(11073424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_wdata.bind(*p_11_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_wstrb.bind(*p_11_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_wlast.bind(*p_11_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_xdma_axi_wuser.bind(*p_11_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_wvalid.bind(*p_11_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_wready.bind(*p_11_s_xdma_axi_wready);
        p_11_s_xdma_axi_wready->set_sv_netview_offsetfromdp(11073760);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_bid.bind(*p_11_s_xdma_axi_bid);
        p_11_s_xdma_axi_bid->set_sv_netview_offsetfromdp(11073816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_bresp.bind(*p_11_s_xdma_axi_bresp);
        p_11_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(11073872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_xdma_axi_buser.bind(*p_11_s_xdma_axi_buser);
        p_11_s_xdma_axi_buser->set_sv_netview_offsetfromdp(11073928);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_bvalid.bind(*p_11_s_xdma_axi_bvalid);
        p_11_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(11073984);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_bready.bind(*p_11_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_arid.bind(*p_11_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_araddr.bind(*p_11_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_xdma_axi_arlen.bind(*p_11_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_arsize.bind(*p_11_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_arburst.bind(*p_11_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_arlock.bind(*p_11_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_arcache.bind(*p_11_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_arprot.bind(*p_11_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_arregion.bind(*p_11_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_arqos.bind(*p_11_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_aruser.bind(*p_11_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_arvalid.bind(*p_11_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_arready.bind(*p_11_s_xdma_axi_arready);
        p_11_s_xdma_axi_arready->set_sv_netview_offsetfromdp(11074768);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_rid.bind(*p_11_s_xdma_axi_rid);
        p_11_s_xdma_axi_rid->set_sv_netview_offsetfromdp(11074824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_rdata.bind(*p_11_s_xdma_axi_rdata);
        p_11_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(11074880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_rresp.bind(*p_11_s_xdma_axi_rresp);
        p_11_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(11074936);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_rlast.bind(*p_11_s_xdma_axi_rlast);
        p_11_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(11074992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_xdma_axi_ruser.bind(*p_11_s_xdma_axi_ruser);
        p_11_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(11075048);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_rvalid.bind(*p_11_s_xdma_axi_rvalid);
        p_11_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(11075104);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_rready.bind(*p_11_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_aclk.bind(*p_11_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_aresetn.bind(*p_11_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_xdma_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_12->xsim_set_dbg_index(34);
        xsim_sc_channel<0, bool > *p_12_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ui_clk.bind(*p_12_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->c0_ddr_saxi_awid.bind(*p_12_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_12_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_12->c0_ddr_saxi_awaddr.bind(*p_12_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->c0_ddr_saxi_awlen.bind(*p_12_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->c0_ddr_saxi_awsize.bind(*p_12_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->c0_ddr_saxi_awburst.bind(*p_12_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_awlock.bind(*p_12_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_awcache.bind(*p_12_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->c0_ddr_saxi_awprot.bind(*p_12_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_awregion.bind(*p_12_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_awqos.bind(*p_12_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->c0_ddr_saxi_awuser.bind(*p_12_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_awvalid.bind(*p_12_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_awready.bind(*p_12_c0_ddr_saxi_awready);
        p_12_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(11076104);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->c0_ddr_saxi_wdata.bind(*p_12_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->c0_ddr_saxi_wstrb.bind(*p_12_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_wlast.bind(*p_12_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->c0_ddr_saxi_wuser.bind(*p_12_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_wvalid.bind(*p_12_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_wready.bind(*p_12_c0_ddr_saxi_wready);
        p_12_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(11076440);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->c0_ddr_saxi_bid.bind(*p_12_c0_ddr_saxi_bid);
        p_12_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(11076496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->c0_ddr_saxi_bresp.bind(*p_12_c0_ddr_saxi_bresp);
        p_12_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(11076552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->c0_ddr_saxi_buser.bind(*p_12_c0_ddr_saxi_buser);
        p_12_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(11076608);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_bvalid.bind(*p_12_c0_ddr_saxi_bvalid);
        p_12_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(11076664);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_bready.bind(*p_12_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->c0_ddr_saxi_arid.bind(*p_12_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_12_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_12->c0_ddr_saxi_araddr.bind(*p_12_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->c0_ddr_saxi_arlen.bind(*p_12_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->c0_ddr_saxi_arsize.bind(*p_12_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->c0_ddr_saxi_arburst.bind(*p_12_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_arlock.bind(*p_12_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_arcache.bind(*p_12_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->c0_ddr_saxi_arprot.bind(*p_12_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_arregion.bind(*p_12_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->c0_ddr_saxi_arqos.bind(*p_12_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->c0_ddr_saxi_aruser.bind(*p_12_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_arvalid.bind(*p_12_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_arready.bind(*p_12_c0_ddr_saxi_arready);
        p_12_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(11077448);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->c0_ddr_saxi_rid.bind(*p_12_c0_ddr_saxi_rid);
        p_12_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(11077504);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->c0_ddr_saxi_rdata.bind(*p_12_c0_ddr_saxi_rdata);
        p_12_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(11077560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->c0_ddr_saxi_rresp.bind(*p_12_c0_ddr_saxi_rresp);
        p_12_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(11077616);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_rlast.bind(*p_12_c0_ddr_saxi_rlast);
        p_12_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(11077672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->c0_ddr_saxi_ruser.bind(*p_12_c0_ddr_saxi_ruser);
        p_12_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(11077728);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_rvalid.bind(*p_12_c0_ddr_saxi_rvalid);
        p_12_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(11077784);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_rready.bind(*p_12_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_aclk.bind(*p_12_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_12_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->c0_ddr_saxi_aresetn.bind(*p_12_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->s_xdma_axi_awid.bind(*p_12_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_awaddr.bind(*p_12_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_xdma_axi_awlen.bind(*p_12_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_xdma_axi_awsize.bind(*p_12_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_xdma_axi_awburst.bind(*p_12_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_awlock.bind(*p_12_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_awcache.bind(*p_12_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_xdma_axi_awprot.bind(*p_12_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_awregion.bind(*p_12_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_awqos.bind(*p_12_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_awuser.bind(*p_12_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_awvalid.bind(*p_12_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_awready.bind(*p_12_s_xdma_axi_awready);
        p_12_s_xdma_axi_awready->set_sv_netview_offsetfromdp(11078680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_wdata.bind(*p_12_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_wstrb.bind(*p_12_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_wlast.bind(*p_12_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_xdma_axi_wuser.bind(*p_12_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_wvalid.bind(*p_12_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_wready.bind(*p_12_s_xdma_axi_wready);
        p_12_s_xdma_axi_wready->set_sv_netview_offsetfromdp(11079016);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->s_xdma_axi_bid.bind(*p_12_s_xdma_axi_bid);
        p_12_s_xdma_axi_bid->set_sv_netview_offsetfromdp(11079072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_xdma_axi_bresp.bind(*p_12_s_xdma_axi_bresp);
        p_12_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(11079128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_xdma_axi_buser.bind(*p_12_s_xdma_axi_buser);
        p_12_s_xdma_axi_buser->set_sv_netview_offsetfromdp(11079184);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_bvalid.bind(*p_12_s_xdma_axi_bvalid);
        p_12_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(11079240);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_bready.bind(*p_12_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->s_xdma_axi_arid.bind(*p_12_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_araddr.bind(*p_12_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_xdma_axi_arlen.bind(*p_12_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_xdma_axi_arsize.bind(*p_12_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_xdma_axi_arburst.bind(*p_12_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_arlock.bind(*p_12_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_arcache.bind(*p_12_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_xdma_axi_arprot.bind(*p_12_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_arregion.bind(*p_12_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_xdma_axi_arqos.bind(*p_12_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_aruser.bind(*p_12_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_arvalid.bind(*p_12_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_arready.bind(*p_12_s_xdma_axi_arready);
        p_12_s_xdma_axi_arready->set_sv_netview_offsetfromdp(11080024);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_12_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_12->s_xdma_axi_rid.bind(*p_12_s_xdma_axi_rid);
        p_12_s_xdma_axi_rid->set_sv_netview_offsetfromdp(11080080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_xdma_axi_rdata.bind(*p_12_s_xdma_axi_rdata);
        p_12_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(11080136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_xdma_axi_rresp.bind(*p_12_s_xdma_axi_rresp);
        p_12_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(11080192);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_rlast.bind(*p_12_s_xdma_axi_rlast);
        p_12_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(11080248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s_xdma_axi_ruser.bind(*p_12_s_xdma_axi_ruser);
        p_12_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(11080304);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_rvalid.bind(*p_12_s_xdma_axi_rvalid);
        p_12_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(11080360);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_rready.bind(*p_12_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_aclk.bind(*p_12_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_xdma_axi_aresetn.bind(*p_12_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_xdma_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_13->xsim_set_dbg_index(745);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(11140912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(11141248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(11141304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(11141360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(11141416);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(11141472);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(11142256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(11142312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(11142368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(11142424);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(11142480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(11142536);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(11142592);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(11142816);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(11142872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(11142928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(11142984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(11143040);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(11143096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(11143152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(11143208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(11143264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(11143320);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(11143376);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(11143488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(11143544);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(11143600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(11143656);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(11143712);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(11144048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(11144104);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(11144160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(11144216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(11144272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(11144328);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(11144384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(11144440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(11144496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(11144552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(11144608);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(11144664);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(11145112);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_14->xsim_set_dbg_index(859);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awuser.bind(*p_14_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(11779384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_wuser.bind(*p_14_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(11779720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(11779776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(11779832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_buser.bind(*p_14_s00_axi_buser);
        p_14_s00_axi_buser->set_sv_netview_offsetfromdp(11779888);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(11779944);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_aruser.bind(*p_14_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(11780728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(11780784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(11780840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(11780896);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(11780952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_ruser.bind(*p_14_s00_axi_ruser);
        p_14_s00_axi_ruser->set_sv_netview_offsetfromdp(11781008);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(11781064);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(11781288);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(11781344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(11781400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(11781456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(11781512);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(11781568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(11781624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(11781680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(11781736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(11781792);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(11781848);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(11781960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(11782016);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(11782072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(11782128);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(11782184);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(11782520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(11782576);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(11782632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(11782688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(11782744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(11782800);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(11782856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(11782912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(11782968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(11783024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(11783080);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(11783136);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(11783584);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_aresetn);
        sc_inst_15 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_15->xsim_set_dbg_index(860);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awid.bind(*p_15_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->s00_axi_awaddr.bind(*p_15_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_awlen.bind(*p_15_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awsize.bind(*p_15_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_awburst.bind(*p_15_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awlock.bind(*p_15_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awcache.bind(*p_15_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awprot.bind(*p_15_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awregion.bind(*p_15_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awqos.bind(*p_15_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awuser.bind(*p_15_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awvalid.bind(*p_15_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awready.bind(*p_15_s00_axi_awready);
        p_15_s00_axi_awready->set_sv_netview_offsetfromdp(11784472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_wdata.bind(*p_15_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_wstrb.bind(*p_15_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wlast.bind(*p_15_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_wuser.bind(*p_15_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wvalid.bind(*p_15_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wready.bind(*p_15_s00_axi_wready);
        p_15_s00_axi_wready->set_sv_netview_offsetfromdp(11784808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_bid.bind(*p_15_s00_axi_bid);
        p_15_s00_axi_bid->set_sv_netview_offsetfromdp(11784864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_bresp.bind(*p_15_s00_axi_bresp);
        p_15_s00_axi_bresp->set_sv_netview_offsetfromdp(11784920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_buser.bind(*p_15_s00_axi_buser);
        p_15_s00_axi_buser->set_sv_netview_offsetfromdp(11784976);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bvalid.bind(*p_15_s00_axi_bvalid);
        p_15_s00_axi_bvalid->set_sv_netview_offsetfromdp(11785032);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bready.bind(*p_15_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_arid.bind(*p_15_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->s00_axi_araddr.bind(*p_15_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_arlen.bind(*p_15_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arsize.bind(*p_15_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_arburst.bind(*p_15_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arlock.bind(*p_15_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arcache.bind(*p_15_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arprot.bind(*p_15_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arregion.bind(*p_15_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arqos.bind(*p_15_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_aruser.bind(*p_15_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arvalid.bind(*p_15_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arready.bind(*p_15_s00_axi_arready);
        p_15_s00_axi_arready->set_sv_netview_offsetfromdp(11785816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_rid.bind(*p_15_s00_axi_rid);
        p_15_s00_axi_rid->set_sv_netview_offsetfromdp(11785872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_rdata.bind(*p_15_s00_axi_rdata);
        p_15_s00_axi_rdata->set_sv_netview_offsetfromdp(11785928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_rresp.bind(*p_15_s00_axi_rresp);
        p_15_s00_axi_rresp->set_sv_netview_offsetfromdp(11785984);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rlast.bind(*p_15_s00_axi_rlast);
        p_15_s00_axi_rlast->set_sv_netview_offsetfromdp(11786040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_ruser.bind(*p_15_s00_axi_ruser);
        p_15_s00_axi_ruser->set_sv_netview_offsetfromdp(11786096);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rvalid.bind(*p_15_s00_axi_rvalid);
        p_15_s00_axi_rvalid->set_sv_netview_offsetfromdp(11786152);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rready.bind(*p_15_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aclk.bind(*p_15_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aresetn.bind(*p_15_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awid.bind(*p_15_m00_axi_awid);
        p_15_m00_axi_awid->set_sv_netview_offsetfromdp(11786376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_awaddr.bind(*p_15_m00_axi_awaddr);
        p_15_m00_axi_awaddr->set_sv_netview_offsetfromdp(11786432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_awlen.bind(*p_15_m00_axi_awlen);
        p_15_m00_axi_awlen->set_sv_netview_offsetfromdp(11786488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awsize.bind(*p_15_m00_axi_awsize);
        p_15_m00_axi_awsize->set_sv_netview_offsetfromdp(11786544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_awburst.bind(*p_15_m00_axi_awburst);
        p_15_m00_axi_awburst->set_sv_netview_offsetfromdp(11786600);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awlock.bind(*p_15_m00_axi_awlock);
        p_15_m00_axi_awlock->set_sv_netview_offsetfromdp(11786656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awcache.bind(*p_15_m00_axi_awcache);
        p_15_m00_axi_awcache->set_sv_netview_offsetfromdp(11786712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awprot.bind(*p_15_m00_axi_awprot);
        p_15_m00_axi_awprot->set_sv_netview_offsetfromdp(11786768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awqos.bind(*p_15_m00_axi_awqos);
        p_15_m00_axi_awqos->set_sv_netview_offsetfromdp(11786824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awuser.bind(*p_15_m00_axi_awuser);
        p_15_m00_axi_awuser->set_sv_netview_offsetfromdp(11786880);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awvalid.bind(*p_15_m00_axi_awvalid);
        p_15_m00_axi_awvalid->set_sv_netview_offsetfromdp(11786936);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awready.bind(*p_15_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_wdata.bind(*p_15_m00_axi_wdata);
        p_15_m00_axi_wdata->set_sv_netview_offsetfromdp(11787048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_wstrb.bind(*p_15_m00_axi_wstrb);
        p_15_m00_axi_wstrb->set_sv_netview_offsetfromdp(11787104);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wlast.bind(*p_15_m00_axi_wlast);
        p_15_m00_axi_wlast->set_sv_netview_offsetfromdp(11787160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_wuser.bind(*p_15_m00_axi_wuser);
        p_15_m00_axi_wuser->set_sv_netview_offsetfromdp(11787216);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wvalid.bind(*p_15_m00_axi_wvalid);
        p_15_m00_axi_wvalid->set_sv_netview_offsetfromdp(11787272);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wready.bind(*p_15_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_bid.bind(*p_15_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_bresp.bind(*p_15_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_buser.bind(*p_15_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bvalid.bind(*p_15_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bready.bind(*p_15_m00_axi_bready);
        p_15_m00_axi_bready->set_sv_netview_offsetfromdp(11787608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_arid.bind(*p_15_m00_axi_arid);
        p_15_m00_axi_arid->set_sv_netview_offsetfromdp(11787664);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_araddr.bind(*p_15_m00_axi_araddr);
        p_15_m00_axi_araddr->set_sv_netview_offsetfromdp(11787720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_arlen.bind(*p_15_m00_axi_arlen);
        p_15_m00_axi_arlen->set_sv_netview_offsetfromdp(11787776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arsize.bind(*p_15_m00_axi_arsize);
        p_15_m00_axi_arsize->set_sv_netview_offsetfromdp(11787832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_arburst.bind(*p_15_m00_axi_arburst);
        p_15_m00_axi_arburst->set_sv_netview_offsetfromdp(11787888);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arlock.bind(*p_15_m00_axi_arlock);
        p_15_m00_axi_arlock->set_sv_netview_offsetfromdp(11787944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arcache.bind(*p_15_m00_axi_arcache);
        p_15_m00_axi_arcache->set_sv_netview_offsetfromdp(11788000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arprot.bind(*p_15_m00_axi_arprot);
        p_15_m00_axi_arprot->set_sv_netview_offsetfromdp(11788056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arqos.bind(*p_15_m00_axi_arqos);
        p_15_m00_axi_arqos->set_sv_netview_offsetfromdp(11788112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_aruser.bind(*p_15_m00_axi_aruser);
        p_15_m00_axi_aruser->set_sv_netview_offsetfromdp(11788168);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arvalid.bind(*p_15_m00_axi_arvalid);
        p_15_m00_axi_arvalid->set_sv_netview_offsetfromdp(11788224);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arready.bind(*p_15_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_rid.bind(*p_15_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_rdata.bind(*p_15_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_rresp.bind(*p_15_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rlast.bind(*p_15_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_ruser.bind(*p_15_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rvalid.bind(*p_15_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rready.bind(*p_15_m00_axi_rready);
        p_15_m00_axi_rready->set_sv_netview_offsetfromdp(11788672);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aclk.bind(*p_15_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aresetn.bind(*p_15_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_aresetn);
        sc_inst_16 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_16->xsim_set_dbg_index(1098);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_awid.bind(*p_16_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_16_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_16->s00_axi_awaddr.bind(*p_16_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_awlen.bind(*p_16_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awsize.bind(*p_16_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_awburst.bind(*p_16_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awlock.bind(*p_16_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awcache.bind(*p_16_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awprot.bind(*p_16_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awregion.bind(*p_16_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awqos.bind(*p_16_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_awuser.bind(*p_16_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awvalid.bind(*p_16_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awready.bind(*p_16_s00_axi_awready);
        p_16_s00_axi_awready->set_sv_netview_offsetfromdp(12266840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s00_axi_wdata.bind(*p_16_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_wstrb.bind(*p_16_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wlast.bind(*p_16_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_wuser.bind(*p_16_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wvalid.bind(*p_16_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wready.bind(*p_16_s00_axi_wready);
        p_16_s00_axi_wready->set_sv_netview_offsetfromdp(12267176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_bid.bind(*p_16_s00_axi_bid);
        p_16_s00_axi_bid->set_sv_netview_offsetfromdp(12267232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_bresp.bind(*p_16_s00_axi_bresp);
        p_16_s00_axi_bresp->set_sv_netview_offsetfromdp(12267288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_buser.bind(*p_16_s00_axi_buser);
        p_16_s00_axi_buser->set_sv_netview_offsetfromdp(12267344);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bvalid.bind(*p_16_s00_axi_bvalid);
        p_16_s00_axi_bvalid->set_sv_netview_offsetfromdp(12267400);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bready.bind(*p_16_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_arid.bind(*p_16_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_16_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_16->s00_axi_araddr.bind(*p_16_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_arlen.bind(*p_16_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arsize.bind(*p_16_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_arburst.bind(*p_16_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arlock.bind(*p_16_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arcache.bind(*p_16_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arprot.bind(*p_16_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arregion.bind(*p_16_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arqos.bind(*p_16_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_aruser.bind(*p_16_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arvalid.bind(*p_16_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arready.bind(*p_16_s00_axi_arready);
        p_16_s00_axi_arready->set_sv_netview_offsetfromdp(12268184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_rid.bind(*p_16_s00_axi_rid);
        p_16_s00_axi_rid->set_sv_netview_offsetfromdp(12268240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s00_axi_rdata.bind(*p_16_s00_axi_rdata);
        p_16_s00_axi_rdata->set_sv_netview_offsetfromdp(12268296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_rresp.bind(*p_16_s00_axi_rresp);
        p_16_s00_axi_rresp->set_sv_netview_offsetfromdp(12268352);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rlast.bind(*p_16_s00_axi_rlast);
        p_16_s00_axi_rlast->set_sv_netview_offsetfromdp(12268408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_ruser.bind(*p_16_s00_axi_ruser);
        p_16_s00_axi_ruser->set_sv_netview_offsetfromdp(12268464);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rvalid.bind(*p_16_s00_axi_rvalid);
        p_16_s00_axi_rvalid->set_sv_netview_offsetfromdp(12268520);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rready.bind(*p_16_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aclk.bind(*p_16_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aresetn.bind(*p_16_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awid.bind(*p_16_m00_axi_awid);
        p_16_m00_axi_awid->set_sv_netview_offsetfromdp(12268744);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m00_axi_awaddr.bind(*p_16_m00_axi_awaddr);
        p_16_m00_axi_awaddr->set_sv_netview_offsetfromdp(12268800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_awlen.bind(*p_16_m00_axi_awlen);
        p_16_m00_axi_awlen->set_sv_netview_offsetfromdp(12268856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awsize.bind(*p_16_m00_axi_awsize);
        p_16_m00_axi_awsize->set_sv_netview_offsetfromdp(12268912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_awburst.bind(*p_16_m00_axi_awburst);
        p_16_m00_axi_awburst->set_sv_netview_offsetfromdp(12268968);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awlock.bind(*p_16_m00_axi_awlock);
        p_16_m00_axi_awlock->set_sv_netview_offsetfromdp(12269024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awcache.bind(*p_16_m00_axi_awcache);
        p_16_m00_axi_awcache->set_sv_netview_offsetfromdp(12269080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awprot.bind(*p_16_m00_axi_awprot);
        p_16_m00_axi_awprot->set_sv_netview_offsetfromdp(12269136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awqos.bind(*p_16_m00_axi_awqos);
        p_16_m00_axi_awqos->set_sv_netview_offsetfromdp(12269192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awuser.bind(*p_16_m00_axi_awuser);
        p_16_m00_axi_awuser->set_sv_netview_offsetfromdp(12269248);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awvalid.bind(*p_16_m00_axi_awvalid);
        p_16_m00_axi_awvalid->set_sv_netview_offsetfromdp(12269304);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awready.bind(*p_16_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m00_axi_wdata.bind(*p_16_m00_axi_wdata);
        p_16_m00_axi_wdata->set_sv_netview_offsetfromdp(12269416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_wstrb.bind(*p_16_m00_axi_wstrb);
        p_16_m00_axi_wstrb->set_sv_netview_offsetfromdp(12269472);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wlast.bind(*p_16_m00_axi_wlast);
        p_16_m00_axi_wlast->set_sv_netview_offsetfromdp(12269528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_wuser.bind(*p_16_m00_axi_wuser);
        p_16_m00_axi_wuser->set_sv_netview_offsetfromdp(12269584);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wvalid.bind(*p_16_m00_axi_wvalid);
        p_16_m00_axi_wvalid->set_sv_netview_offsetfromdp(12269640);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wready.bind(*p_16_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_bid.bind(*p_16_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_bresp.bind(*p_16_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_buser.bind(*p_16_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bvalid.bind(*p_16_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bready.bind(*p_16_m00_axi_bready);
        p_16_m00_axi_bready->set_sv_netview_offsetfromdp(12269976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_arid.bind(*p_16_m00_axi_arid);
        p_16_m00_axi_arid->set_sv_netview_offsetfromdp(12270032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m00_axi_araddr.bind(*p_16_m00_axi_araddr);
        p_16_m00_axi_araddr->set_sv_netview_offsetfromdp(12270088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_arlen.bind(*p_16_m00_axi_arlen);
        p_16_m00_axi_arlen->set_sv_netview_offsetfromdp(12270144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arsize.bind(*p_16_m00_axi_arsize);
        p_16_m00_axi_arsize->set_sv_netview_offsetfromdp(12270200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_arburst.bind(*p_16_m00_axi_arburst);
        p_16_m00_axi_arburst->set_sv_netview_offsetfromdp(12270256);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arlock.bind(*p_16_m00_axi_arlock);
        p_16_m00_axi_arlock->set_sv_netview_offsetfromdp(12270312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arcache.bind(*p_16_m00_axi_arcache);
        p_16_m00_axi_arcache->set_sv_netview_offsetfromdp(12270368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arprot.bind(*p_16_m00_axi_arprot);
        p_16_m00_axi_arprot->set_sv_netview_offsetfromdp(12270424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arqos.bind(*p_16_m00_axi_arqos);
        p_16_m00_axi_arqos->set_sv_netview_offsetfromdp(12270480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_aruser.bind(*p_16_m00_axi_aruser);
        p_16_m00_axi_aruser->set_sv_netview_offsetfromdp(12270536);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arvalid.bind(*p_16_m00_axi_arvalid);
        p_16_m00_axi_arvalid->set_sv_netview_offsetfromdp(12270592);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arready.bind(*p_16_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_rid.bind(*p_16_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m00_axi_rdata.bind(*p_16_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_rresp.bind(*p_16_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rlast.bind(*p_16_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_ruser.bind(*p_16_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rvalid.bind(*p_16_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rready.bind(*p_16_m00_axi_rready);
        p_16_m00_axi_rready->set_sv_netview_offsetfromdp(12271040);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aclk.bind(*p_16_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aresetn.bind(*p_16_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_aresetn);
        sc_inst_17 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_17->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s00_axi_awid.bind(*p_17_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_awaddr.bind(*p_17_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s00_axi_awlen.bind(*p_17_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_awsize.bind(*p_17_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_awburst.bind(*p_17_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awlock.bind(*p_17_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awcache.bind(*p_17_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_awprot.bind(*p_17_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awregion.bind(*p_17_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awqos.bind(*p_17_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awvalid.bind(*p_17_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awready.bind(*p_17_s00_axi_awready);
        p_17_s00_axi_awready->set_sv_netview_offsetfromdp(12996272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s00_axi_wdata.bind(*p_17_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_wstrb.bind(*p_17_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wlast.bind(*p_17_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wvalid.bind(*p_17_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wready.bind(*p_17_s00_axi_wready);
        p_17_s00_axi_wready->set_sv_netview_offsetfromdp(12996552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s00_axi_bid.bind(*p_17_s00_axi_bid);
        p_17_s00_axi_bid->set_sv_netview_offsetfromdp(12996608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_bresp.bind(*p_17_s00_axi_bresp);
        p_17_s00_axi_bresp->set_sv_netview_offsetfromdp(12996664);
        xsim_sc_channel<0, bool > *p_17_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_bvalid.bind(*p_17_s00_axi_bvalid);
        p_17_s00_axi_bvalid->set_sv_netview_offsetfromdp(12996720);
        xsim_sc_channel<0, bool > *p_17_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_bready.bind(*p_17_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s00_axi_arid.bind(*p_17_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_araddr.bind(*p_17_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s00_axi_arlen.bind(*p_17_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_arsize.bind(*p_17_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_arburst.bind(*p_17_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arlock.bind(*p_17_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arcache.bind(*p_17_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_arprot.bind(*p_17_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arregion.bind(*p_17_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arqos.bind(*p_17_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arvalid.bind(*p_17_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arready.bind(*p_17_s00_axi_arready);
        p_17_s00_axi_arready->set_sv_netview_offsetfromdp(12997448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s00_axi_rid.bind(*p_17_s00_axi_rid);
        p_17_s00_axi_rid->set_sv_netview_offsetfromdp(12997504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s00_axi_rdata.bind(*p_17_s00_axi_rdata);
        p_17_s00_axi_rdata->set_sv_netview_offsetfromdp(12997560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_rresp.bind(*p_17_s00_axi_rresp);
        p_17_s00_axi_rresp->set_sv_netview_offsetfromdp(12997616);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rlast.bind(*p_17_s00_axi_rlast);
        p_17_s00_axi_rlast->set_sv_netview_offsetfromdp(12997672);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rvalid.bind(*p_17_s00_axi_rvalid);
        p_17_s00_axi_rvalid->set_sv_netview_offsetfromdp(12997728);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rready.bind(*p_17_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_17_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_aclk.bind(*p_17_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_aresetn.bind(*p_17_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_awid.bind(*p_17_m00_axi_awid);
        p_17_m00_axi_awid->set_sv_netview_offsetfromdp(12997952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m00_axi_awaddr.bind(*p_17_m00_axi_awaddr);
        p_17_m00_axi_awaddr->set_sv_netview_offsetfromdp(12998008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m00_axi_awlen.bind(*p_17_m00_axi_awlen);
        p_17_m00_axi_awlen->set_sv_netview_offsetfromdp(12998064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_awsize.bind(*p_17_m00_axi_awsize);
        p_17_m00_axi_awsize->set_sv_netview_offsetfromdp(12998120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_awburst.bind(*p_17_m00_axi_awburst);
        p_17_m00_axi_awburst->set_sv_netview_offsetfromdp(12998176);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awlock.bind(*p_17_m00_axi_awlock);
        p_17_m00_axi_awlock->set_sv_netview_offsetfromdp(12998232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_awcache.bind(*p_17_m00_axi_awcache);
        p_17_m00_axi_awcache->set_sv_netview_offsetfromdp(12998288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_awprot.bind(*p_17_m00_axi_awprot);
        p_17_m00_axi_awprot->set_sv_netview_offsetfromdp(12998344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_awqos.bind(*p_17_m00_axi_awqos);
        p_17_m00_axi_awqos->set_sv_netview_offsetfromdp(12998400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_awuser.bind(*p_17_m00_axi_awuser);
        p_17_m00_axi_awuser->set_sv_netview_offsetfromdp(12998456);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awvalid.bind(*p_17_m00_axi_awvalid);
        p_17_m00_axi_awvalid->set_sv_netview_offsetfromdp(12998512);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awready.bind(*p_17_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m00_axi_wdata.bind(*p_17_m00_axi_wdata);
        p_17_m00_axi_wdata->set_sv_netview_offsetfromdp(12998624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_wstrb.bind(*p_17_m00_axi_wstrb);
        p_17_m00_axi_wstrb->set_sv_netview_offsetfromdp(12998680);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wlast.bind(*p_17_m00_axi_wlast);
        p_17_m00_axi_wlast->set_sv_netview_offsetfromdp(12998736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_wuser.bind(*p_17_m00_axi_wuser);
        p_17_m00_axi_wuser->set_sv_netview_offsetfromdp(12998792);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wvalid.bind(*p_17_m00_axi_wvalid);
        p_17_m00_axi_wvalid->set_sv_netview_offsetfromdp(12998848);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wready.bind(*p_17_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_bid.bind(*p_17_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_bresp.bind(*p_17_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_buser.bind(*p_17_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_17_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_bvalid.bind(*p_17_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_bready.bind(*p_17_m00_axi_bready);
        p_17_m00_axi_bready->set_sv_netview_offsetfromdp(12999184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_arid.bind(*p_17_m00_axi_arid);
        p_17_m00_axi_arid->set_sv_netview_offsetfromdp(12999240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m00_axi_araddr.bind(*p_17_m00_axi_araddr);
        p_17_m00_axi_araddr->set_sv_netview_offsetfromdp(12999296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m00_axi_arlen.bind(*p_17_m00_axi_arlen);
        p_17_m00_axi_arlen->set_sv_netview_offsetfromdp(12999352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_arsize.bind(*p_17_m00_axi_arsize);
        p_17_m00_axi_arsize->set_sv_netview_offsetfromdp(12999408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_arburst.bind(*p_17_m00_axi_arburst);
        p_17_m00_axi_arburst->set_sv_netview_offsetfromdp(12999464);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arlock.bind(*p_17_m00_axi_arlock);
        p_17_m00_axi_arlock->set_sv_netview_offsetfromdp(12999520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_arcache.bind(*p_17_m00_axi_arcache);
        p_17_m00_axi_arcache->set_sv_netview_offsetfromdp(12999576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_arprot.bind(*p_17_m00_axi_arprot);
        p_17_m00_axi_arprot->set_sv_netview_offsetfromdp(12999632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_arqos.bind(*p_17_m00_axi_arqos);
        p_17_m00_axi_arqos->set_sv_netview_offsetfromdp(12999688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_aruser.bind(*p_17_m00_axi_aruser);
        p_17_m00_axi_aruser->set_sv_netview_offsetfromdp(12999744);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arvalid.bind(*p_17_m00_axi_arvalid);
        p_17_m00_axi_arvalid->set_sv_netview_offsetfromdp(12999800);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arready.bind(*p_17_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_rid.bind(*p_17_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m00_axi_rdata.bind(*p_17_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_rresp.bind(*p_17_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rlast.bind(*p_17_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_ruser.bind(*p_17_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rvalid.bind(*p_17_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rready.bind(*p_17_m00_axi_rready);
        p_17_m00_axi_rready->set_sv_netview_offsetfromdp(13000248);
        xsim_sc_channel<0, bool > *p_17_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_aclk.bind(*p_17_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_aresetn.bind(*p_17_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m02_axi_awid.bind(*p_17_m02_axi_awid);
        p_17_m02_axi_awid->set_sv_netview_offsetfromdp(13000416);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m02_axi_awaddr.bind(*p_17_m02_axi_awaddr);
        p_17_m02_axi_awaddr->set_sv_netview_offsetfromdp(13000472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m02_axi_awlen.bind(*p_17_m02_axi_awlen);
        p_17_m02_axi_awlen->set_sv_netview_offsetfromdp(13000528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m02_axi_awsize.bind(*p_17_m02_axi_awsize);
        p_17_m02_axi_awsize->set_sv_netview_offsetfromdp(13000584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m02_axi_awburst.bind(*p_17_m02_axi_awburst);
        p_17_m02_axi_awburst->set_sv_netview_offsetfromdp(13000640);
        xsim_sc_channel<0, bool > *p_17_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_awlock.bind(*p_17_m02_axi_awlock);
        p_17_m02_axi_awlock->set_sv_netview_offsetfromdp(13000696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m02_axi_awcache.bind(*p_17_m02_axi_awcache);
        p_17_m02_axi_awcache->set_sv_netview_offsetfromdp(13000752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m02_axi_awprot.bind(*p_17_m02_axi_awprot);
        p_17_m02_axi_awprot->set_sv_netview_offsetfromdp(13000808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m02_axi_awqos.bind(*p_17_m02_axi_awqos);
        p_17_m02_axi_awqos->set_sv_netview_offsetfromdp(13000864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m02_axi_awuser.bind(*p_17_m02_axi_awuser);
        p_17_m02_axi_awuser->set_sv_netview_offsetfromdp(13000920);
        xsim_sc_channel<0, bool > *p_17_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_awvalid.bind(*p_17_m02_axi_awvalid);
        p_17_m02_axi_awvalid->set_sv_netview_offsetfromdp(13000976);
        xsim_sc_channel<0, bool > *p_17_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_awready.bind(*p_17_m02_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m02_axi_wdata.bind(*p_17_m02_axi_wdata);
        p_17_m02_axi_wdata->set_sv_netview_offsetfromdp(13001088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m02_axi_wstrb.bind(*p_17_m02_axi_wstrb);
        p_17_m02_axi_wstrb->set_sv_netview_offsetfromdp(13001144);
        xsim_sc_channel<0, bool > *p_17_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_wlast.bind(*p_17_m02_axi_wlast);
        p_17_m02_axi_wlast->set_sv_netview_offsetfromdp(13001200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m02_axi_wuser.bind(*p_17_m02_axi_wuser);
        p_17_m02_axi_wuser->set_sv_netview_offsetfromdp(13001256);
        xsim_sc_channel<0, bool > *p_17_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_wvalid.bind(*p_17_m02_axi_wvalid);
        p_17_m02_axi_wvalid->set_sv_netview_offsetfromdp(13001312);
        xsim_sc_channel<0, bool > *p_17_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_wready.bind(*p_17_m02_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m02_axi_bid.bind(*p_17_m02_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m02_axi_bresp.bind(*p_17_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m02_axi_buser.bind(*p_17_m02_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_17_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_bvalid.bind(*p_17_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_bready.bind(*p_17_m02_axi_bready);
        p_17_m02_axi_bready->set_sv_netview_offsetfromdp(13001648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m02_axi_arid.bind(*p_17_m02_axi_arid);
        p_17_m02_axi_arid->set_sv_netview_offsetfromdp(13001704);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m02_axi_araddr.bind(*p_17_m02_axi_araddr);
        p_17_m02_axi_araddr->set_sv_netview_offsetfromdp(13001760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m02_axi_arlen.bind(*p_17_m02_axi_arlen);
        p_17_m02_axi_arlen->set_sv_netview_offsetfromdp(13001816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m02_axi_arsize.bind(*p_17_m02_axi_arsize);
        p_17_m02_axi_arsize->set_sv_netview_offsetfromdp(13001872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m02_axi_arburst.bind(*p_17_m02_axi_arburst);
        p_17_m02_axi_arburst->set_sv_netview_offsetfromdp(13001928);
        xsim_sc_channel<0, bool > *p_17_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_arlock.bind(*p_17_m02_axi_arlock);
        p_17_m02_axi_arlock->set_sv_netview_offsetfromdp(13001984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m02_axi_arcache.bind(*p_17_m02_axi_arcache);
        p_17_m02_axi_arcache->set_sv_netview_offsetfromdp(13002040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m02_axi_arprot.bind(*p_17_m02_axi_arprot);
        p_17_m02_axi_arprot->set_sv_netview_offsetfromdp(13002096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m02_axi_arqos.bind(*p_17_m02_axi_arqos);
        p_17_m02_axi_arqos->set_sv_netview_offsetfromdp(13002152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m02_axi_aruser.bind(*p_17_m02_axi_aruser);
        p_17_m02_axi_aruser->set_sv_netview_offsetfromdp(13002208);
        xsim_sc_channel<0, bool > *p_17_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_arvalid.bind(*p_17_m02_axi_arvalid);
        p_17_m02_axi_arvalid->set_sv_netview_offsetfromdp(13002264);
        xsim_sc_channel<0, bool > *p_17_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_arready.bind(*p_17_m02_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m02_axi_rid.bind(*p_17_m02_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m02_axi_rdata.bind(*p_17_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m02_axi_rresp.bind(*p_17_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_rlast.bind(*p_17_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m02_axi_ruser.bind(*p_17_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_17_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_rvalid.bind(*p_17_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_rready.bind(*p_17_m02_axi_rready);
        p_17_m02_axi_rready->set_sv_netview_offsetfromdp(13002712);
        xsim_sc_channel<0, bool > *p_17_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_aclk.bind(*p_17_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->m02_axi_aresetn.bind(*p_17_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m03_axi_awid.bind(*p_17_m03_axi_awid);
        p_17_m03_axi_awid->set_sv_netview_offsetfromdp(13002880);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m03_axi_awaddr.bind(*p_17_m03_axi_awaddr);
        p_17_m03_axi_awaddr->set_sv_netview_offsetfromdp(13002936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m03_axi_awlen.bind(*p_17_m03_axi_awlen);
        p_17_m03_axi_awlen->set_sv_netview_offsetfromdp(13002992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m03_axi_awsize.bind(*p_17_m03_axi_awsize);
        p_17_m03_axi_awsize->set_sv_netview_offsetfromdp(13003048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m03_axi_awburst.bind(*p_17_m03_axi_awburst);
        p_17_m03_axi_awburst->set_sv_netview_offsetfromdp(13003104);
        xsim_sc_channel<0, bool > *p_17_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_awlock.bind(*p_17_m03_axi_awlock);
        p_17_m03_axi_awlock->set_sv_netview_offsetfromdp(13003160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m03_axi_awcache.bind(*p_17_m03_axi_awcache);
        p_17_m03_axi_awcache->set_sv_netview_offsetfromdp(13003216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m03_axi_awprot.bind(*p_17_m03_axi_awprot);
        p_17_m03_axi_awprot->set_sv_netview_offsetfromdp(13003272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m03_axi_awqos.bind(*p_17_m03_axi_awqos);
        p_17_m03_axi_awqos->set_sv_netview_offsetfromdp(13003328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m03_axi_awuser.bind(*p_17_m03_axi_awuser);
        p_17_m03_axi_awuser->set_sv_netview_offsetfromdp(13003384);
        xsim_sc_channel<0, bool > *p_17_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_awvalid.bind(*p_17_m03_axi_awvalid);
        p_17_m03_axi_awvalid->set_sv_netview_offsetfromdp(13003440);
        xsim_sc_channel<0, bool > *p_17_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_awready.bind(*p_17_m03_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m03_axi_wdata.bind(*p_17_m03_axi_wdata);
        p_17_m03_axi_wdata->set_sv_netview_offsetfromdp(13003552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m03_axi_wstrb.bind(*p_17_m03_axi_wstrb);
        p_17_m03_axi_wstrb->set_sv_netview_offsetfromdp(13003608);
        xsim_sc_channel<0, bool > *p_17_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_wlast.bind(*p_17_m03_axi_wlast);
        p_17_m03_axi_wlast->set_sv_netview_offsetfromdp(13003664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m03_axi_wuser.bind(*p_17_m03_axi_wuser);
        p_17_m03_axi_wuser->set_sv_netview_offsetfromdp(13003720);
        xsim_sc_channel<0, bool > *p_17_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_wvalid.bind(*p_17_m03_axi_wvalid);
        p_17_m03_axi_wvalid->set_sv_netview_offsetfromdp(13003776);
        xsim_sc_channel<0, bool > *p_17_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_wready.bind(*p_17_m03_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m03_axi_bid.bind(*p_17_m03_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m03_axi_bresp.bind(*p_17_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m03_axi_buser.bind(*p_17_m03_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_17_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_bvalid.bind(*p_17_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_bready.bind(*p_17_m03_axi_bready);
        p_17_m03_axi_bready->set_sv_netview_offsetfromdp(13004112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m03_axi_arid.bind(*p_17_m03_axi_arid);
        p_17_m03_axi_arid->set_sv_netview_offsetfromdp(13004168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m03_axi_araddr.bind(*p_17_m03_axi_araddr);
        p_17_m03_axi_araddr->set_sv_netview_offsetfromdp(13004224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m03_axi_arlen.bind(*p_17_m03_axi_arlen);
        p_17_m03_axi_arlen->set_sv_netview_offsetfromdp(13004280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m03_axi_arsize.bind(*p_17_m03_axi_arsize);
        p_17_m03_axi_arsize->set_sv_netview_offsetfromdp(13004336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m03_axi_arburst.bind(*p_17_m03_axi_arburst);
        p_17_m03_axi_arburst->set_sv_netview_offsetfromdp(13004392);
        xsim_sc_channel<0, bool > *p_17_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_arlock.bind(*p_17_m03_axi_arlock);
        p_17_m03_axi_arlock->set_sv_netview_offsetfromdp(13004448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m03_axi_arcache.bind(*p_17_m03_axi_arcache);
        p_17_m03_axi_arcache->set_sv_netview_offsetfromdp(13004504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m03_axi_arprot.bind(*p_17_m03_axi_arprot);
        p_17_m03_axi_arprot->set_sv_netview_offsetfromdp(13004560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m03_axi_arqos.bind(*p_17_m03_axi_arqos);
        p_17_m03_axi_arqos->set_sv_netview_offsetfromdp(13004616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m03_axi_aruser.bind(*p_17_m03_axi_aruser);
        p_17_m03_axi_aruser->set_sv_netview_offsetfromdp(13004672);
        xsim_sc_channel<0, bool > *p_17_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_arvalid.bind(*p_17_m03_axi_arvalid);
        p_17_m03_axi_arvalid->set_sv_netview_offsetfromdp(13004728);
        xsim_sc_channel<0, bool > *p_17_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_arready.bind(*p_17_m03_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m03_axi_rid.bind(*p_17_m03_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m03_axi_rdata.bind(*p_17_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m03_axi_rresp.bind(*p_17_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_rlast.bind(*p_17_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m03_axi_ruser.bind(*p_17_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_17_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_rvalid.bind(*p_17_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_rready.bind(*p_17_m03_axi_rready);
        p_17_m03_axi_rready->set_sv_netview_offsetfromdp(13005176);
        xsim_sc_channel<0, bool > *p_17_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_aclk.bind(*p_17_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->m03_axi_aresetn.bind(*p_17_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m04_axi_awid.bind(*p_17_m04_axi_awid);
        p_17_m04_axi_awid->set_sv_netview_offsetfromdp(13005344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m04_axi_awaddr.bind(*p_17_m04_axi_awaddr);
        p_17_m04_axi_awaddr->set_sv_netview_offsetfromdp(13005400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m04_axi_awlen.bind(*p_17_m04_axi_awlen);
        p_17_m04_axi_awlen->set_sv_netview_offsetfromdp(13005456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m04_axi_awsize.bind(*p_17_m04_axi_awsize);
        p_17_m04_axi_awsize->set_sv_netview_offsetfromdp(13005512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m04_axi_awburst.bind(*p_17_m04_axi_awburst);
        p_17_m04_axi_awburst->set_sv_netview_offsetfromdp(13005568);
        xsim_sc_channel<0, bool > *p_17_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_awlock.bind(*p_17_m04_axi_awlock);
        p_17_m04_axi_awlock->set_sv_netview_offsetfromdp(13005624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m04_axi_awcache.bind(*p_17_m04_axi_awcache);
        p_17_m04_axi_awcache->set_sv_netview_offsetfromdp(13005680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m04_axi_awprot.bind(*p_17_m04_axi_awprot);
        p_17_m04_axi_awprot->set_sv_netview_offsetfromdp(13005736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m04_axi_awqos.bind(*p_17_m04_axi_awqos);
        p_17_m04_axi_awqos->set_sv_netview_offsetfromdp(13005792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m04_axi_awuser.bind(*p_17_m04_axi_awuser);
        p_17_m04_axi_awuser->set_sv_netview_offsetfromdp(13005848);
        xsim_sc_channel<0, bool > *p_17_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_awvalid.bind(*p_17_m04_axi_awvalid);
        p_17_m04_axi_awvalid->set_sv_netview_offsetfromdp(13005904);
        xsim_sc_channel<0, bool > *p_17_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_awready.bind(*p_17_m04_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m04_axi_wdata.bind(*p_17_m04_axi_wdata);
        p_17_m04_axi_wdata->set_sv_netview_offsetfromdp(13006016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m04_axi_wstrb.bind(*p_17_m04_axi_wstrb);
        p_17_m04_axi_wstrb->set_sv_netview_offsetfromdp(13006072);
        xsim_sc_channel<0, bool > *p_17_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_wlast.bind(*p_17_m04_axi_wlast);
        p_17_m04_axi_wlast->set_sv_netview_offsetfromdp(13006128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m04_axi_wuser.bind(*p_17_m04_axi_wuser);
        p_17_m04_axi_wuser->set_sv_netview_offsetfromdp(13006184);
        xsim_sc_channel<0, bool > *p_17_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_wvalid.bind(*p_17_m04_axi_wvalid);
        p_17_m04_axi_wvalid->set_sv_netview_offsetfromdp(13006240);
        xsim_sc_channel<0, bool > *p_17_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_wready.bind(*p_17_m04_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m04_axi_bid.bind(*p_17_m04_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m04_axi_bresp.bind(*p_17_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m04_axi_buser.bind(*p_17_m04_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_17_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_bvalid.bind(*p_17_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_bready.bind(*p_17_m04_axi_bready);
        p_17_m04_axi_bready->set_sv_netview_offsetfromdp(13006576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m04_axi_arid.bind(*p_17_m04_axi_arid);
        p_17_m04_axi_arid->set_sv_netview_offsetfromdp(13006632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m04_axi_araddr.bind(*p_17_m04_axi_araddr);
        p_17_m04_axi_araddr->set_sv_netview_offsetfromdp(13006688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m04_axi_arlen.bind(*p_17_m04_axi_arlen);
        p_17_m04_axi_arlen->set_sv_netview_offsetfromdp(13006744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m04_axi_arsize.bind(*p_17_m04_axi_arsize);
        p_17_m04_axi_arsize->set_sv_netview_offsetfromdp(13006800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m04_axi_arburst.bind(*p_17_m04_axi_arburst);
        p_17_m04_axi_arburst->set_sv_netview_offsetfromdp(13006856);
        xsim_sc_channel<0, bool > *p_17_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_arlock.bind(*p_17_m04_axi_arlock);
        p_17_m04_axi_arlock->set_sv_netview_offsetfromdp(13006912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m04_axi_arcache.bind(*p_17_m04_axi_arcache);
        p_17_m04_axi_arcache->set_sv_netview_offsetfromdp(13006968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m04_axi_arprot.bind(*p_17_m04_axi_arprot);
        p_17_m04_axi_arprot->set_sv_netview_offsetfromdp(13007024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m04_axi_arqos.bind(*p_17_m04_axi_arqos);
        p_17_m04_axi_arqos->set_sv_netview_offsetfromdp(13007080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m04_axi_aruser.bind(*p_17_m04_axi_aruser);
        p_17_m04_axi_aruser->set_sv_netview_offsetfromdp(13007136);
        xsim_sc_channel<0, bool > *p_17_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_arvalid.bind(*p_17_m04_axi_arvalid);
        p_17_m04_axi_arvalid->set_sv_netview_offsetfromdp(13007192);
        xsim_sc_channel<0, bool > *p_17_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_arready.bind(*p_17_m04_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m04_axi_rid.bind(*p_17_m04_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m04_axi_rdata.bind(*p_17_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m04_axi_rresp.bind(*p_17_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_rlast.bind(*p_17_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m04_axi_ruser.bind(*p_17_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_17_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_rvalid.bind(*p_17_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_rready.bind(*p_17_m04_axi_rready);
        p_17_m04_axi_rready->set_sv_netview_offsetfromdp(13007640);
        xsim_sc_channel<0, bool > *p_17_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_aclk.bind(*p_17_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->m04_axi_aresetn.bind(*p_17_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m01_axi_awid.bind(*p_17_m01_axi_awid);
        p_17_m01_axi_awid->set_sv_netview_offsetfromdp(13007808);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m01_axi_awaddr.bind(*p_17_m01_axi_awaddr);
        p_17_m01_axi_awaddr->set_sv_netview_offsetfromdp(13007864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m01_axi_awlen.bind(*p_17_m01_axi_awlen);
        p_17_m01_axi_awlen->set_sv_netview_offsetfromdp(13007920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m01_axi_awsize.bind(*p_17_m01_axi_awsize);
        p_17_m01_axi_awsize->set_sv_netview_offsetfromdp(13007976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m01_axi_awburst.bind(*p_17_m01_axi_awburst);
        p_17_m01_axi_awburst->set_sv_netview_offsetfromdp(13008032);
        xsim_sc_channel<0, bool > *p_17_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_awlock.bind(*p_17_m01_axi_awlock);
        p_17_m01_axi_awlock->set_sv_netview_offsetfromdp(13008088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m01_axi_awcache.bind(*p_17_m01_axi_awcache);
        p_17_m01_axi_awcache->set_sv_netview_offsetfromdp(13008144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m01_axi_awprot.bind(*p_17_m01_axi_awprot);
        p_17_m01_axi_awprot->set_sv_netview_offsetfromdp(13008200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m01_axi_awqos.bind(*p_17_m01_axi_awqos);
        p_17_m01_axi_awqos->set_sv_netview_offsetfromdp(13008256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m01_axi_awuser.bind(*p_17_m01_axi_awuser);
        p_17_m01_axi_awuser->set_sv_netview_offsetfromdp(13008312);
        xsim_sc_channel<0, bool > *p_17_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_awvalid.bind(*p_17_m01_axi_awvalid);
        p_17_m01_axi_awvalid->set_sv_netview_offsetfromdp(13008368);
        xsim_sc_channel<0, bool > *p_17_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_awready.bind(*p_17_m01_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m01_axi_wdata.bind(*p_17_m01_axi_wdata);
        p_17_m01_axi_wdata->set_sv_netview_offsetfromdp(13008480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m01_axi_wstrb.bind(*p_17_m01_axi_wstrb);
        p_17_m01_axi_wstrb->set_sv_netview_offsetfromdp(13008536);
        xsim_sc_channel<0, bool > *p_17_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_wlast.bind(*p_17_m01_axi_wlast);
        p_17_m01_axi_wlast->set_sv_netview_offsetfromdp(13008592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m01_axi_wuser.bind(*p_17_m01_axi_wuser);
        p_17_m01_axi_wuser->set_sv_netview_offsetfromdp(13008648);
        xsim_sc_channel<0, bool > *p_17_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_wvalid.bind(*p_17_m01_axi_wvalid);
        p_17_m01_axi_wvalid->set_sv_netview_offsetfromdp(13008704);
        xsim_sc_channel<0, bool > *p_17_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_wready.bind(*p_17_m01_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m01_axi_bid.bind(*p_17_m01_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m01_axi_bresp.bind(*p_17_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m01_axi_buser.bind(*p_17_m01_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_17_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_bvalid.bind(*p_17_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_bready.bind(*p_17_m01_axi_bready);
        p_17_m01_axi_bready->set_sv_netview_offsetfromdp(13009040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m01_axi_arid.bind(*p_17_m01_axi_arid);
        p_17_m01_axi_arid->set_sv_netview_offsetfromdp(13009096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m01_axi_araddr.bind(*p_17_m01_axi_araddr);
        p_17_m01_axi_araddr->set_sv_netview_offsetfromdp(13009152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m01_axi_arlen.bind(*p_17_m01_axi_arlen);
        p_17_m01_axi_arlen->set_sv_netview_offsetfromdp(13009208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m01_axi_arsize.bind(*p_17_m01_axi_arsize);
        p_17_m01_axi_arsize->set_sv_netview_offsetfromdp(13009264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m01_axi_arburst.bind(*p_17_m01_axi_arburst);
        p_17_m01_axi_arburst->set_sv_netview_offsetfromdp(13009320);
        xsim_sc_channel<0, bool > *p_17_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_arlock.bind(*p_17_m01_axi_arlock);
        p_17_m01_axi_arlock->set_sv_netview_offsetfromdp(13009376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m01_axi_arcache.bind(*p_17_m01_axi_arcache);
        p_17_m01_axi_arcache->set_sv_netview_offsetfromdp(13009432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m01_axi_arprot.bind(*p_17_m01_axi_arprot);
        p_17_m01_axi_arprot->set_sv_netview_offsetfromdp(13009488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m01_axi_arqos.bind(*p_17_m01_axi_arqos);
        p_17_m01_axi_arqos->set_sv_netview_offsetfromdp(13009544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m01_axi_aruser.bind(*p_17_m01_axi_aruser);
        p_17_m01_axi_aruser->set_sv_netview_offsetfromdp(13009600);
        xsim_sc_channel<0, bool > *p_17_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_arvalid.bind(*p_17_m01_axi_arvalid);
        p_17_m01_axi_arvalid->set_sv_netview_offsetfromdp(13009656);
        xsim_sc_channel<0, bool > *p_17_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_arready.bind(*p_17_m01_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m01_axi_rid.bind(*p_17_m01_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m01_axi_rdata.bind(*p_17_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m01_axi_rresp.bind(*p_17_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_rlast.bind(*p_17_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m01_axi_ruser.bind(*p_17_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_17_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_rvalid.bind(*p_17_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_rready.bind(*p_17_m01_axi_rready);
        p_17_m01_axi_rready->set_sv_netview_offsetfromdp(13010104);
        xsim_sc_channel<0, bool > *p_17_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_aclk.bind(*p_17_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->m01_axi_aresetn.bind(*p_17_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s03_axi_awid.bind(*p_17_s03_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s03_axi_awaddr.bind(*p_17_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s03_axi_awlen.bind(*p_17_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s03_axi_awsize.bind(*p_17_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s03_axi_awburst.bind(*p_17_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_17_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_awlock.bind(*p_17_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s03_axi_awcache.bind(*p_17_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s03_axi_awprot.bind(*p_17_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s03_axi_awregion.bind(*p_17_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s03_axi_awqos.bind(*p_17_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_awvalid.bind(*p_17_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_awready.bind(*p_17_s03_axi_awready);
        p_17_s03_axi_awready->set_sv_netview_offsetfromdp(13010888);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s03_axi_wdata.bind(*p_17_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s03_axi_wstrb.bind(*p_17_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_wlast.bind(*p_17_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_wvalid.bind(*p_17_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_wready.bind(*p_17_s03_axi_wready);
        p_17_s03_axi_wready->set_sv_netview_offsetfromdp(13011168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s03_axi_bid.bind(*p_17_s03_axi_bid);
        p_17_s03_axi_bid->set_sv_netview_offsetfromdp(13011224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s03_axi_bresp.bind(*p_17_s03_axi_bresp);
        p_17_s03_axi_bresp->set_sv_netview_offsetfromdp(13011280);
        xsim_sc_channel<0, bool > *p_17_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_bvalid.bind(*p_17_s03_axi_bvalid);
        p_17_s03_axi_bvalid->set_sv_netview_offsetfromdp(13011336);
        xsim_sc_channel<0, bool > *p_17_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_bready.bind(*p_17_s03_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s03_axi_arid.bind(*p_17_s03_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s03_axi_araddr.bind(*p_17_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s03_axi_arlen.bind(*p_17_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s03_axi_arsize.bind(*p_17_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s03_axi_arburst.bind(*p_17_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_17_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_arlock.bind(*p_17_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s03_axi_arcache.bind(*p_17_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s03_axi_arprot.bind(*p_17_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s03_axi_arregion.bind(*p_17_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s03_axi_arqos.bind(*p_17_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_arvalid.bind(*p_17_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_arready.bind(*p_17_s03_axi_arready);
        p_17_s03_axi_arready->set_sv_netview_offsetfromdp(13012064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s03_axi_rid.bind(*p_17_s03_axi_rid);
        p_17_s03_axi_rid->set_sv_netview_offsetfromdp(13012120);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s03_axi_rdata.bind(*p_17_s03_axi_rdata);
        p_17_s03_axi_rdata->set_sv_netview_offsetfromdp(13012176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s03_axi_rresp.bind(*p_17_s03_axi_rresp);
        p_17_s03_axi_rresp->set_sv_netview_offsetfromdp(13012232);
        xsim_sc_channel<0, bool > *p_17_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_rlast.bind(*p_17_s03_axi_rlast);
        p_17_s03_axi_rlast->set_sv_netview_offsetfromdp(13012288);
        xsim_sc_channel<0, bool > *p_17_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_rvalid.bind(*p_17_s03_axi_rvalid);
        p_17_s03_axi_rvalid->set_sv_netview_offsetfromdp(13012344);
        xsim_sc_channel<0, bool > *p_17_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_rready.bind(*p_17_s03_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_17_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_aclk.bind(*p_17_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s03_axi_aresetn.bind(*p_17_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s01_axi_awid.bind(*p_17_s01_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s01_axi_awaddr.bind(*p_17_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s01_axi_awlen.bind(*p_17_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s01_axi_awsize.bind(*p_17_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s01_axi_awburst.bind(*p_17_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_17_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_awlock.bind(*p_17_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s01_axi_awcache.bind(*p_17_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s01_axi_awprot.bind(*p_17_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s01_axi_awregion.bind(*p_17_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s01_axi_awqos.bind(*p_17_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_awvalid.bind(*p_17_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_awready.bind(*p_17_s01_axi_awready);
        p_17_s01_axi_awready->set_sv_netview_offsetfromdp(13013184);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s01_axi_wdata.bind(*p_17_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s01_axi_wstrb.bind(*p_17_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_wlast.bind(*p_17_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_wvalid.bind(*p_17_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_wready.bind(*p_17_s01_axi_wready);
        p_17_s01_axi_wready->set_sv_netview_offsetfromdp(13013464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s01_axi_bid.bind(*p_17_s01_axi_bid);
        p_17_s01_axi_bid->set_sv_netview_offsetfromdp(13013520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s01_axi_bresp.bind(*p_17_s01_axi_bresp);
        p_17_s01_axi_bresp->set_sv_netview_offsetfromdp(13013576);
        xsim_sc_channel<0, bool > *p_17_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_bvalid.bind(*p_17_s01_axi_bvalid);
        p_17_s01_axi_bvalid->set_sv_netview_offsetfromdp(13013632);
        xsim_sc_channel<0, bool > *p_17_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_bready.bind(*p_17_s01_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s01_axi_arid.bind(*p_17_s01_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s01_axi_araddr.bind(*p_17_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s01_axi_arlen.bind(*p_17_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s01_axi_arsize.bind(*p_17_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s01_axi_arburst.bind(*p_17_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_17_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_arlock.bind(*p_17_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s01_axi_arcache.bind(*p_17_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s01_axi_arprot.bind(*p_17_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s01_axi_arregion.bind(*p_17_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s01_axi_arqos.bind(*p_17_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_arvalid.bind(*p_17_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_arready.bind(*p_17_s01_axi_arready);
        p_17_s01_axi_arready->set_sv_netview_offsetfromdp(13014360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s01_axi_rid.bind(*p_17_s01_axi_rid);
        p_17_s01_axi_rid->set_sv_netview_offsetfromdp(13014416);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s01_axi_rdata.bind(*p_17_s01_axi_rdata);
        p_17_s01_axi_rdata->set_sv_netview_offsetfromdp(13014472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s01_axi_rresp.bind(*p_17_s01_axi_rresp);
        p_17_s01_axi_rresp->set_sv_netview_offsetfromdp(13014528);
        xsim_sc_channel<0, bool > *p_17_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_rlast.bind(*p_17_s01_axi_rlast);
        p_17_s01_axi_rlast->set_sv_netview_offsetfromdp(13014584);
        xsim_sc_channel<0, bool > *p_17_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_rvalid.bind(*p_17_s01_axi_rvalid);
        p_17_s01_axi_rvalid->set_sv_netview_offsetfromdp(13014640);
        xsim_sc_channel<0, bool > *p_17_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_rready.bind(*p_17_s01_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_17_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_aclk.bind(*p_17_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s01_axi_aresetn.bind(*p_17_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s02_axi_awid.bind(*p_17_s02_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s02_axi_awaddr.bind(*p_17_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s02_axi_awlen.bind(*p_17_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s02_axi_awsize.bind(*p_17_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s02_axi_awburst.bind(*p_17_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_17_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_awlock.bind(*p_17_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s02_axi_awcache.bind(*p_17_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s02_axi_awprot.bind(*p_17_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s02_axi_awregion.bind(*p_17_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s02_axi_awqos.bind(*p_17_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_awvalid.bind(*p_17_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_awready.bind(*p_17_s02_axi_awready);
        p_17_s02_axi_awready->set_sv_netview_offsetfromdp(13015480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s02_axi_wdata.bind(*p_17_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s02_axi_wstrb.bind(*p_17_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_wlast.bind(*p_17_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_wvalid.bind(*p_17_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_wready.bind(*p_17_s02_axi_wready);
        p_17_s02_axi_wready->set_sv_netview_offsetfromdp(13015760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s02_axi_bid.bind(*p_17_s02_axi_bid);
        p_17_s02_axi_bid->set_sv_netview_offsetfromdp(13015816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s02_axi_bresp.bind(*p_17_s02_axi_bresp);
        p_17_s02_axi_bresp->set_sv_netview_offsetfromdp(13015872);
        xsim_sc_channel<0, bool > *p_17_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_bvalid.bind(*p_17_s02_axi_bvalid);
        p_17_s02_axi_bvalid->set_sv_netview_offsetfromdp(13015928);
        xsim_sc_channel<0, bool > *p_17_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_bready.bind(*p_17_s02_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s02_axi_arid.bind(*p_17_s02_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s02_axi_araddr.bind(*p_17_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s02_axi_arlen.bind(*p_17_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s02_axi_arsize.bind(*p_17_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s02_axi_arburst.bind(*p_17_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_17_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_arlock.bind(*p_17_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s02_axi_arcache.bind(*p_17_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s02_axi_arprot.bind(*p_17_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s02_axi_arregion.bind(*p_17_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s02_axi_arqos.bind(*p_17_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_arvalid.bind(*p_17_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_arready.bind(*p_17_s02_axi_arready);
        p_17_s02_axi_arready->set_sv_netview_offsetfromdp(13016656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s02_axi_rid.bind(*p_17_s02_axi_rid);
        p_17_s02_axi_rid->set_sv_netview_offsetfromdp(13016712);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s02_axi_rdata.bind(*p_17_s02_axi_rdata);
        p_17_s02_axi_rdata->set_sv_netview_offsetfromdp(13016768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s02_axi_rresp.bind(*p_17_s02_axi_rresp);
        p_17_s02_axi_rresp->set_sv_netview_offsetfromdp(13016824);
        xsim_sc_channel<0, bool > *p_17_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_rlast.bind(*p_17_s02_axi_rlast);
        p_17_s02_axi_rlast->set_sv_netview_offsetfromdp(13016880);
        xsim_sc_channel<0, bool > *p_17_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_rvalid.bind(*p_17_s02_axi_rvalid);
        p_17_s02_axi_rvalid->set_sv_netview_offsetfromdp(13016936);
        xsim_sc_channel<0, bool > *p_17_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_rready.bind(*p_17_s02_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_17_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_aclk.bind(*p_17_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s02_axi_aresetn.bind(*p_17_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s04_axi_awid.bind(*p_17_s04_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s04_axi_awaddr.bind(*p_17_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s04_axi_awlen.bind(*p_17_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s04_axi_awsize.bind(*p_17_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s04_axi_awburst.bind(*p_17_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_17_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_awlock.bind(*p_17_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s04_axi_awcache.bind(*p_17_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s04_axi_awprot.bind(*p_17_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s04_axi_awregion.bind(*p_17_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s04_axi_awqos.bind(*p_17_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_awvalid.bind(*p_17_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_awready.bind(*p_17_s04_axi_awready);
        p_17_s04_axi_awready->set_sv_netview_offsetfromdp(13017776);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s04_axi_wdata.bind(*p_17_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s04_axi_wstrb.bind(*p_17_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_wlast.bind(*p_17_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_wvalid.bind(*p_17_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_wready.bind(*p_17_s04_axi_wready);
        p_17_s04_axi_wready->set_sv_netview_offsetfromdp(13018056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s04_axi_bid.bind(*p_17_s04_axi_bid);
        p_17_s04_axi_bid->set_sv_netview_offsetfromdp(13018112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s04_axi_bresp.bind(*p_17_s04_axi_bresp);
        p_17_s04_axi_bresp->set_sv_netview_offsetfromdp(13018168);
        xsim_sc_channel<0, bool > *p_17_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_bvalid.bind(*p_17_s04_axi_bvalid);
        p_17_s04_axi_bvalid->set_sv_netview_offsetfromdp(13018224);
        xsim_sc_channel<0, bool > *p_17_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_bready.bind(*p_17_s04_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s04_axi_arid.bind(*p_17_s04_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s04_axi_araddr.bind(*p_17_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s04_axi_arlen.bind(*p_17_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s04_axi_arsize.bind(*p_17_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s04_axi_arburst.bind(*p_17_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_17_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_arlock.bind(*p_17_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s04_axi_arcache.bind(*p_17_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s04_axi_arprot.bind(*p_17_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s04_axi_arregion.bind(*p_17_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s04_axi_arqos.bind(*p_17_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_arvalid.bind(*p_17_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_arready.bind(*p_17_s04_axi_arready);
        p_17_s04_axi_arready->set_sv_netview_offsetfromdp(13018952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->s04_axi_rid.bind(*p_17_s04_axi_rid);
        p_17_s04_axi_rid->set_sv_netview_offsetfromdp(13019008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s04_axi_rdata.bind(*p_17_s04_axi_rdata);
        p_17_s04_axi_rdata->set_sv_netview_offsetfromdp(13019064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s04_axi_rresp.bind(*p_17_s04_axi_rresp);
        p_17_s04_axi_rresp->set_sv_netview_offsetfromdp(13019120);
        xsim_sc_channel<0, bool > *p_17_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_rlast.bind(*p_17_s04_axi_rlast);
        p_17_s04_axi_rlast->set_sv_netview_offsetfromdp(13019176);
        xsim_sc_channel<0, bool > *p_17_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_rvalid.bind(*p_17_s04_axi_rvalid);
        p_17_s04_axi_rvalid->set_sv_netview_offsetfromdp(13019232);
        xsim_sc_channel<0, bool > *p_17_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_rready.bind(*p_17_s04_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_17_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_aclk.bind(*p_17_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s04_axi_aresetn.bind(*p_17_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s04_axi_aresetn);
        sc_inst_18 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_18->xsim_set_dbg_index(23);
        sc_inst_19 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_19->xsim_set_dbg_index(1648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->saxi_lite_cq_awaddr.bind(*p_19_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->saxi_lite_cq_awprot.bind(*p_19_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_awvalid.bind(*p_19_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_awready.bind(*p_19_saxi_lite_cq_awready);
        p_19_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(15137952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->saxi_lite_cq_wdata.bind(*p_19_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->saxi_lite_cq_wstrb.bind(*p_19_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_wvalid.bind(*p_19_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_wready.bind(*p_19_saxi_lite_cq_wready);
        p_19_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(15138176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->saxi_lite_cq_bresp.bind(*p_19_saxi_lite_cq_bresp);
        p_19_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(15138232);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_bvalid.bind(*p_19_saxi_lite_cq_bvalid);
        p_19_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(15138288);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_bready.bind(*p_19_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->saxi_lite_cq_araddr.bind(*p_19_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->saxi_lite_cq_arprot.bind(*p_19_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_arvalid.bind(*p_19_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_arready.bind(*p_19_saxi_lite_cq_arready);
        p_19_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(15138568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->saxi_lite_cq_rdata.bind(*p_19_saxi_lite_cq_rdata);
        p_19_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(15138624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->saxi_lite_cq_rresp.bind(*p_19_saxi_lite_cq_rresp);
        p_19_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(15138680);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_rvalid.bind(*p_19_saxi_lite_cq_rvalid);
        p_19_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(15138736);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_rready.bind(*p_19_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_aclk.bind(*p_19_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_19_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->saxi_lite_cq_aresetn.bind(*p_19_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->maxi_lite_mb_awaddr.bind(*p_19_maxi_lite_mb_awaddr);
        p_19_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(15138960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->maxi_lite_mb_awprot.bind(*p_19_maxi_lite_mb_awprot);
        p_19_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(15139016);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_awvalid.bind(*p_19_maxi_lite_mb_awvalid);
        p_19_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(15139072);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_awready.bind(*p_19_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->maxi_lite_mb_wdata.bind(*p_19_maxi_lite_mb_wdata);
        p_19_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(15139184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->maxi_lite_mb_wstrb.bind(*p_19_maxi_lite_mb_wstrb);
        p_19_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(15139240);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_wvalid.bind(*p_19_maxi_lite_mb_wvalid);
        p_19_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(15139296);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_wready.bind(*p_19_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->maxi_lite_mb_bresp.bind(*p_19_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_bvalid.bind(*p_19_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_bready.bind(*p_19_maxi_lite_mb_bready);
        p_19_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(15139520);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->maxi_lite_mb_araddr.bind(*p_19_maxi_lite_mb_araddr);
        p_19_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(15139576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->maxi_lite_mb_arprot.bind(*p_19_maxi_lite_mb_arprot);
        p_19_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(15139632);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_arvalid.bind(*p_19_maxi_lite_mb_arvalid);
        p_19_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(15139688);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_arready.bind(*p_19_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->maxi_lite_mb_rdata.bind(*p_19_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->maxi_lite_mb_rresp.bind(*p_19_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_rvalid.bind(*p_19_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_rready.bind(*p_19_maxi_lite_mb_rready);
        p_19_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(15139968);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_aclk.bind(*p_19_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_19_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->maxi_lite_mb_aresetn.bind(*p_19_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_19_irq = new xsim_sc_channel<0, bool >();
        sc_inst_19->irq.bind(*p_19_irq);
        (*_glb_hdl_sc_channel_map).push_back(p_19_irq);
        sc_inst_20 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_20->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->s00_axi_awaddr.bind(*p_20_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s00_axi_awlen.bind(*p_20_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s00_axi_awsize.bind(*p_20_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s00_axi_awburst.bind(*p_20_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_20_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_awlock.bind(*p_20_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_awcache.bind(*p_20_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s00_axi_awprot.bind(*p_20_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_awregion.bind(*p_20_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_awqos.bind(*p_20_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_20_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_awvalid.bind(*p_20_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_awready.bind(*p_20_s00_axi_awready);
        p_20_s00_axi_awready->set_sv_netview_offsetfromdp(15178936);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->s00_axi_wdata.bind(*p_20_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->s00_axi_wstrb.bind(*p_20_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_wlast.bind(*p_20_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_20_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_wvalid.bind(*p_20_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_wready.bind(*p_20_s00_axi_wready);
        p_20_s00_axi_wready->set_sv_netview_offsetfromdp(15179216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s00_axi_bresp.bind(*p_20_s00_axi_bresp);
        p_20_s00_axi_bresp->set_sv_netview_offsetfromdp(15179272);
        xsim_sc_channel<0, bool > *p_20_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_bvalid.bind(*p_20_s00_axi_bvalid);
        p_20_s00_axi_bvalid->set_sv_netview_offsetfromdp(15179328);
        xsim_sc_channel<0, bool > *p_20_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_bready.bind(*p_20_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->s00_axi_araddr.bind(*p_20_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s00_axi_arlen.bind(*p_20_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s00_axi_arsize.bind(*p_20_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s00_axi_arburst.bind(*p_20_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_20_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_arlock.bind(*p_20_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_arcache.bind(*p_20_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s00_axi_arprot.bind(*p_20_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_arregion.bind(*p_20_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s00_axi_arqos.bind(*p_20_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_20_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_arvalid.bind(*p_20_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_arready.bind(*p_20_s00_axi_arready);
        p_20_s00_axi_arready->set_sv_netview_offsetfromdp(15180000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->s00_axi_rdata.bind(*p_20_s00_axi_rdata);
        p_20_s00_axi_rdata->set_sv_netview_offsetfromdp(15180056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s00_axi_rresp.bind(*p_20_s00_axi_rresp);
        p_20_s00_axi_rresp->set_sv_netview_offsetfromdp(15180112);
        xsim_sc_channel<0, bool > *p_20_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_rlast.bind(*p_20_s00_axi_rlast);
        p_20_s00_axi_rlast->set_sv_netview_offsetfromdp(15180168);
        xsim_sc_channel<0, bool > *p_20_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_rvalid.bind(*p_20_s00_axi_rvalid);
        p_20_s00_axi_rvalid->set_sv_netview_offsetfromdp(15180224);
        xsim_sc_channel<0, bool > *p_20_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_rready.bind(*p_20_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_20_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_aclk.bind(*p_20_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->s00_axi_aresetn.bind(*p_20_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_awid.bind(*p_20_m00_axi_awid);
        p_20_m00_axi_awid->set_sv_netview_offsetfromdp(15180448);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_20_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_20->m00_axi_awaddr.bind(*p_20_m00_axi_awaddr);
        p_20_m00_axi_awaddr->set_sv_netview_offsetfromdp(15180504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m00_axi_awlen.bind(*p_20_m00_axi_awlen);
        p_20_m00_axi_awlen->set_sv_netview_offsetfromdp(15180560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m00_axi_awsize.bind(*p_20_m00_axi_awsize);
        p_20_m00_axi_awsize->set_sv_netview_offsetfromdp(15180616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m00_axi_awburst.bind(*p_20_m00_axi_awburst);
        p_20_m00_axi_awburst->set_sv_netview_offsetfromdp(15180672);
        xsim_sc_channel<0, bool > *p_20_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_awlock.bind(*p_20_m00_axi_awlock);
        p_20_m00_axi_awlock->set_sv_netview_offsetfromdp(15180728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m00_axi_awcache.bind(*p_20_m00_axi_awcache);
        p_20_m00_axi_awcache->set_sv_netview_offsetfromdp(15180784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m00_axi_awprot.bind(*p_20_m00_axi_awprot);
        p_20_m00_axi_awprot->set_sv_netview_offsetfromdp(15180840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m00_axi_awqos.bind(*p_20_m00_axi_awqos);
        p_20_m00_axi_awqos->set_sv_netview_offsetfromdp(15180896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_awuser.bind(*p_20_m00_axi_awuser);
        p_20_m00_axi_awuser->set_sv_netview_offsetfromdp(15180952);
        xsim_sc_channel<0, bool > *p_20_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_awvalid.bind(*p_20_m00_axi_awvalid);
        p_20_m00_axi_awvalid->set_sv_netview_offsetfromdp(15181008);
        xsim_sc_channel<0, bool > *p_20_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_awready.bind(*p_20_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m00_axi_wdata.bind(*p_20_m00_axi_wdata);
        p_20_m00_axi_wdata->set_sv_netview_offsetfromdp(15181120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m00_axi_wstrb.bind(*p_20_m00_axi_wstrb);
        p_20_m00_axi_wstrb->set_sv_netview_offsetfromdp(15181176);
        xsim_sc_channel<0, bool > *p_20_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_wlast.bind(*p_20_m00_axi_wlast);
        p_20_m00_axi_wlast->set_sv_netview_offsetfromdp(15181232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_wuser.bind(*p_20_m00_axi_wuser);
        p_20_m00_axi_wuser->set_sv_netview_offsetfromdp(15181288);
        xsim_sc_channel<0, bool > *p_20_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_wvalid.bind(*p_20_m00_axi_wvalid);
        p_20_m00_axi_wvalid->set_sv_netview_offsetfromdp(15181344);
        xsim_sc_channel<0, bool > *p_20_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_wready.bind(*p_20_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_bid.bind(*p_20_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m00_axi_bresp.bind(*p_20_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_buser.bind(*p_20_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_20_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_bvalid.bind(*p_20_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_bready.bind(*p_20_m00_axi_bready);
        p_20_m00_axi_bready->set_sv_netview_offsetfromdp(15181680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_arid.bind(*p_20_m00_axi_arid);
        p_20_m00_axi_arid->set_sv_netview_offsetfromdp(15181736);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_20_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_20->m00_axi_araddr.bind(*p_20_m00_axi_araddr);
        p_20_m00_axi_araddr->set_sv_netview_offsetfromdp(15181792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m00_axi_arlen.bind(*p_20_m00_axi_arlen);
        p_20_m00_axi_arlen->set_sv_netview_offsetfromdp(15181848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m00_axi_arsize.bind(*p_20_m00_axi_arsize);
        p_20_m00_axi_arsize->set_sv_netview_offsetfromdp(15181904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m00_axi_arburst.bind(*p_20_m00_axi_arburst);
        p_20_m00_axi_arburst->set_sv_netview_offsetfromdp(15181960);
        xsim_sc_channel<0, bool > *p_20_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_arlock.bind(*p_20_m00_axi_arlock);
        p_20_m00_axi_arlock->set_sv_netview_offsetfromdp(15182016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m00_axi_arcache.bind(*p_20_m00_axi_arcache);
        p_20_m00_axi_arcache->set_sv_netview_offsetfromdp(15182072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m00_axi_arprot.bind(*p_20_m00_axi_arprot);
        p_20_m00_axi_arprot->set_sv_netview_offsetfromdp(15182128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m00_axi_arqos.bind(*p_20_m00_axi_arqos);
        p_20_m00_axi_arqos->set_sv_netview_offsetfromdp(15182184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_aruser.bind(*p_20_m00_axi_aruser);
        p_20_m00_axi_aruser->set_sv_netview_offsetfromdp(15182240);
        xsim_sc_channel<0, bool > *p_20_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_arvalid.bind(*p_20_m00_axi_arvalid);
        p_20_m00_axi_arvalid->set_sv_netview_offsetfromdp(15182296);
        xsim_sc_channel<0, bool > *p_20_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_arready.bind(*p_20_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_rid.bind(*p_20_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m00_axi_rdata.bind(*p_20_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m00_axi_rresp.bind(*p_20_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_rlast.bind(*p_20_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m00_axi_ruser.bind(*p_20_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_20_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_rvalid.bind(*p_20_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_rready.bind(*p_20_m00_axi_rready);
        p_20_m00_axi_rready->set_sv_netview_offsetfromdp(15182744);
        xsim_sc_channel<0, bool > *p_20_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_aclk.bind(*p_20_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->m00_axi_aresetn.bind(*p_20_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m00_axi_aresetn);
        sc_inst_21 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_21->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(15229248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(15229472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(15229528);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(15229584);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(15229808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(15229864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(15229920);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(15229976);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(15230200);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(15230256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(15230312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(15230368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(15230424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(15230480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(15230536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(15230592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(15230648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(15230704);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(15230760);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(15230872);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(15230928);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(15230984);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(15231040);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(15231264);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(15231320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(15231376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(15231432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(15231488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(15231544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(15231600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(15231656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(15231712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(15231768);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(15231824);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(15232160);
        sc_inst_22 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_22->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_AWADDR.bind(*p_22_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWVALID.bind(*p_22_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWREADY.bind(*p_22_s_axi_control_AWREADY);
        p_22_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(15232376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_WDATA.bind(*p_22_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_control_WSTRB.bind(*p_22_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WVALID.bind(*p_22_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WREADY.bind(*p_22_s_axi_control_WREADY);
        p_22_s_axi_control_WREADY->set_sv_netview_offsetfromdp(15232600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_BRESP.bind(*p_22_s_axi_control_BRESP);
        p_22_s_axi_control_BRESP->set_sv_netview_offsetfromdp(15232656);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BVALID.bind(*p_22_s_axi_control_BVALID);
        p_22_s_axi_control_BVALID->set_sv_netview_offsetfromdp(15232712);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BREADY.bind(*p_22_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_ARADDR.bind(*p_22_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARVALID.bind(*p_22_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARREADY.bind(*p_22_s_axi_control_ARREADY);
        p_22_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(15232936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_RDATA.bind(*p_22_s_axi_control_RDATA);
        p_22_s_axi_control_RDATA->set_sv_netview_offsetfromdp(15232992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_RRESP.bind(*p_22_s_axi_control_RRESP);
        p_22_s_axi_control_RRESP->set_sv_netview_offsetfromdp(15233048);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RVALID.bind(*p_22_s_axi_control_RVALID);
        p_22_s_axi_control_RVALID->set_sv_netview_offsetfromdp(15233104);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RREADY.bind(*p_22_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_22_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_clk.bind(*p_22_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_ap_clk);
        xsim_sc_channel<0, bool > *p_22_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_rst_n.bind(*p_22_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_22_ap_rst_n);
        xsim_sc_channel<0, bool > *p_22_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_22->interrupt.bind(*p_22_interrupt);
        p_22_interrupt->set_sv_netview_offsetfromdp(15233328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_AWADDR.bind(*p_22_m_axi_gmem_AWADDR);
        p_22_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(15233384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_AWLEN.bind(*p_22_m_axi_gmem_AWLEN);
        p_22_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(15233440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWSIZE.bind(*p_22_m_axi_gmem_AWSIZE);
        p_22_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(15233496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_AWBURST.bind(*p_22_m_axi_gmem_AWBURST);
        p_22_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(15233552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_AWLOCK.bind(*p_22_m_axi_gmem_AWLOCK);
        p_22_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(15233608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWREGION.bind(*p_22_m_axi_gmem_AWREGION);
        p_22_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(15233664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWCACHE.bind(*p_22_m_axi_gmem_AWCACHE);
        p_22_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(15233720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWPROT.bind(*p_22_m_axi_gmem_AWPROT);
        p_22_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(15233776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWQOS.bind(*p_22_m_axi_gmem_AWQOS);
        p_22_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(15233832);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWVALID.bind(*p_22_m_axi_gmem_AWVALID);
        p_22_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(15233888);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWREADY.bind(*p_22_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_WDATA.bind(*p_22_m_axi_gmem_WDATA);
        p_22_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(15234000);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_WSTRB.bind(*p_22_m_axi_gmem_WSTRB);
        p_22_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(15234056);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WLAST.bind(*p_22_m_axi_gmem_WLAST);
        p_22_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(15234112);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WVALID.bind(*p_22_m_axi_gmem_WVALID);
        p_22_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(15234168);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WREADY.bind(*p_22_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_BRESP.bind(*p_22_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BVALID.bind(*p_22_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BREADY.bind(*p_22_m_axi_gmem_BREADY);
        p_22_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(15234392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_ARADDR.bind(*p_22_m_axi_gmem_ARADDR);
        p_22_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(15234448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_ARLEN.bind(*p_22_m_axi_gmem_ARLEN);
        p_22_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(15234504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARSIZE.bind(*p_22_m_axi_gmem_ARSIZE);
        p_22_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(15234560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_ARBURST.bind(*p_22_m_axi_gmem_ARBURST);
        p_22_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(15234616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_ARLOCK.bind(*p_22_m_axi_gmem_ARLOCK);
        p_22_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(15234672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARREGION.bind(*p_22_m_axi_gmem_ARREGION);
        p_22_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(15234728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARCACHE.bind(*p_22_m_axi_gmem_ARCACHE);
        p_22_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(15234784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARPROT.bind(*p_22_m_axi_gmem_ARPROT);
        p_22_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(15234840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARQOS.bind(*p_22_m_axi_gmem_ARQOS);
        p_22_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(15234896);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARVALID.bind(*p_22_m_axi_gmem_ARVALID);
        p_22_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(15234952);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARREADY.bind(*p_22_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_RDATA.bind(*p_22_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_RRESP.bind(*p_22_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RLAST.bind(*p_22_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RVALID.bind(*p_22_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RREADY.bind(*p_22_m_axi_gmem_RREADY);
        p_22_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(15235288);
        sc_inst_23 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_23->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_23_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_23->s_axi_control_AWADDR.bind(*p_23_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_AWVALID.bind(*p_23_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_AWREADY.bind(*p_23_s_axi_control_AWREADY);
        p_23_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(15235504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_control_WDATA.bind(*p_23_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_control_WSTRB.bind(*p_23_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_WVALID.bind(*p_23_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_WREADY.bind(*p_23_s_axi_control_WREADY);
        p_23_s_axi_control_WREADY->set_sv_netview_offsetfromdp(15235728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_control_BRESP.bind(*p_23_s_axi_control_BRESP);
        p_23_s_axi_control_BRESP->set_sv_netview_offsetfromdp(15235784);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_BVALID.bind(*p_23_s_axi_control_BVALID);
        p_23_s_axi_control_BVALID->set_sv_netview_offsetfromdp(15235840);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_BREADY.bind(*p_23_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_23_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_23->s_axi_control_ARADDR.bind(*p_23_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_ARVALID.bind(*p_23_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_ARREADY.bind(*p_23_s_axi_control_ARREADY);
        p_23_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(15236064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_control_RDATA.bind(*p_23_s_axi_control_RDATA);
        p_23_s_axi_control_RDATA->set_sv_netview_offsetfromdp(15236120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_control_RRESP.bind(*p_23_s_axi_control_RRESP);
        p_23_s_axi_control_RRESP->set_sv_netview_offsetfromdp(15236176);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_RVALID.bind(*p_23_s_axi_control_RVALID);
        p_23_s_axi_control_RVALID->set_sv_netview_offsetfromdp(15236232);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_RREADY.bind(*p_23_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_23_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_23->ap_clk.bind(*p_23_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_ap_clk);
        xsim_sc_channel<0, bool > *p_23_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_23->ap_rst_n.bind(*p_23_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_23_ap_rst_n);
        xsim_sc_channel<0, bool > *p_23_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_23->interrupt.bind(*p_23_interrupt);
        p_23_interrupt->set_sv_netview_offsetfromdp(15236456);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axi_gmem_AWADDR.bind(*p_23_m_axi_gmem_AWADDR);
        p_23_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(15236512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_axi_gmem_AWLEN.bind(*p_23_m_axi_gmem_AWLEN);
        p_23_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(15236568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_gmem_AWSIZE.bind(*p_23_m_axi_gmem_AWSIZE);
        p_23_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(15236624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_gmem_AWBURST.bind(*p_23_m_axi_gmem_AWBURST);
        p_23_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(15236680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_axi_gmem_AWLOCK.bind(*p_23_m_axi_gmem_AWLOCK);
        p_23_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(15236736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_AWREGION.bind(*p_23_m_axi_gmem_AWREGION);
        p_23_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(15236792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_AWCACHE.bind(*p_23_m_axi_gmem_AWCACHE);
        p_23_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(15236848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_gmem_AWPROT.bind(*p_23_m_axi_gmem_AWPROT);
        p_23_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(15236904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_AWQOS.bind(*p_23_m_axi_gmem_AWQOS);
        p_23_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(15236960);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_AWVALID.bind(*p_23_m_axi_gmem_AWVALID);
        p_23_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(15237016);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_AWREADY.bind(*p_23_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->m_axi_gmem_WDATA.bind(*p_23_m_axi_gmem_WDATA);
        p_23_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(15237128);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axi_gmem_WSTRB.bind(*p_23_m_axi_gmem_WSTRB);
        p_23_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(15237184);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_WLAST.bind(*p_23_m_axi_gmem_WLAST);
        p_23_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(15237240);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_WVALID.bind(*p_23_m_axi_gmem_WVALID);
        p_23_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(15237296);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_WREADY.bind(*p_23_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_gmem_BRESP.bind(*p_23_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_BVALID.bind(*p_23_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_BREADY.bind(*p_23_m_axi_gmem_BREADY);
        p_23_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(15237520);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axi_gmem_ARADDR.bind(*p_23_m_axi_gmem_ARADDR);
        p_23_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(15237576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_axi_gmem_ARLEN.bind(*p_23_m_axi_gmem_ARLEN);
        p_23_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(15237632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_gmem_ARSIZE.bind(*p_23_m_axi_gmem_ARSIZE);
        p_23_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(15237688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_gmem_ARBURST.bind(*p_23_m_axi_gmem_ARBURST);
        p_23_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(15237744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_axi_gmem_ARLOCK.bind(*p_23_m_axi_gmem_ARLOCK);
        p_23_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(15237800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_ARREGION.bind(*p_23_m_axi_gmem_ARREGION);
        p_23_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(15237856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_ARCACHE.bind(*p_23_m_axi_gmem_ARCACHE);
        p_23_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(15237912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_gmem_ARPROT.bind(*p_23_m_axi_gmem_ARPROT);
        p_23_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(15237968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_ARQOS.bind(*p_23_m_axi_gmem_ARQOS);
        p_23_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(15238024);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_ARVALID.bind(*p_23_m_axi_gmem_ARVALID);
        p_23_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(15238080);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_ARREADY.bind(*p_23_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->m_axi_gmem_RDATA.bind(*p_23_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_gmem_RRESP.bind(*p_23_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_RLAST.bind(*p_23_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_RVALID.bind(*p_23_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_RREADY.bind(*p_23_m_axi_gmem_RREADY);
        p_23_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(15238416);
        sc_inst_24 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_24->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->s_axi_control_AWADDR.bind(*p_24_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_AWVALID.bind(*p_24_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_AWREADY.bind(*p_24_s_axi_control_AWREADY);
        p_24_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(15238632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_control_WDATA.bind(*p_24_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_control_WSTRB.bind(*p_24_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_WVALID.bind(*p_24_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_WREADY.bind(*p_24_s_axi_control_WREADY);
        p_24_s_axi_control_WREADY->set_sv_netview_offsetfromdp(15238856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_control_BRESP.bind(*p_24_s_axi_control_BRESP);
        p_24_s_axi_control_BRESP->set_sv_netview_offsetfromdp(15238912);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_BVALID.bind(*p_24_s_axi_control_BVALID);
        p_24_s_axi_control_BVALID->set_sv_netview_offsetfromdp(15238968);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_BREADY.bind(*p_24_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_24_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_24->s_axi_control_ARADDR.bind(*p_24_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_ARVALID.bind(*p_24_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_ARREADY.bind(*p_24_s_axi_control_ARREADY);
        p_24_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(15239192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_control_RDATA.bind(*p_24_s_axi_control_RDATA);
        p_24_s_axi_control_RDATA->set_sv_netview_offsetfromdp(15239248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_control_RRESP.bind(*p_24_s_axi_control_RRESP);
        p_24_s_axi_control_RRESP->set_sv_netview_offsetfromdp(15239304);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_RVALID.bind(*p_24_s_axi_control_RVALID);
        p_24_s_axi_control_RVALID->set_sv_netview_offsetfromdp(15239360);
        xsim_sc_channel<0, bool > *p_24_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_axi_control_RREADY.bind(*p_24_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_24_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_24->ap_clk.bind(*p_24_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_ap_clk);
        xsim_sc_channel<0, bool > *p_24_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_24->ap_rst_n.bind(*p_24_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_24_ap_rst_n);
        xsim_sc_channel<0, bool > *p_24_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_24->interrupt.bind(*p_24_interrupt);
        p_24_interrupt->set_sv_netview_offsetfromdp(15239584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axi_gmem_AWADDR.bind(*p_24_m_axi_gmem_AWADDR);
        p_24_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(15239640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_axi_gmem_AWLEN.bind(*p_24_m_axi_gmem_AWLEN);
        p_24_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(15239696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_gmem_AWSIZE.bind(*p_24_m_axi_gmem_AWSIZE);
        p_24_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(15239752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_gmem_AWBURST.bind(*p_24_m_axi_gmem_AWBURST);
        p_24_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(15239808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_axi_gmem_AWLOCK.bind(*p_24_m_axi_gmem_AWLOCK);
        p_24_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(15239864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_gmem_AWREGION.bind(*p_24_m_axi_gmem_AWREGION);
        p_24_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(15239920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_gmem_AWCACHE.bind(*p_24_m_axi_gmem_AWCACHE);
        p_24_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(15239976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_gmem_AWPROT.bind(*p_24_m_axi_gmem_AWPROT);
        p_24_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(15240032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_gmem_AWQOS.bind(*p_24_m_axi_gmem_AWQOS);
        p_24_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(15240088);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_AWVALID.bind(*p_24_m_axi_gmem_AWVALID);
        p_24_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(15240144);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_AWREADY.bind(*p_24_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_24_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_24->m_axi_gmem_WDATA.bind(*p_24_m_axi_gmem_WDATA);
        p_24_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(15240256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axi_gmem_WSTRB.bind(*p_24_m_axi_gmem_WSTRB);
        p_24_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(15240312);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_WLAST.bind(*p_24_m_axi_gmem_WLAST);
        p_24_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(15240368);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_WVALID.bind(*p_24_m_axi_gmem_WVALID);
        p_24_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(15240424);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_WREADY.bind(*p_24_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_gmem_BRESP.bind(*p_24_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_BVALID.bind(*p_24_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_BREADY.bind(*p_24_m_axi_gmem_BREADY);
        p_24_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(15240648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axi_gmem_ARADDR.bind(*p_24_m_axi_gmem_ARADDR);
        p_24_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(15240704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_axi_gmem_ARLEN.bind(*p_24_m_axi_gmem_ARLEN);
        p_24_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(15240760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_gmem_ARSIZE.bind(*p_24_m_axi_gmem_ARSIZE);
        p_24_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(15240816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_gmem_ARBURST.bind(*p_24_m_axi_gmem_ARBURST);
        p_24_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(15240872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_axi_gmem_ARLOCK.bind(*p_24_m_axi_gmem_ARLOCK);
        p_24_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(15240928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_gmem_ARREGION.bind(*p_24_m_axi_gmem_ARREGION);
        p_24_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(15240984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_gmem_ARCACHE.bind(*p_24_m_axi_gmem_ARCACHE);
        p_24_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(15241040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axi_gmem_ARPROT.bind(*p_24_m_axi_gmem_ARPROT);
        p_24_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(15241096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axi_gmem_ARQOS.bind(*p_24_m_axi_gmem_ARQOS);
        p_24_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(15241152);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_ARVALID.bind(*p_24_m_axi_gmem_ARVALID);
        p_24_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(15241208);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_ARREADY.bind(*p_24_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_24_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_24->m_axi_gmem_RDATA.bind(*p_24_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axi_gmem_RRESP.bind(*p_24_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_RLAST.bind(*p_24_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_RVALID.bind(*p_24_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_24_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axi_gmem_RREADY.bind(*p_24_m_axi_gmem_RREADY);
        p_24_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(15241544);
        sc_inst_25 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_25->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_25_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ui_clk.bind(*p_25_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->c0_ddr_saxi_awid.bind(*p_25_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_25_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_25->c0_ddr_saxi_awaddr.bind(*p_25_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->c0_ddr_saxi_awlen.bind(*p_25_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->c0_ddr_saxi_awsize.bind(*p_25_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->c0_ddr_saxi_awburst.bind(*p_25_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_awlock.bind(*p_25_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->c0_ddr_saxi_awcache.bind(*p_25_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->c0_ddr_saxi_awprot.bind(*p_25_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->c0_ddr_saxi_awregion.bind(*p_25_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->c0_ddr_saxi_awqos.bind(*p_25_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->c0_ddr_saxi_awuser.bind(*p_25_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_awvalid.bind(*p_25_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_awready.bind(*p_25_c0_ddr_saxi_awready);
        p_25_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(15242376);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->c0_ddr_saxi_wdata.bind(*p_25_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->c0_ddr_saxi_wstrb.bind(*p_25_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_wlast.bind(*p_25_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->c0_ddr_saxi_wuser.bind(*p_25_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_wvalid.bind(*p_25_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_wready.bind(*p_25_c0_ddr_saxi_wready);
        p_25_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(15242712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->c0_ddr_saxi_bid.bind(*p_25_c0_ddr_saxi_bid);
        p_25_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(15242768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->c0_ddr_saxi_bresp.bind(*p_25_c0_ddr_saxi_bresp);
        p_25_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(15242824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->c0_ddr_saxi_buser.bind(*p_25_c0_ddr_saxi_buser);
        p_25_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(15242880);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_bvalid.bind(*p_25_c0_ddr_saxi_bvalid);
        p_25_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(15242936);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_bready.bind(*p_25_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->c0_ddr_saxi_arid.bind(*p_25_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_25_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_25->c0_ddr_saxi_araddr.bind(*p_25_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->c0_ddr_saxi_arlen.bind(*p_25_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->c0_ddr_saxi_arsize.bind(*p_25_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->c0_ddr_saxi_arburst.bind(*p_25_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_arlock.bind(*p_25_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->c0_ddr_saxi_arcache.bind(*p_25_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->c0_ddr_saxi_arprot.bind(*p_25_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->c0_ddr_saxi_arregion.bind(*p_25_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->c0_ddr_saxi_arqos.bind(*p_25_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->c0_ddr_saxi_aruser.bind(*p_25_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_arvalid.bind(*p_25_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_arready.bind(*p_25_c0_ddr_saxi_arready);
        p_25_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(15243720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->c0_ddr_saxi_rid.bind(*p_25_c0_ddr_saxi_rid);
        p_25_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(15243776);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_25_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_25->c0_ddr_saxi_rdata.bind(*p_25_c0_ddr_saxi_rdata);
        p_25_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(15243832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->c0_ddr_saxi_rresp.bind(*p_25_c0_ddr_saxi_rresp);
        p_25_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(15243888);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_rlast.bind(*p_25_c0_ddr_saxi_rlast);
        p_25_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(15243944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->c0_ddr_saxi_ruser.bind(*p_25_c0_ddr_saxi_ruser);
        p_25_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(15244000);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_rvalid.bind(*p_25_c0_ddr_saxi_rvalid);
        p_25_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(15244056);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_rready.bind(*p_25_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_aclk.bind(*p_25_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_25_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->c0_ddr_saxi_aresetn.bind(*p_25_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_25_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_25->s_xdma_axi_awid.bind(*p_25_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_xdma_axi_awaddr.bind(*p_25_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_xdma_axi_awlen.bind(*p_25_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_xdma_axi_awsize.bind(*p_25_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_xdma_axi_awburst.bind(*p_25_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_awlock.bind(*p_25_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_xdma_axi_awcache.bind(*p_25_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_xdma_axi_awprot.bind(*p_25_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_xdma_axi_awregion.bind(*p_25_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_xdma_axi_awqos.bind(*p_25_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_xdma_axi_awuser.bind(*p_25_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_awvalid.bind(*p_25_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_awready.bind(*p_25_s_xdma_axi_awready);
        p_25_s_xdma_axi_awready->set_sv_netview_offsetfromdp(15244952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_xdma_axi_wdata.bind(*p_25_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_xdma_axi_wstrb.bind(*p_25_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_wlast.bind(*p_25_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_xdma_axi_wuser.bind(*p_25_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_wvalid.bind(*p_25_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_wready.bind(*p_25_s_xdma_axi_wready);
        p_25_s_xdma_axi_wready->set_sv_netview_offsetfromdp(15245288);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_25_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_25->s_xdma_axi_bid.bind(*p_25_s_xdma_axi_bid);
        p_25_s_xdma_axi_bid->set_sv_netview_offsetfromdp(15245344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_xdma_axi_bresp.bind(*p_25_s_xdma_axi_bresp);
        p_25_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(15245400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_xdma_axi_buser.bind(*p_25_s_xdma_axi_buser);
        p_25_s_xdma_axi_buser->set_sv_netview_offsetfromdp(15245456);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_bvalid.bind(*p_25_s_xdma_axi_bvalid);
        p_25_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(15245512);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_bready.bind(*p_25_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_25_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_25->s_xdma_axi_arid.bind(*p_25_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_xdma_axi_araddr.bind(*p_25_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_xdma_axi_arlen.bind(*p_25_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_xdma_axi_arsize.bind(*p_25_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_xdma_axi_arburst.bind(*p_25_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_arlock.bind(*p_25_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_xdma_axi_arcache.bind(*p_25_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_xdma_axi_arprot.bind(*p_25_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_xdma_axi_arregion.bind(*p_25_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_xdma_axi_arqos.bind(*p_25_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_xdma_axi_aruser.bind(*p_25_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_arvalid.bind(*p_25_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_arready.bind(*p_25_s_xdma_axi_arready);
        p_25_s_xdma_axi_arready->set_sv_netview_offsetfromdp(15246296);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_25_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_25->s_xdma_axi_rid.bind(*p_25_s_xdma_axi_rid);
        p_25_s_xdma_axi_rid->set_sv_netview_offsetfromdp(15246352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_xdma_axi_rdata.bind(*p_25_s_xdma_axi_rdata);
        p_25_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(15246408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_xdma_axi_rresp.bind(*p_25_s_xdma_axi_rresp);
        p_25_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(15246464);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_rlast.bind(*p_25_s_xdma_axi_rlast);
        p_25_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(15246520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_xdma_axi_ruser.bind(*p_25_s_xdma_axi_ruser);
        p_25_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(15246576);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_rvalid.bind(*p_25_s_xdma_axi_rvalid);
        p_25_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(15246632);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_rready.bind(*p_25_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_aclk.bind(*p_25_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_25_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_xdma_axi_aresetn.bind(*p_25_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_xdma_axi_aresetn);
        sc_inst_26 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_26->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_aximm_awid.bind(*p_26_m_aximm_awid);
        p_26_m_aximm_awid->set_sv_netview_offsetfromdp(15246904);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->m_aximm_awaddr.bind(*p_26_m_aximm_awaddr);
        p_26_m_aximm_awaddr->set_sv_netview_offsetfromdp(15246960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->m_aximm_awlen.bind(*p_26_m_aximm_awlen);
        p_26_m_aximm_awlen->set_sv_netview_offsetfromdp(15247016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_aximm_awsize.bind(*p_26_m_aximm_awsize);
        p_26_m_aximm_awsize->set_sv_netview_offsetfromdp(15247072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_aximm_awburst.bind(*p_26_m_aximm_awburst);
        p_26_m_aximm_awburst->set_sv_netview_offsetfromdp(15247128);
        xsim_sc_channel<0, bool > *p_26_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_awlock.bind(*p_26_m_aximm_awlock);
        p_26_m_aximm_awlock->set_sv_netview_offsetfromdp(15247184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_aximm_awcache.bind(*p_26_m_aximm_awcache);
        p_26_m_aximm_awcache->set_sv_netview_offsetfromdp(15247240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_aximm_awprot.bind(*p_26_m_aximm_awprot);
        p_26_m_aximm_awprot->set_sv_netview_offsetfromdp(15247296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_aximm_awqos.bind(*p_26_m_aximm_awqos);
        p_26_m_aximm_awqos->set_sv_netview_offsetfromdp(15247352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_aximm_awuser.bind(*p_26_m_aximm_awuser);
        p_26_m_aximm_awuser->set_sv_netview_offsetfromdp(15247408);
        xsim_sc_channel<0, bool > *p_26_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_awvalid.bind(*p_26_m_aximm_awvalid);
        p_26_m_aximm_awvalid->set_sv_netview_offsetfromdp(15247464);
        xsim_sc_channel<0, bool > *p_26_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_awready.bind(*p_26_m_aximm_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_aximm_wdata.bind(*p_26_m_aximm_wdata);
        p_26_m_aximm_wdata->set_sv_netview_offsetfromdp(15247576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_aximm_wstrb.bind(*p_26_m_aximm_wstrb);
        p_26_m_aximm_wstrb->set_sv_netview_offsetfromdp(15247632);
        xsim_sc_channel<0, bool > *p_26_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_wlast.bind(*p_26_m_aximm_wlast);
        p_26_m_aximm_wlast->set_sv_netview_offsetfromdp(15247688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_aximm_wuser.bind(*p_26_m_aximm_wuser);
        p_26_m_aximm_wuser->set_sv_netview_offsetfromdp(15247744);
        xsim_sc_channel<0, bool > *p_26_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_wvalid.bind(*p_26_m_aximm_wvalid);
        p_26_m_aximm_wvalid->set_sv_netview_offsetfromdp(15247800);
        xsim_sc_channel<0, bool > *p_26_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_wready.bind(*p_26_m_aximm_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_aximm_bid.bind(*p_26_m_aximm_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_aximm_bresp.bind(*p_26_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_aximm_buser.bind(*p_26_m_aximm_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_26_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_bvalid.bind(*p_26_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_bready.bind(*p_26_m_aximm_bready);
        p_26_m_aximm_bready->set_sv_netview_offsetfromdp(15248136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_aximm_arid.bind(*p_26_m_aximm_arid);
        p_26_m_aximm_arid->set_sv_netview_offsetfromdp(15248192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->m_aximm_araddr.bind(*p_26_m_aximm_araddr);
        p_26_m_aximm_araddr->set_sv_netview_offsetfromdp(15248248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->m_aximm_arlen.bind(*p_26_m_aximm_arlen);
        p_26_m_aximm_arlen->set_sv_netview_offsetfromdp(15248304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_aximm_arsize.bind(*p_26_m_aximm_arsize);
        p_26_m_aximm_arsize->set_sv_netview_offsetfromdp(15248360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_aximm_arburst.bind(*p_26_m_aximm_arburst);
        p_26_m_aximm_arburst->set_sv_netview_offsetfromdp(15248416);
        xsim_sc_channel<0, bool > *p_26_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_arlock.bind(*p_26_m_aximm_arlock);
        p_26_m_aximm_arlock->set_sv_netview_offsetfromdp(15248472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_aximm_arcache.bind(*p_26_m_aximm_arcache);
        p_26_m_aximm_arcache->set_sv_netview_offsetfromdp(15248528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_aximm_arprot.bind(*p_26_m_aximm_arprot);
        p_26_m_aximm_arprot->set_sv_netview_offsetfromdp(15248584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_aximm_arqos.bind(*p_26_m_aximm_arqos);
        p_26_m_aximm_arqos->set_sv_netview_offsetfromdp(15248640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_aximm_aruser.bind(*p_26_m_aximm_aruser);
        p_26_m_aximm_aruser->set_sv_netview_offsetfromdp(15248696);
        xsim_sc_channel<0, bool > *p_26_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_arvalid.bind(*p_26_m_aximm_arvalid);
        p_26_m_aximm_arvalid->set_sv_netview_offsetfromdp(15248752);
        xsim_sc_channel<0, bool > *p_26_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_arready.bind(*p_26_m_aximm_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_aximm_rid.bind(*p_26_m_aximm_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_aximm_rdata.bind(*p_26_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_aximm_rresp.bind(*p_26_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_26_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_rlast.bind(*p_26_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_aximm_ruser.bind(*p_26_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_26_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_rvalid.bind(*p_26_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_rready.bind(*p_26_m_aximm_rready);
        p_26_m_aximm_rready->set_sv_netview_offsetfromdp(15249200);
        xsim_sc_channel<0, bool > *p_26_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_aclk.bind(*p_26_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_26_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_aximm_aresetn.bind(*p_26_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->m_axictrl_awaddr.bind(*p_26_m_axictrl_awaddr);
        p_26_m_axictrl_awaddr->set_sv_netview_offsetfromdp(15249368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axictrl_awprot.bind(*p_26_m_axictrl_awprot);
        p_26_m_axictrl_awprot->set_sv_netview_offsetfromdp(15249424);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_awvalid.bind(*p_26_m_axictrl_awvalid);
        p_26_m_axictrl_awvalid->set_sv_netview_offsetfromdp(15249480);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_awready.bind(*p_26_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axictrl_wdata.bind(*p_26_m_axictrl_wdata);
        p_26_m_axictrl_wdata->set_sv_netview_offsetfromdp(15249592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->m_axictrl_wstrb.bind(*p_26_m_axictrl_wstrb);
        p_26_m_axictrl_wstrb->set_sv_netview_offsetfromdp(15249648);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_wvalid.bind(*p_26_m_axictrl_wvalid);
        p_26_m_axictrl_wvalid->set_sv_netview_offsetfromdp(15249704);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_wready.bind(*p_26_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axictrl_bresp.bind(*p_26_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_bvalid.bind(*p_26_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_bready.bind(*p_26_m_axictrl_bready);
        p_26_m_axictrl_bready->set_sv_netview_offsetfromdp(15249928);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->m_axictrl_araddr.bind(*p_26_m_axictrl_araddr);
        p_26_m_axictrl_araddr->set_sv_netview_offsetfromdp(15249984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->m_axictrl_arprot.bind(*p_26_m_axictrl_arprot);
        p_26_m_axictrl_arprot->set_sv_netview_offsetfromdp(15250040);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_arvalid.bind(*p_26_m_axictrl_arvalid);
        p_26_m_axictrl_arvalid->set_sv_netview_offsetfromdp(15250096);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_arready.bind(*p_26_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->m_axictrl_rdata.bind(*p_26_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->m_axictrl_rresp.bind(*p_26_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_rvalid.bind(*p_26_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_rready.bind(*p_26_m_axictrl_rready);
        p_26_m_axictrl_rready->set_sv_netview_offsetfromdp(15250376);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_aclk.bind(*p_26_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_26_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axictrl_aresetn.bind(*p_26_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
    }
