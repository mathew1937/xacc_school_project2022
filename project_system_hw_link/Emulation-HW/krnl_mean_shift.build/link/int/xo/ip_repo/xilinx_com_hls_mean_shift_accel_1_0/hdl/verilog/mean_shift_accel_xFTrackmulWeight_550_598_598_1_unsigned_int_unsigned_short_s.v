// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Qu_offset,
        Pu_address0,
        Pu_ce0,
        Pu_q0,
        BIN_0_address0,
        BIN_0_ce0,
        BIN_0_q0,
        BIN_1_address0,
        BIN_1_ce0,
        BIN_1_q0,
        obj_hgt,
        obj_wdt,
        C_x_read,
        C_y_read,
        track_read,
        rows,
        cols,
        Qu_address0,
        Qu_ce0,
        Qu_q0,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 49'd1;
parameter    ap_ST_fsm_state2 = 49'd2;
parameter    ap_ST_fsm_state3 = 49'd4;
parameter    ap_ST_fsm_state4 = 49'd8;
parameter    ap_ST_fsm_state5 = 49'd16;
parameter    ap_ST_fsm_state6 = 49'd32;
parameter    ap_ST_fsm_state7 = 49'd64;
parameter    ap_ST_fsm_state8 = 49'd128;
parameter    ap_ST_fsm_state9 = 49'd256;
parameter    ap_ST_fsm_state10 = 49'd512;
parameter    ap_ST_fsm_state11 = 49'd1024;
parameter    ap_ST_fsm_state12 = 49'd2048;
parameter    ap_ST_fsm_state13 = 49'd4096;
parameter    ap_ST_fsm_state14 = 49'd8192;
parameter    ap_ST_fsm_state15 = 49'd16384;
parameter    ap_ST_fsm_state16 = 49'd32768;
parameter    ap_ST_fsm_state17 = 49'd65536;
parameter    ap_ST_fsm_state18 = 49'd131072;
parameter    ap_ST_fsm_state19 = 49'd262144;
parameter    ap_ST_fsm_state20 = 49'd524288;
parameter    ap_ST_fsm_state21 = 49'd1048576;
parameter    ap_ST_fsm_state22 = 49'd2097152;
parameter    ap_ST_fsm_state23 = 49'd4194304;
parameter    ap_ST_fsm_state24 = 49'd8388608;
parameter    ap_ST_fsm_state25 = 49'd16777216;
parameter    ap_ST_fsm_state26 = 49'd33554432;
parameter    ap_ST_fsm_state27 = 49'd67108864;
parameter    ap_ST_fsm_state28 = 49'd134217728;
parameter    ap_ST_fsm_state29 = 49'd268435456;
parameter    ap_ST_fsm_state30 = 49'd536870912;
parameter    ap_ST_fsm_state31 = 49'd1073741824;
parameter    ap_ST_fsm_state32 = 49'd2147483648;
parameter    ap_ST_fsm_state33 = 49'd4294967296;
parameter    ap_ST_fsm_state34 = 49'd8589934592;
parameter    ap_ST_fsm_state35 = 49'd17179869184;
parameter    ap_ST_fsm_state36 = 49'd34359738368;
parameter    ap_ST_fsm_state37 = 49'd68719476736;
parameter    ap_ST_fsm_state38 = 49'd137438953472;
parameter    ap_ST_fsm_state39 = 49'd274877906944;
parameter    ap_ST_fsm_state40 = 49'd549755813888;
parameter    ap_ST_fsm_state41 = 49'd1099511627776;
parameter    ap_ST_fsm_state42 = 49'd2199023255552;
parameter    ap_ST_fsm_state43 = 49'd4398046511104;
parameter    ap_ST_fsm_state44 = 49'd8796093022208;
parameter    ap_ST_fsm_state45 = 49'd17592186044416;
parameter    ap_ST_fsm_state46 = 49'd35184372088832;
parameter    ap_ST_fsm_state47 = 49'd70368744177664;
parameter    ap_ST_fsm_state48 = 49'd140737488355328;
parameter    ap_ST_fsm_state49 = 49'd281474976710656;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] Qu_offset;
output  [8:0] Pu_address0;
output   Pu_ce0;
input  [31:0] Pu_q0;
output  [17:0] BIN_0_address0;
output   BIN_0_ce0;
input  [8:0] BIN_0_q0;
output  [17:0] BIN_1_address0;
output   BIN_1_ce0;
input  [8:0] BIN_1_q0;
input  [15:0] obj_hgt;
input  [15:0] obj_wdt;
input  [15:0] C_x_read;
input  [15:0] C_y_read;
input   track_read;
input  [9:0] rows;
input  [9:0] cols;
output  [12:0] Qu_address0;
output   Qu_ce0;
input  [31:0] Qu_q0;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [0:0] ap_return_4;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [48:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] xFTrackmulKernelLut_address0;
reg    xFTrackmulKernelLut_ce0;
wire   [15:0] xFTrackmulKernelLut_q0;
reg   [31:0] reg_255;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln340_1_fu_401_p2;
wire    ap_CS_fsm_state10;
reg   [31:0] reg_260;
wire   [0:0] icmp_ln382_fu_453_p2;
reg   [31:0] reg_265;
reg   [14:0] h_x_reg_731;
wire    ap_CS_fsm_state2;
reg   [14:0] h_y_reg_746;
reg  signed [31:0] p_width1_reg_753;
wire   [8:0] add_ln337_fu_300_p2;
reg   [8:0] add_ln337_reg_758;
reg  signed [31:0] p_height1_reg_763;
wire    ap_CS_fsm_state3;
wire   [9:0] add_ln337_1_fu_317_p2;
reg   [9:0] add_ln337_1_reg_768;
wire   [31:0] grp_fu_323_p2;
reg   [31:0] temp_reg_773;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [15:0] zext_ln306_fu_327_p1;
reg   [15:0] zext_ln306_reg_808;
wire   [15:0] zext_ln306_1_fu_331_p1;
reg   [15:0] zext_ln306_1_reg_813;
wire   [15:0] zext_ln327_fu_335_p1;
reg   [15:0] zext_ln327_reg_818;
wire   [15:0] zext_ln328_fu_338_p1;
reg   [15:0] zext_ln328_reg_825;
wire   [16:0] zext_ln330_fu_341_p1;
reg   [16:0] zext_ln330_reg_833;
wire   [15:0] buf_size_fu_344_p2;
reg   [15:0] buf_size_reg_839;
wire   [31:0] lshr_ln337_fu_352_p2;
reg   [31:0] lshr_ln337_reg_844;
wire   [16:0] zext_ln340_fu_357_p1;
reg   [16:0] zext_ln340_reg_849;
reg   [15:0] phi_mul_load_reg_893;
wire   [15:0] A_fu_412_p2;
reg   [15:0] A_reg_901;
wire   [7:0] y_1_fu_435_p3;
reg   [7:0] y_1_reg_906;
wire    ap_CS_fsm_state8;
reg   [15:0] xFTrackmulKernelLut_load_reg_919;
wire    ap_CS_fsm_state9;
wire   [15:0] dispx_fu_499_p1;
wire    ap_CS_fsm_state47;
wire   [15:0] dispy_fu_503_p1;
wire   [0:0] icmp_ln395_fu_529_p2;
reg   [0:0] icmp_ln395_reg_934;
wire    ap_CS_fsm_state48;
wire   [15:0] select_ln395_fu_545_p3;
reg   [15:0] select_ln395_reg_939;
wire   [0:0] icmp_ln399_fu_565_p2;
reg   [0:0] icmp_ln399_reg_945;
wire   [15:0] select_ln399_fu_581_p3;
reg   [15:0] select_ln399_reg_950;
wire    grp_Inverse_fu_203_ap_start;
wire    grp_Inverse_fu_203_ap_done;
wire    grp_Inverse_fu_203_ap_idle;
wire    grp_Inverse_fu_203_ap_ready;
reg   [14:0] grp_Inverse_fu_203_x;
wire   [31:0] grp_Inverse_fu_203_ap_return_0;
wire   [7:0] grp_Inverse_fu_203_ap_return_1;
wire    grp_Inverse_fu_203_ap_ext_blocking_n;
wire    grp_Inverse_fu_203_ap_str_blocking_n;
wire    grp_Inverse_fu_203_ap_int_blocking_n;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_idle;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ready;
wire   [17:0] grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_address0;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_ce0;
wire   [17:0] grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_address0;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_ce0;
wire   [8:0] grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_address0;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_ce0;
wire   [31:0] grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out_ap_vld;
wire   [31:0] grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out_ap_vld;
wire   [31:0] grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out_ap_vld;
wire   [12:0] grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_address0;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_ce0;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ext_blocking_n;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_str_blocking_n;
wire    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_int_blocking_n;
reg   [15:0] dispx_1_reg_175;
wire   [0:0] icmp_ln340_fu_360_p2;
reg   [15:0] dispy_1_reg_189;
reg    grp_Inverse_fu_203_ap_start_reg;
reg    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg;
wire    ap_CS_fsm_state11;
wire   [63:0] idxprom54_fu_471_p1;
wire    ap_CS_fsm_state12;
reg   [15:0] phi_mul_fu_94;
wire   [15:0] add_ln340_fu_396_p2;
reg   [31:0] total_x_fu_98;
reg   [31:0] total_y_fu_102;
reg   [31:0] total_w_fu_106;
reg   [15:0] i_1_fu_110;
wire   [15:0] i_2_fu_406_p2;
wire  signed [8:0] sext_ln337_fu_296_p1;
wire  signed [9:0] sext_ln337_2_fu_314_p1;
wire  signed [9:0] sext_ln337_1_fu_310_p1;
wire    ap_CS_fsm_state4;
wire  signed [31:0] sext_ln337_3_fu_349_p1;
wire   [7:0] empty_fu_417_p1;
wire   [0:0] tmp_fu_421_p3;
wire   [7:0] sub42_fu_429_p2;
wire   [15:0] grp_fu_459_p2;
wire   [15:0] grp_fu_465_p2;
wire   [15:0] add_ln392_fu_512_p2;
wire   [16:0] zext_ln395_fu_517_p1;
wire   [16:0] add_ln395_fu_521_p2;
wire   [16:0] zext_ln395_1_fu_526_p1;
wire   [15:0] sub_ln396_fu_535_p2;
wire   [15:0] add_ln396_fu_539_p2;
wire   [15:0] add_ln391_fu_507_p2;
wire   [16:0] zext_ln399_fu_553_p1;
wire   [16:0] add_ln399_fu_557_p2;
wire   [16:0] zext_ln399_1_fu_562_p1;
wire   [15:0] sub_ln400_fu_571_p2;
wire   [15:0] add_ln400_fu_575_p2;
wire    ap_CS_fsm_state49;
wire   [16:0] zext_ln403_fu_589_p1;
wire   [16:0] sub_ln403_fu_592_p2;
wire   [0:0] icmp_ln403_fu_597_p2;
wire   [15:0] add_ln404_fu_603_p2;
wire   [16:0] zext_ln407_fu_615_p1;
wire   [16:0] sub_ln407_fu_618_p2;
wire   [0:0] icmp_ln407_fu_623_p2;
wire   [15:0] add_ln408_fu_629_p2;
wire   [15:0] select_ln407_fu_634_p3;
wire   [15:0] select_ln403_fu_608_p3;
wire   [0:0] or_ln407_fu_641_p2;
wire   [0:0] and_ln415_1_fu_667_p0;
wire   [0:0] xor_ln415_fu_657_p2;
wire   [0:0] and_ln415_1_fu_667_p2;
wire   [0:0] and_ln415_fu_663_p2;
wire   [15:0] sub_ln413_fu_647_p2;
wire   [15:0] sub_ln414_fu_652_p2;
wire   [0:0] and_ln415_2_fu_672_p2;
reg    grp_fu_459_ap_start;
wire    grp_fu_459_ap_done;
reg    grp_fu_465_ap_start;
wire    grp_fu_465_ap_done;
reg   [48:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_wait_1;
reg    ap_sub_ext_blocking_1;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_sub_str_blocking_1;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
reg    ap_sub_int_blocking_1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 49'd1;
#0 grp_Inverse_fu_203_ap_start_reg = 1'b0;
#0 grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg = 1'b0;
end

mean_shift_accel_xFTrackmulHist_550_299_598_1_9_unsigned_int_unsigned_short_Pipeline_loop_histdEe #(
    .DataWidth( 16 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
xFTrackmulKernelLut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xFTrackmulKernelLut_address0),
    .ce0(xFTrackmulKernelLut_ce0),
    .q0(xFTrackmulKernelLut_q0)
);

mean_shift_accel_Inverse grp_Inverse_fu_203(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Inverse_fu_203_ap_start),
    .ap_done(grp_Inverse_fu_203_ap_done),
    .ap_idle(grp_Inverse_fu_203_ap_idle),
    .ap_ready(grp_Inverse_fu_203_ap_ready),
    .x(grp_Inverse_fu_203_x),
    .ap_return_0(grp_Inverse_fu_203_ap_return_0),
    .ap_return_1(grp_Inverse_fu_203_ap_return_1),
    .ap_ext_blocking_n(grp_Inverse_fu_203_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_Inverse_fu_203_ap_str_blocking_n),
    .ap_int_blocking_n(grp_Inverse_fu_203_ap_int_blocking_n)
);

mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start),
    .ap_done(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done),
    .ap_idle(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_idle),
    .ap_ready(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ready),
    .total_w(reg_255),
    .total_y(reg_265),
    .total_x(reg_260),
    .buf_size(buf_size_reg_839),
    .A_cast3(A_reg_901),
    .phi_mul(phi_mul_load_reg_893),
    .BIN_0_address0(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_address0),
    .BIN_0_ce0(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_ce0),
    .BIN_0_q0(BIN_0_q0),
    .BIN_1_address0(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_address0),
    .BIN_1_ce0(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_ce0),
    .BIN_1_q0(BIN_1_q0),
    .h_x_1(h_x_reg_731),
    .yy_cast(xFTrackmulKernelLut_load_reg_919),
    .wh(lshr_ln337_reg_844),
    .Qu_offset(Qu_offset),
    .Pu_address0(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_address0),
    .Pu_ce0(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_ce0),
    .Pu_q0(Pu_q0),
    .total_w_1_out(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out),
    .total_w_1_out_ap_vld(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out_ap_vld),
    .total_y_1_out(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out),
    .total_y_1_out_ap_vld(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out_ap_vld),
    .total_x_1_out(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out),
    .total_x_1_out_ap_vld(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out_ap_vld),
    .Qu_address0(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_address0),
    .Qu_ce0(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_ce0),
    .Qu_q0(Qu_q0),
    .ap_ext_blocking_n(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_str_blocking_n),
    .ap_int_blocking_n(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_int_blocking_n)
);

mean_shift_accel_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_height1_reg_763),
    .din1(p_width1_reg_753),
    .ce(1'b1),
    .dout(grp_fu_323_p2)
);

mean_shift_accel_sdiv_32ns_32ns_16_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
sdiv_32ns_32ns_16_36_seq_1_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_459_ap_start),
    .done(grp_fu_459_ap_done),
    .din0(total_x_fu_98),
    .din1(total_w_fu_106),
    .ce(1'b1),
    .dout(grp_fu_459_p2)
);

mean_shift_accel_sdiv_32ns_32ns_16_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
sdiv_32ns_32ns_16_36_seq_1_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_465_ap_start),
    .done(grp_fu_465_ap_done),
    .din0(total_y_fu_102),
    .din1(total_w_fu_106),
    .ce(1'b1),
    .dout(grp_fu_465_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Inverse_fu_203_ap_start_reg <= 1'b0;
    end else begin
        if ((((grp_Inverse_fu_203_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_Inverse_fu_203_ap_start_reg <= 1'b1;
        end else if ((grp_Inverse_fu_203_ap_ready == 1'b1)) begin
            grp_Inverse_fu_203_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg <= 1'b1;
        end else if ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ready == 1'b1)) begin
            grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln340_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln382_fu_453_p2 == 1'd1) & (icmp_ln340_1_fu_401_p2 == 1'd1)))) begin
        dispx_1_reg_175 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        dispx_1_reg_175 <= dispx_fu_499_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln340_fu_360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln382_fu_453_p2 == 1'd1) & (icmp_ln340_1_fu_401_p2 == 1'd1)))) begin
        dispy_1_reg_189 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        dispy_1_reg_189 <= dispy_fu_503_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln340_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_1_fu_110 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln340_1_fu_401_p2 == 1'd0))) begin
        i_1_fu_110 <= i_2_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln340_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul_fu_94 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln340_1_fu_401_p2 == 1'd0))) begin
        phi_mul_fu_94 <= add_ln340_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln340_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        total_w_fu_106 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        total_w_fu_106 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln340_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        total_x_fu_98 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        total_x_fu_98 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln340_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        total_y_fu_102 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        total_y_fu_102 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln340_1_fu_401_p2 == 1'd0))) begin
        A_reg_901 <= A_fu_412_p2;
        y_1_reg_906 <= y_1_fu_435_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln337_1_reg_768 <= add_ln337_1_fu_317_p2;
        p_height1_reg_763 <= grp_Inverse_fu_203_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln337_reg_758 <= add_ln337_fu_300_p2;
        h_y_reg_746 <= {{obj_hgt[15:1]}};
        p_width1_reg_753 <= grp_Inverse_fu_203_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_size_reg_839[15 : 1] <= buf_size_fu_344_p2[15 : 1];
        lshr_ln337_reg_844 <= lshr_ln337_fu_352_p2;
        zext_ln306_1_reg_813[9 : 0] <= zext_ln306_1_fu_331_p1[9 : 0];
        zext_ln306_reg_808[9 : 0] <= zext_ln306_fu_327_p1[9 : 0];
        zext_ln327_reg_818[14 : 0] <= zext_ln327_fu_335_p1[14 : 0];
        zext_ln328_reg_825[14 : 0] <= zext_ln328_fu_338_p1[14 : 0];
        zext_ln330_reg_833[14 : 0] <= zext_ln330_fu_341_p1[14 : 0];
        zext_ln340_reg_849[14 : 0] <= zext_ln340_fu_357_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        h_x_reg_731 <= {{obj_wdt[15:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        icmp_ln395_reg_934 <= icmp_ln395_fu_529_p2;
        icmp_ln399_reg_945 <= icmp_ln399_fu_565_p2;
        select_ln395_reg_939 <= select_ln395_fu_545_p3;
        select_ln399_reg_950 <= select_ln399_fu_581_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        phi_mul_load_reg_893 <= phi_mul_fu_94;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln340_1_fu_401_p2 == 1'd1)))) begin
        reg_255 <= total_w_fu_106;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln382_fu_453_p2 == 1'd0) & (icmp_ln340_1_fu_401_p2 == 1'd1)))) begin
        reg_260 <= total_x_fu_98;
        reg_265 <= total_y_fu_102;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_reg_773 <= grp_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        xFTrackmulKernelLut_load_reg_919 <= xFTrackmulKernelLut_q0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((grp_Inverse_fu_203_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((grp_Inverse_fu_203_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1) & ((ap_wait_1 & ap_sub_ext_blocking_1) == 1'b1))) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_int_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1))) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_str_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1))) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_Inverse_fu_203_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_1 = 1'b1;
    end else begin
        ap_sub_ext_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Inverse_fu_203_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_1 = 1'b1;
    end else begin
        ap_sub_int_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Inverse_fu_203_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_1 = 1'b1;
    end else begin
        ap_sub_str_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state2 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state11 == ap_CS_fsm)) begin
        ap_wait_1 = 1'b1;
    end else begin
        ap_wait_1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_Inverse_fu_203_x = h_y_reg_746;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_Inverse_fu_203_x = h_x_reg_731;
    end else begin
        grp_Inverse_fu_203_x = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln382_fu_453_p2 == 1'd0) & (icmp_ln340_1_fu_401_p2 == 1'd1))) begin
        grp_fu_459_ap_start = 1'b1;
    end else begin
        grp_fu_459_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln382_fu_453_p2 == 1'd0) & (icmp_ln340_1_fu_401_p2 == 1'd1))) begin
        grp_fu_465_ap_start = 1'b1;
    end else begin
        grp_fu_465_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        xFTrackmulKernelLut_address0 = idxprom54_fu_471_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        xFTrackmulKernelLut_address0 = 8'd0;
    end else begin
        xFTrackmulKernelLut_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        xFTrackmulKernelLut_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        xFTrackmulKernelLut_ce0 = 1'b0;
    end else begin
        xFTrackmulKernelLut_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_Inverse_fu_203_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_Inverse_fu_203_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln340_fu_360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln382_fu_453_p2 == 1'd1) & (icmp_ln340_1_fu_401_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln382_fu_453_p2 == 1'd0) & (icmp_ln340_1_fu_401_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_fu_412_p2 = (i_1_fu_110 - zext_ln328_reg_825);

assign BIN_0_address0 = grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_address0;

assign BIN_0_ce0 = grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_ce0;

assign BIN_1_address0 = grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_address0;

assign BIN_1_ce0 = grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_ce0;

assign Pu_address0 = grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_address0;

assign Pu_ce0 = grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_ce0;

assign Qu_address0 = grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_address0;

assign Qu_ce0 = grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_ce0;

assign add_ln337_1_fu_317_p2 = ($signed(sext_ln337_2_fu_314_p1) + $signed(sext_ln337_1_fu_310_p1));

assign add_ln337_fu_300_p2 = ($signed(sext_ln337_fu_296_p1) + $signed(9'd496));

assign add_ln340_fu_396_p2 = (phi_mul_fu_94 + obj_wdt);

assign add_ln391_fu_507_p2 = (dispx_1_reg_175 + C_x_read);

assign add_ln392_fu_512_p2 = (dispy_1_reg_189 + C_y_read);

assign add_ln395_fu_521_p2 = (zext_ln395_fu_517_p1 + zext_ln330_reg_833);

assign add_ln396_fu_539_p2 = ($signed(sub_ln396_fu_535_p2) + $signed(16'd65535));

assign add_ln399_fu_557_p2 = (zext_ln399_fu_553_p1 + zext_ln340_reg_849);

assign add_ln400_fu_575_p2 = ($signed(sub_ln400_fu_571_p2) + $signed(16'd65535));

assign add_ln404_fu_603_p2 = (zext_ln328_reg_825 + 16'd1);

assign add_ln408_fu_629_p2 = (zext_ln327_reg_818 + 16'd1);

assign and_ln415_1_fu_667_p0 = track_read;

assign and_ln415_1_fu_667_p2 = (xor_ln415_fu_657_p2 & and_ln415_1_fu_667_p0);

assign and_ln415_2_fu_672_p2 = (and_ln415_fu_663_p2 & and_ln415_1_fu_667_p2);

assign and_ln415_fu_663_p2 = (icmp_ln399_reg_945 & icmp_ln395_reg_934);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & 1'b1);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & 1'b1);

assign ap_return_0 = sub_ln413_fu_647_p2;

assign ap_return_1 = sub_ln414_fu_652_p2;

assign ap_return_2 = select_ln407_fu_634_p3;

assign ap_return_3 = select_ln403_fu_608_p3;

assign ap_return_4 = and_ln415_2_fu_672_p2;

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign buf_size_fu_344_p2 = (obj_hgt | 16'd1);

assign dispx_fu_499_p1 = grp_fu_459_p2[15:0];

assign dispy_fu_503_p1 = grp_fu_465_p2[15:0];

assign empty_fu_417_p1 = A_fu_412_p2[7:0];

assign grp_Inverse_fu_203_ap_start = grp_Inverse_fu_203_ap_start_reg;

assign grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start = grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg;

assign i_2_fu_406_p2 = (i_1_fu_110 + 16'd1);

assign icmp_ln340_1_fu_401_p2 = ((i_1_fu_110 == obj_hgt) ? 1'b1 : 1'b0);

assign icmp_ln340_fu_360_p2 = ((obj_hgt == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln382_fu_453_p2 = ((total_w_fu_106 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln395_fu_529_p2 = ((add_ln395_fu_521_p2 < zext_ln395_1_fu_526_p1) ? 1'b1 : 1'b0);

assign icmp_ln399_fu_565_p2 = ((add_ln399_fu_557_p2 < zext_ln399_1_fu_562_p1) ? 1'b1 : 1'b0);

assign icmp_ln403_fu_597_p2 = (($signed(sub_ln403_fu_592_p2) < $signed(17'd1)) ? 1'b1 : 1'b0);

assign icmp_ln407_fu_623_p2 = (($signed(sub_ln407_fu_618_p2) < $signed(17'd1)) ? 1'b1 : 1'b0);

assign idxprom54_fu_471_p1 = y_1_reg_906;

assign lshr_ln337_fu_352_p2 = temp_reg_773 >> sext_ln337_3_fu_349_p1;

assign or_ln407_fu_641_p2 = (icmp_ln407_fu_623_p2 | icmp_ln403_fu_597_p2);

assign select_ln395_fu_545_p3 = ((icmp_ln395_fu_529_p2[0:0] == 1'b1) ? add_ln392_fu_512_p2 : add_ln396_fu_539_p2);

assign select_ln399_fu_581_p3 = ((icmp_ln399_fu_565_p2[0:0] == 1'b1) ? add_ln391_fu_507_p2 : add_ln400_fu_575_p2);

assign select_ln403_fu_608_p3 = ((icmp_ln403_fu_597_p2[0:0] == 1'b1) ? add_ln404_fu_603_p2 : select_ln395_reg_939);

assign select_ln407_fu_634_p3 = ((icmp_ln407_fu_623_p2[0:0] == 1'b1) ? add_ln408_fu_629_p2 : select_ln399_reg_950);

assign sext_ln337_1_fu_310_p1 = $signed(grp_Inverse_fu_203_ap_return_1);

assign sext_ln337_2_fu_314_p1 = $signed(add_ln337_reg_758);

assign sext_ln337_3_fu_349_p1 = $signed(add_ln337_1_reg_768);

assign sext_ln337_fu_296_p1 = $signed(grp_Inverse_fu_203_ap_return_1);

assign sub42_fu_429_p2 = (8'd0 - empty_fu_417_p1);

assign sub_ln396_fu_535_p2 = (zext_ln306_1_reg_813 - zext_ln328_reg_825);

assign sub_ln400_fu_571_p2 = (zext_ln306_reg_808 - zext_ln327_reg_818);

assign sub_ln403_fu_592_p2 = (zext_ln403_fu_589_p1 - zext_ln330_reg_833);

assign sub_ln407_fu_618_p2 = (zext_ln407_fu_615_p1 - zext_ln340_reg_849);

assign sub_ln413_fu_647_p2 = (select_ln407_fu_634_p3 - zext_ln327_reg_818);

assign sub_ln414_fu_652_p2 = (select_ln403_fu_608_p3 - zext_ln328_reg_825);

assign tmp_fu_421_p3 = A_fu_412_p2[32'd15];

assign xor_ln415_fu_657_p2 = (or_ln407_fu_641_p2 ^ 1'd1);

assign y_1_fu_435_p3 = ((tmp_fu_421_p3[0:0] == 1'b1) ? sub42_fu_429_p2 : empty_fu_417_p1);

assign zext_ln306_1_fu_331_p1 = rows;

assign zext_ln306_fu_327_p1 = cols;

assign zext_ln327_fu_335_p1 = h_x_reg_731;

assign zext_ln328_fu_338_p1 = h_y_reg_746;

assign zext_ln330_fu_341_p1 = h_y_reg_746;

assign zext_ln340_fu_357_p1 = h_x_reg_731;

assign zext_ln395_1_fu_526_p1 = rows;

assign zext_ln395_fu_517_p1 = add_ln392_fu_512_p2;

assign zext_ln399_1_fu_562_p1 = cols;

assign zext_ln399_fu_553_p1 = add_ln391_fu_507_p2;

assign zext_ln403_fu_589_p1 = select_ln395_reg_939;

assign zext_ln407_fu_615_p1 = select_ln399_reg_950;

always @ (posedge ap_clk) begin
    zext_ln306_reg_808[15:10] <= 6'b000000;
    zext_ln306_1_reg_813[15:10] <= 6'b000000;
    zext_ln327_reg_818[15] <= 1'b0;
    zext_ln328_reg_825[15] <= 1'b0;
    zext_ln330_reg_833[16:15] <= 2'b00;
    buf_size_reg_839[0] <= 1'b1;
    zext_ln340_reg_849[16:15] <= 2'b00;
end

endmodule //mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_s
