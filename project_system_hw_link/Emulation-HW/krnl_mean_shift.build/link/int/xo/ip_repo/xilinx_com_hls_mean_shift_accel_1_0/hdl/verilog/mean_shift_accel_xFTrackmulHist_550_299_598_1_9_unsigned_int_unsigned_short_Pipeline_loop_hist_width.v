// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mean_shift_accel_xFTrackmulHist_550_299_598_1_9_unsigned_int_unsigned_short_Pipeline_loop_hist_width (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input21_dout,
        input21_empty_n,
        input21_read,
        buf_size,
        zext_ln222,
        yy_cast,
        wh,
        tmp_hist1_address0,
        tmp_hist1_ce0,
        tmp_hist1_we0,
        tmp_hist1_d0,
        tmp_hist1_q0,
        tmp_hist2_address0,
        tmp_hist2_ce0,
        tmp_hist2_we0,
        tmp_hist2_d0,
        tmp_hist2_q0,
        y_off,
        BIN_address0,
        BIN_ce0,
        BIN_we0,
        BIN_d0,
        BIN1_address0,
        BIN1_ce0,
        BIN1_we0,
        BIN1_d0,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] input21_dout;
input   input21_empty_n;
output   input21_read;
input  [15:0] buf_size;
input  [14:0] zext_ln222;
input  [15:0] yy_cast;
input  [23:0] wh;
output  [8:0] tmp_hist1_address0;
output   tmp_hist1_ce0;
output   tmp_hist1_we0;
output  [31:0] tmp_hist1_d0;
input  [31:0] tmp_hist1_q0;
output  [8:0] tmp_hist2_address0;
output   tmp_hist2_ce0;
output   tmp_hist2_we0;
output  [31:0] tmp_hist2_d0;
input  [31:0] tmp_hist2_q0;
input  [18:0] y_off;
output  [17:0] BIN_address0;
output   BIN_ce0;
output   BIN_we0;
output  [8:0] BIN_d0;
output  [17:0] BIN1_address0;
output   BIN1_ce0;
output   BIN1_we0;
output  [8:0] BIN1_d0;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg input21_read;
reg[8:0] tmp_hist1_address0;
reg tmp_hist1_ce0;
reg tmp_hist1_we0;
reg[8:0] tmp_hist2_address0;
reg tmp_hist2_ce0;
reg tmp_hist2_we0;
reg[17:0] BIN_address0;
reg BIN_ce0;
reg BIN_we0;
reg[8:0] BIN_d0;
reg[17:0] BIN1_address0;
reg BIN1_ce0;
reg BIN1_we0;
reg[8:0] BIN1_d0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln238_reg_737;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [7:0] xFTrackmulKernelLut_address0;
reg    xFTrackmulKernelLut_ce0;
wire   [15:0] xFTrackmulKernelLut_q0;
reg    input21_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [16:0] yy_cast_cast_fu_277_p1;
reg   [16:0] yy_cast_cast_reg_719;
wire   [16:0] zext_ln222_cast_fu_281_p1;
reg   [16:0] zext_ln222_cast_reg_725;
reg   [15:0] j_5_reg_730;
wire   [0:0] icmp_ln238_fu_317_p2;
wire   [7:0] x_6_fu_347_p3;
reg   [7:0] x_6_reg_741;
wire   [8:0] bin_1_fu_358_p4;
reg   [8:0] bin_1_reg_746;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] trunc_ln165_1_fu_417_p1;
reg   [0:0] trunc_ln165_1_reg_759;
reg   [17:0] lshr_ln165_1_reg_763;
wire   [7:0] x_8_fu_454_p3;
reg   [7:0] x_8_reg_768;
wire   [8:0] bin_fu_485_p4;
reg   [8:0] bin_reg_778;
reg   [8:0] tmp_hist1_addr_reg_793;
reg   [8:0] tmp_hist1_addr_reg_793_pp0_iter2_reg;
wire   [0:0] addr_cmp20_fu_526_p2;
reg   [0:0] addr_cmp20_reg_798;
reg   [31:0] tmp_hist1_load_reg_803;
reg   [8:0] tmp_hist2_addr_reg_808;
reg   [8:0] tmp_hist2_addr_reg_808_pp0_iter3_reg;
wire   [0:0] addr_cmp_fu_544_p2;
reg   [0:0] addr_cmp_reg_813;
wire   [31:0] add_ln254_fu_597_p2;
reg   [31:0] add_ln254_reg_818;
reg   [31:0] tmp_hist2_load_reg_824;
wire   [31:0] add_ln255_fu_649_p2;
reg   [31:0] add_ln255_reg_829;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln165_fu_389_p1;
wire   [63:0] zext_ln170_fu_395_p1;
wire   [63:0] zext_ln165_1_fu_497_p1;
wire   [63:0] zext_ln170_1_fu_502_p1;
wire   [63:0] zext_ln254_fu_519_p1;
wire   [63:0] zext_ln255_fu_537_p1;
reg   [63:0] reuse_addr_reg17_fu_102;
wire    ap_loop_init;
reg   [31:0] reuse_reg16_fu_106;
reg   [63:0] reuse_addr_reg_fu_110;
reg   [31:0] reuse_reg_fu_114;
reg   [15:0] x_fu_118;
wire   [15:0] j_fu_462_p2;
reg   [15:0] ap_sig_allocacmp_j_5;
wire   [0:0] trunc_ln165_fu_375_p1;
wire   [16:0] zext_ln238_fu_313_p1;
wire   [16:0] b_fu_323_p2;
wire   [7:0] trunc_ln169_fu_337_p1;
wire   [0:0] tmp_fu_329_p3;
wire   [7:0] sub_ln169_fu_341_p2;
wire   [2:0] grp_fu_267_p4;
wire   [2:0] grp_fu_257_p4;
wire   [2:0] grp_fu_247_p4;
wire   [18:0] zext_ln238_1_fu_355_p1;
wire   [18:0] loc_fu_370_p2;
wire   [17:0] lshr_ln_fu_379_p4;
wire   [15:0] j_4_fu_399_p2;
wire   [18:0] zext_ln164_1_fu_408_p1;
wire   [18:0] loc_1_fu_412_p2;
wire   [16:0] zext_ln164_fu_404_p1;
wire   [16:0] b_1_fu_431_p2;
wire   [7:0] trunc_ln169_1_fu_444_p1;
wire   [0:0] tmp_6_fu_436_p3;
wire   [7:0] sub_ln169_1_fu_448_p2;
wire   [16:0] xx_cast_fu_472_p1;
wire   [16:0] add_ln172_fu_476_p2;
wire   [16:0] xx_1_cast_fu_506_p1;
wire   [16:0] add_ln172_1_fu_510_p2;
wire  signed [23:0] grp_fu_660_p2;
wire   [15:0] K_fu_555_p4;
wire   [0:0] icmp_ln173_fu_564_p2;
wire   [15:0] dist1_fu_570_p2;
wire   [15:0] dist1_1_fu_576_p3;
wire   [31:0] reuse_select21_fu_591_p3;
wire  signed [31:0] sext_ln254_fu_584_p1;
wire  signed [23:0] grp_fu_666_p2;
wire   [15:0] K_1_fu_603_p4;
wire   [0:0] icmp_ln173_1_fu_612_p2;
wire   [15:0] dist2_fu_618_p2;
wire   [15:0] dist2_1_fu_624_p3;
wire   [31:0] reuse_select_fu_643_p3;
wire  signed [31:0] sext_ln255_fu_636_p1;
wire   [16:0] grp_fu_660_p1;
wire   [16:0] grp_fu_666_p1;
reg    grp_fu_660_ce;
reg    grp_fu_666_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
reg    ap_done_pending_pp0;
wire    ap_int_blocking_cur_n;
reg    ap_block_pp0;
reg    ap_predicate_op52_store_state2;
reg    ap_enable_operation_52;
reg    ap_enable_state2_pp0_iter0_stage1;
reg    ap_enable_operation_89;
reg    ap_enable_state3_pp0_iter1_stage0;
reg    ap_predicate_op54_store_state2;
reg    ap_enable_operation_54;
reg    ap_enable_operation_91;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [23:0] grp_fu_660_p10;
wire   [23:0] grp_fu_666_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

mean_shift_accel_xFTrackmulHist_550_299_598_1_9_unsigned_int_unsigned_short_Pipeline_loop_histdEe #(
    .DataWidth( 16 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
xFTrackmulKernelLut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xFTrackmulKernelLut_address0),
    .ce0(xFTrackmulKernelLut_ce0),
    .q0(xFTrackmulKernelLut_q0)
);

mean_shift_accel_mul_mul_24s_17ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 24 ))
mul_mul_24s_17ns_24_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(wh),
    .din1(grp_fu_660_p1),
    .ce(grp_fu_660_ce),
    .dout(grp_fu_660_p2)
);

mean_shift_accel_mul_mul_24s_17ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 24 ))
mul_mul_24s_17ns_24_4_1_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(wh),
    .din1(grp_fu_666_p1),
    .ce(grp_fu_666_ce),
    .dout(grp_fu_666_p2)
);

mean_shift_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reuse_addr_reg17_fu_102 <= 64'd18446744073709551615;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reuse_addr_reg17_fu_102 <= zext_ln254_fu_519_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_addr_reg_fu_110 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            reuse_addr_reg_fu_110 <= zext_ln255_fu_537_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg16_fu_106 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            reuse_reg16_fu_106 <= add_ln254_reg_818;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg_fu_114 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            reuse_reg_fu_114 <= add_ln255_fu_649_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_fu_118 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln238_reg_737 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        x_fu_118 <= j_fu_462_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln254_reg_818 <= add_ln254_fu_597_p2;
        addr_cmp20_reg_798 <= addr_cmp20_fu_526_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        tmp_hist1_addr_reg_793 <= zext_ln254_fu_519_p1;
        tmp_hist1_addr_reg_793_pp0_iter2_reg <= tmp_hist1_addr_reg_793;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln255_reg_829 <= add_ln255_fu_649_p2;
        addr_cmp_reg_813 <= addr_cmp_fu_544_p2;
        bin_reg_778 <= bin_fu_485_p4;
        icmp_ln238_reg_737 <= icmp_ln238_fu_317_p2;
        j_5_reg_730 <= ap_sig_allocacmp_j_5;
        tmp_hist2_addr_reg_808 <= zext_ln255_fu_537_p1;
        tmp_hist2_addr_reg_808_pp0_iter3_reg <= tmp_hist2_addr_reg_808;
        yy_cast_cast_reg_719[15 : 0] <= yy_cast_cast_fu_277_p1[15 : 0];
        zext_ln222_cast_reg_725[14 : 0] <= zext_ln222_cast_fu_281_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln238_reg_737 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bin_1_reg_746 <= bin_1_fu_358_p4;
        lshr_ln165_1_reg_763 <= {{loc_1_fu_412_p2[18:1]}};
        trunc_ln165_1_reg_759 <= trunc_ln165_1_fu_417_p1;
        x_8_reg_768 <= x_8_fu_454_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist1_load_reg_803 <= tmp_hist1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist2_load_reg_824 <= tmp_hist2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln238_fu_317_p2 == 1'd1))) begin
        x_6_reg_741 <= x_6_fu_347_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIN1_address0 = zext_ln165_1_fu_497_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        BIN1_address0 = zext_ln165_fu_389_p1;
    end else begin
        BIN1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        BIN1_ce0 = 1'b1;
    end else begin
        BIN1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIN1_d0 = bin_fu_485_p4;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        BIN1_d0 = bin_1_fu_358_p4;
    end else begin
        BIN1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln238_reg_737 == 1'd1) & (trunc_ln165_fu_375_p1 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln165_1_reg_759 == 1'd1)))) begin
        BIN1_we0 = 1'b1;
    end else begin
        BIN1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIN_address0 = zext_ln165_1_fu_497_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        BIN_address0 = zext_ln165_fu_389_p1;
    end else begin
        BIN_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        BIN_ce0 = 1'b1;
    end else begin
        BIN_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        BIN_d0 = bin_fu_485_p4;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        BIN_d0 = bin_1_fu_358_p4;
    end else begin
        BIN_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln238_reg_737 == 1'd1) & (trunc_ln165_fu_375_p1 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln165_1_reg_759 == 1'd0)))) begin
        BIN_we0 = 1'b1;
    end else begin
        BIN_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln238_reg_737 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_5 = 16'd0;
    end else begin
        ap_sig_allocacmp_j_5 = x_fu_118;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_660_ce = 1'b1;
    end else begin
        grp_fu_660_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_666_ce = 1'b1;
    end else begin
        grp_fu_666_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln238_reg_737 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input21_blk_n = input21_empty_n;
    end else begin
        input21_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln238_reg_737 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input21_read = 1'b1;
    end else begin
        input21_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist1_address0 = tmp_hist1_addr_reg_793_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist1_address0 = zext_ln254_fu_519_p1;
    end else begin
        tmp_hist1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist1_ce0 = 1'b1;
    end else begin
        tmp_hist1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist1_we0 = 1'b1;
    end else begin
        tmp_hist1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist2_address0 = tmp_hist2_addr_reg_808_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_hist2_address0 = zext_ln255_fu_537_p1;
    end else begin
        tmp_hist2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tmp_hist2_ce0 = 1'b1;
    end else begin
        tmp_hist2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_hist2_we0 = 1'b1;
    end else begin
        tmp_hist2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xFTrackmulKernelLut_address0 = zext_ln170_1_fu_502_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        xFTrackmulKernelLut_address0 = zext_ln170_fu_395_p1;
    end else begin
        xFTrackmulKernelLut_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        xFTrackmulKernelLut_ce0 = 1'b1;
    end else begin
        xFTrackmulKernelLut_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign K_1_fu_603_p4 = {{grp_fu_666_p2[23:8]}};

assign K_fu_555_p4 = {{grp_fu_660_p2[23:8]}};

assign add_ln172_1_fu_510_p2 = (xx_1_cast_fu_506_p1 + yy_cast_cast_reg_719);

assign add_ln172_fu_476_p2 = (xx_cast_fu_472_p1 + yy_cast_cast_reg_719);

assign add_ln254_fu_597_p2 = ($signed(reuse_select21_fu_591_p3) + $signed(sext_ln254_fu_584_p1));

assign add_ln255_fu_649_p2 = ($signed(reuse_select_fu_643_p3) + $signed(sext_ln255_fu_636_p1));

assign addr_cmp20_fu_526_p2 = ((reuse_addr_reg17_fu_102 == zext_ln254_fu_519_p1) ? 1'b1 : 1'b0);

assign addr_cmp_fu_544_p2 = ((reuse_addr_reg_fu_110 == zext_ln255_fu_537_p1) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_pp0 = (((ap_ST_fsm_pp0_stage1 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage1_subdone)) | ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone)));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((input21_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((input21_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((icmp_ln238_reg_737 == 1'd1) & (input21_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((icmp_ln238_reg_737 == 1'd1) & (input21_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((icmp_ln238_reg_737 == 1'd1) & (input21_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (input21_empty_n == 1'b0);
end

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_52 = (ap_predicate_op52_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_54 = (ap_predicate_op54_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_89 = (trunc_ln165_1_reg_759 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_91 = (trunc_ln165_1_reg_759 == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state2_pp0_iter0_stage1 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_enable_state3_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = input21_blk_n;

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

always @ (*) begin
    ap_predicate_op52_store_state2 = ((icmp_ln238_reg_737 == 1'd1) & (trunc_ln165_fu_375_p1 == 1'd0));
end

always @ (*) begin
    ap_predicate_op54_store_state2 = ((icmp_ln238_reg_737 == 1'd1) & (trunc_ln165_fu_375_p1 == 1'd1));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign b_1_fu_431_p2 = (zext_ln164_fu_404_p1 - zext_ln222_cast_reg_725);

assign b_fu_323_p2 = (zext_ln238_fu_313_p1 - zext_ln222_cast_fu_281_p1);

assign bin_1_fu_358_p4 = {{{grp_fu_267_p4}, {grp_fu_257_p4}}, {grp_fu_247_p4}};

assign bin_fu_485_p4 = {{{grp_fu_267_p4}, {grp_fu_257_p4}}, {grp_fu_247_p4}};

assign dist1_1_fu_576_p3 = ((icmp_ln173_fu_564_p2[0:0] == 1'b1) ? dist1_fu_570_p2 : 16'd0);

assign dist1_fu_570_p2 = (16'd256 - K_fu_555_p4);

assign dist2_1_fu_624_p3 = ((icmp_ln173_1_fu_612_p2[0:0] == 1'b1) ? dist2_fu_618_p2 : 16'd0);

assign dist2_fu_618_p2 = (16'd256 - K_1_fu_603_p4);

assign grp_fu_247_p4 = {{input21_dout[7:5]}};

assign grp_fu_257_p4 = {{input21_dout[15:13]}};

assign grp_fu_267_p4 = {{input21_dout[23:21]}};

assign grp_fu_660_p1 = grp_fu_660_p10;

assign grp_fu_660_p10 = add_ln172_fu_476_p2;

assign grp_fu_666_p1 = grp_fu_666_p10;

assign grp_fu_666_p10 = add_ln172_1_fu_510_p2;

assign icmp_ln173_1_fu_612_p2 = (($signed(K_1_fu_603_p4) < $signed(16'd257)) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_564_p2 = (($signed(K_fu_555_p4) < $signed(16'd257)) ? 1'b1 : 1'b0);

assign icmp_ln238_fu_317_p2 = ((ap_sig_allocacmp_j_5 < buf_size) ? 1'b1 : 1'b0);

assign j_4_fu_399_p2 = (j_5_reg_730 | 16'd1);

assign j_fu_462_p2 = (j_5_reg_730 + 16'd2);

assign loc_1_fu_412_p2 = (y_off + zext_ln164_1_fu_408_p1);

assign loc_fu_370_p2 = (y_off + zext_ln238_1_fu_355_p1);

assign lshr_ln_fu_379_p4 = {{loc_fu_370_p2[18:1]}};

assign reuse_select21_fu_591_p3 = ((addr_cmp20_reg_798[0:0] == 1'b1) ? reuse_reg16_fu_106 : tmp_hist1_load_reg_803);

assign reuse_select_fu_643_p3 = ((addr_cmp_reg_813[0:0] == 1'b1) ? reuse_reg_fu_114 : tmp_hist2_load_reg_824);

assign sext_ln254_fu_584_p1 = $signed(dist1_1_fu_576_p3);

assign sext_ln255_fu_636_p1 = $signed(dist2_1_fu_624_p3);

assign sub_ln169_1_fu_448_p2 = (8'd0 - trunc_ln169_1_fu_444_p1);

assign sub_ln169_fu_341_p2 = (8'd0 - trunc_ln169_fu_337_p1);

assign tmp_6_fu_436_p3 = b_1_fu_431_p2[32'd16];

assign tmp_fu_329_p3 = b_fu_323_p2[32'd16];

assign tmp_hist1_d0 = add_ln254_reg_818;

assign tmp_hist2_d0 = add_ln255_reg_829;

assign trunc_ln165_1_fu_417_p1 = loc_1_fu_412_p2[0:0];

assign trunc_ln165_fu_375_p1 = loc_fu_370_p2[0:0];

assign trunc_ln169_1_fu_444_p1 = b_1_fu_431_p2[7:0];

assign trunc_ln169_fu_337_p1 = b_fu_323_p2[7:0];

assign x_6_fu_347_p3 = ((tmp_fu_329_p3[0:0] == 1'b1) ? sub_ln169_fu_341_p2 : trunc_ln169_fu_337_p1);

assign x_8_fu_454_p3 = ((tmp_6_fu_436_p3[0:0] == 1'b1) ? sub_ln169_1_fu_448_p2 : trunc_ln169_1_fu_444_p1);

assign xx_1_cast_fu_506_p1 = xFTrackmulKernelLut_q0;

assign xx_cast_fu_472_p1 = xFTrackmulKernelLut_q0;

assign yy_cast_cast_fu_277_p1 = yy_cast;

assign zext_ln164_1_fu_408_p1 = j_4_fu_399_p2;

assign zext_ln164_fu_404_p1 = j_4_fu_399_p2;

assign zext_ln165_1_fu_497_p1 = lshr_ln165_1_reg_763;

assign zext_ln165_fu_389_p1 = lshr_ln_fu_379_p4;

assign zext_ln170_1_fu_502_p1 = x_8_reg_768;

assign zext_ln170_fu_395_p1 = x_6_reg_741;

assign zext_ln222_cast_fu_281_p1 = zext_ln222;

assign zext_ln238_1_fu_355_p1 = j_5_reg_730;

assign zext_ln238_fu_313_p1 = ap_sig_allocacmp_j_5;

assign zext_ln254_fu_519_p1 = bin_1_reg_746;

assign zext_ln255_fu_537_p1 = bin_reg_778;

always @ (posedge ap_clk) begin
    yy_cast_cast_reg_719[16] <= 1'b0;
    zext_ln222_cast_reg_725[16:15] <= 2'b00;
end

endmodule //mean_shift_accel_xFTrackmulHist_550_299_598_1_9_unsigned_int_unsigned_short_Pipeline_loop_hist_width
