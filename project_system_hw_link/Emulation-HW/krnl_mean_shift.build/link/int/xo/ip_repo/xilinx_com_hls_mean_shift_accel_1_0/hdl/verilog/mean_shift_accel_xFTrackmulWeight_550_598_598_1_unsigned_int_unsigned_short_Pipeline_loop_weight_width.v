// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        total_w,
        total_y,
        total_x,
        buf_size,
        A_cast3,
        phi_mul,
        BIN_0_address0,
        BIN_0_ce0,
        BIN_0_q0,
        BIN_1_address0,
        BIN_1_ce0,
        BIN_1_q0,
        h_x_1,
        yy_cast,
        wh,
        Qu_offset,
        Pu_address0,
        Pu_ce0,
        Pu_q0,
        total_w_1_out,
        total_w_1_out_ap_vld,
        total_y_1_out,
        total_y_1_out_ap_vld,
        total_x_1_out,
        total_x_1_out_ap_vld,
        Qu_address0,
        Qu_ce0,
        Qu_q0,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] total_w;
input  [31:0] total_y;
input  [31:0] total_x;
input  [15:0] buf_size;
input  [15:0] A_cast3;
input  [15:0] phi_mul;
output  [17:0] BIN_0_address0;
output   BIN_0_ce0;
input  [8:0] BIN_0_q0;
output  [17:0] BIN_1_address0;
output   BIN_1_ce0;
input  [8:0] BIN_1_q0;
input  [14:0] h_x_1;
input  [15:0] yy_cast;
input  [31:0] wh;
input  [3:0] Qu_offset;
output  [8:0] Pu_address0;
output   Pu_ce0;
input  [31:0] Pu_q0;
output  [31:0] total_w_1_out;
output   total_w_1_out_ap_vld;
output  [31:0] total_y_1_out;
output   total_y_1_out_ap_vld;
output  [31:0] total_x_1_out;
output   total_x_1_out_ap_vld;
output  [12:0] Qu_address0;
output   Qu_ce0;
input  [31:0] Qu_q0;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg BIN_0_ce0;
reg BIN_1_ce0;
reg Pu_ce0;
reg total_w_1_out_ap_vld;
reg total_y_1_out_ap_vld;
reg total_x_1_out_ap_vld;
reg Qu_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln347_fu_330_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [7:0] xFTrackmulKernelLut_address0;
reg    xFTrackmulKernelLut_ce0;
wire   [15:0] xFTrackmulKernelLut_q0;
wire   [6:0] xFTrackmulSqrtLut_address0;
reg    xFTrackmulSqrtLut_ce0;
wire   [3:0] xFTrackmulSqrtLut_q0;
wire    ap_block_pp0_stage0_11001;
wire   [16:0] yy_cast_cast_fu_291_p1;
reg   [16:0] yy_cast_cast_reg_623;
wire  signed [19:0] A_cast3_cast_fu_299_p1;
reg  signed [19:0] A_cast3_cast_reg_628;
reg   [0:0] icmp_ln347_reg_633;
reg   [0:0] icmp_ln347_reg_633_pp0_iter1_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter2_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter3_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter4_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter5_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter6_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter7_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter8_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter9_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter10_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter11_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter12_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter13_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter14_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter15_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter16_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter17_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter18_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter19_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter20_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter21_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter22_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter23_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter24_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter25_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter26_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter27_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter28_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter29_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter30_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter31_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter32_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter33_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter34_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter35_reg;
reg   [0:0] icmp_ln347_reg_633_pp0_iter36_reg;
wire   [0:0] trunc_ln357_fu_348_p1;
reg   [0:0] trunc_ln357_reg_637;
reg   [0:0] trunc_ln357_reg_637_pp0_iter1_reg;
reg   [0:0] trunc_ln357_reg_637_pp0_iter2_reg;
reg   [0:0] trunc_ln357_reg_637_pp0_iter3_reg;
reg   [0:0] trunc_ln357_reg_637_pp0_iter4_reg;
reg   [14:0] lshr_ln_reg_642;
reg   [14:0] lshr_ln_reg_642_pp0_iter1_reg;
reg   [14:0] lshr_ln_reg_642_pp0_iter2_reg;
reg   [14:0] lshr_ln_reg_642_pp0_iter3_reg;
wire  signed [15:0] B_fu_362_p2;
reg  signed [15:0] B_reg_647;
reg  signed [15:0] B_reg_647_pp0_iter1_reg;
reg  signed [15:0] B_reg_647_pp0_iter2_reg;
reg  signed [15:0] B_reg_647_pp0_iter3_reg;
reg  signed [15:0] B_reg_647_pp0_iter4_reg;
reg  signed [15:0] B_reg_647_pp0_iter5_reg;
reg  signed [15:0] B_reg_647_pp0_iter6_reg;
reg  signed [15:0] B_reg_647_pp0_iter7_reg;
reg  signed [15:0] B_reg_647_pp0_iter8_reg;
reg  signed [15:0] B_reg_647_pp0_iter9_reg;
reg  signed [15:0] B_reg_647_pp0_iter10_reg;
reg  signed [15:0] B_reg_647_pp0_iter11_reg;
reg  signed [15:0] B_reg_647_pp0_iter12_reg;
reg  signed [15:0] B_reg_647_pp0_iter13_reg;
reg  signed [15:0] B_reg_647_pp0_iter14_reg;
reg  signed [15:0] B_reg_647_pp0_iter15_reg;
reg  signed [15:0] B_reg_647_pp0_iter16_reg;
reg  signed [15:0] B_reg_647_pp0_iter17_reg;
reg  signed [15:0] B_reg_647_pp0_iter18_reg;
reg  signed [15:0] B_reg_647_pp0_iter19_reg;
reg  signed [15:0] B_reg_647_pp0_iter20_reg;
reg  signed [15:0] B_reg_647_pp0_iter21_reg;
reg  signed [15:0] B_reg_647_pp0_iter22_reg;
reg  signed [15:0] B_reg_647_pp0_iter23_reg;
reg  signed [15:0] B_reg_647_pp0_iter24_reg;
reg  signed [15:0] B_reg_647_pp0_iter25_reg;
reg  signed [15:0] B_reg_647_pp0_iter26_reg;
reg  signed [15:0] B_reg_647_pp0_iter27_reg;
reg  signed [15:0] B_reg_647_pp0_iter28_reg;
reg  signed [15:0] B_reg_647_pp0_iter29_reg;
reg  signed [15:0] B_reg_647_pp0_iter30_reg;
reg  signed [15:0] B_reg_647_pp0_iter31_reg;
reg  signed [15:0] B_reg_647_pp0_iter32_reg;
reg  signed [15:0] B_reg_647_pp0_iter33_reg;
reg  signed [15:0] B_reg_647_pp0_iter34_reg;
wire   [7:0] x_4_fu_386_p3;
reg   [7:0] x_4_reg_652;
wire   [16:0] add_ln364_fu_407_p2;
reg   [16:0] add_ln364_reg_662;
wire   [31:0] grp_fu_415_p2;
reg   [31:0] mul_ln364_reg_682;
wire   [8:0] bin_fu_425_p3;
reg   [8:0] bin_reg_687;
wire   [0:0] icmp_ln367_fu_432_p2;
reg   [0:0] icmp_ln367_reg_692;
reg   [0:0] icmp_ln367_reg_692_pp0_iter6_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter7_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter8_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter9_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter10_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter11_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter12_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter13_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter14_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter15_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter16_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter17_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter18_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter19_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter20_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter21_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter22_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter23_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter24_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter25_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter26_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter27_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter28_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter29_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter30_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter31_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter32_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter33_reg;
reg   [0:0] icmp_ln367_reg_692_pp0_iter34_reg;
reg   [31:0] Qu_load_reg_701;
wire   [0:0] icmp_ln367_1_fu_453_p2;
reg   [0:0] icmp_ln367_1_reg_706;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter7_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter8_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter9_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter10_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter11_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter12_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter13_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter14_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter15_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter16_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter17_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter18_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter19_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter20_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter21_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter22_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter23_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter24_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter25_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter26_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter27_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter28_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter29_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter30_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter31_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter32_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter33_reg;
reg   [0:0] icmp_ln367_1_reg_706_pp0_iter34_reg;
wire   [23:0] trunc_ln4_fu_459_p4;
wire   [0:0] icmp_ln367_2_fu_469_p2;
reg   [0:0] icmp_ln367_2_reg_720;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter8_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter9_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter10_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter11_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter12_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter13_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter14_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter15_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter16_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter17_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter18_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter19_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter20_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter21_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter22_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter23_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter24_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter25_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter26_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter27_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter28_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter29_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter30_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter31_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter32_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter33_reg;
reg   [0:0] icmp_ln367_2_reg_720_pp0_iter34_reg;
reg   [23:0] trunc_ln5_reg_724;
reg   [23:0] trunc_ln5_reg_724_pp0_iter8_reg;
reg   [23:0] trunc_ln5_reg_724_pp0_iter9_reg;
wire   [0:0] icmp_ln281_fu_497_p2;
reg   [0:0] icmp_ln281_reg_735;
reg   [0:0] icmp_ln281_reg_735_pp0_iter11_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter12_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter13_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter14_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter15_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter16_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter17_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter18_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter19_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter20_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter21_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter22_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter23_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter24_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter25_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter26_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter27_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter28_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter29_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter30_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter31_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter32_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter33_reg;
reg   [0:0] icmp_ln281_reg_735_pp0_iter34_reg;
wire   [19:0] zext_ln375_1_fu_517_p1;
reg   [3:0] ap_phi_mux_weight_phi_fu_280_p6;
wire   [3:0] ap_phi_reg_pp0_iter0_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter1_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter2_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter3_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter4_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter5_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter6_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter7_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter8_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter9_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter10_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter11_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter12_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter13_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter14_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter15_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter16_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter17_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter18_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter19_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter20_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter21_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter22_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter23_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter24_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter25_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter26_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter27_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter28_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter29_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter30_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter31_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter32_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter33_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter34_weight_reg_275;
reg   [3:0] ap_phi_reg_pp0_iter35_weight_reg_275;
wire   [63:0] zext_ln362_fu_399_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln357_fu_420_p1;
wire   [63:0] zext_ln367_1_fu_444_p1;
wire   [63:0] zext_ln367_fu_449_p1;
wire   [63:0] zext_ln282_fu_502_p1;
reg   [31:0] total_x_1_fu_100;
wire  signed [31:0] grp_fu_573_p3;
reg  signed [31:0] ap_sig_allocacmp_total_x_1_load;
wire    ap_loop_init;
reg   [31:0] total_y_1_fu_104;
wire  signed [31:0] grp_fu_565_p3;
reg  signed [31:0] ap_sig_allocacmp_total_y_1_load;
reg   [31:0] total_w_1_fu_108;
wire   [31:0] total_w_2_fu_521_p2;
reg   [14:0] x_2_fu_112;
reg   [14:0] ap_sig_allocacmp_j_1;
wire   [14:0] j_fu_336_p2;
wire    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln347_fu_326_p1;
wire   [15:0] loc_fu_342_p2;
wire   [15:0] h_x_1_cast_fu_295_p1;
wire   [7:0] trunc_ln321_fu_368_p1;
wire   [0:0] tmp_1_fu_372_p3;
wire   [7:0] sub_ln361_fu_380_p2;
wire   [16:0] xx_cast_fu_403_p1;
wire   [16:0] grp_fu_415_p1;
wire   [12:0] tmp_fu_437_p3;
wire   [23:0] grp_fu_484_p0;
wire   [23:0] grp_fu_484_p1;
wire   [30:0] zext_ln281_1_fu_494_p1;
wire   [30:0] icmp_ln281_fu_497_p1;
wire  signed [30:0] grp_fu_558_p2;
wire   [23:0] grp_fu_484_p2;
wire   [31:0] zext_ln375_fu_513_p1;
wire   [23:0] grp_fu_558_p0;
wire   [6:0] grp_fu_558_p1;
wire  signed [15:0] grp_fu_565_p0;
wire   [3:0] grp_fu_565_p1;
wire   [3:0] grp_fu_573_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [31:0] grp_fu_415_p10;
wire   [30:0] grp_fu_558_p00;
reg    ap_condition_928;
reg    ap_condition_910;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_done_reg = 1'b0;
end

mean_shift_accel_xFTrackmulHist_550_299_598_1_9_unsigned_int_unsigned_short_Pipeline_loop_histdEe #(
    .DataWidth( 16 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
xFTrackmulKernelLut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xFTrackmulKernelLut_address0),
    .ce0(xFTrackmulKernelLut_ce0),
    .q0(xFTrackmulKernelLut_q0)
);

mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weigg8j #(
    .DataWidth( 4 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
xFTrackmulSqrtLut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xFTrackmulSqrtLut_address0),
    .ce0(xFTrackmulSqrtLut_ce0),
    .q0(xFTrackmulSqrtLut_q0)
);

mean_shift_accel_mul_32s_17ns_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
mul_32s_17ns_32_2_1_U117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(wh),
    .din1(grp_fu_415_p1),
    .ce(1'b1),
    .dout(grp_fu_415_p2)
);

mean_shift_accel_udiv_24ns_24ns_24_28_1 #(
    .ID( 1 ),
    .NUM_STAGE( 28 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
udiv_24ns_24ns_24_28_1_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_484_p0),
    .din1(grp_fu_484_p1),
    .ce(1'b1),
    .dout(grp_fu_484_p2)
);

mean_shift_accel_mul_mul_24ns_7ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 31 ))
mul_mul_24ns_7ns_31_4_1_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_558_p0),
    .din1(grp_fu_558_p1),
    .ce(1'b1),
    .dout(grp_fu_558_p2)
);

mean_shift_accel_mac_muladd_16s_4ns_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_4ns_32s_32_4_1_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_565_p0),
    .din1(grp_fu_565_p1),
    .din2(ap_sig_allocacmp_total_y_1_load),
    .ce(1'b1),
    .dout(grp_fu_565_p3)
);

mean_shift_accel_mac_muladd_16s_4ns_32s_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_16s_4ns_32s_32_4_1_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_reg_647_pp0_iter34_reg),
    .din1(grp_fu_573_p1),
    .din2(ap_sig_allocacmp_total_x_1_load),
    .ce(1'b1),
    .dout(grp_fu_573_p3)
);

mean_shift_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter37_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((1'b1 == ap_condition_928)) begin
            ap_phi_reg_pp0_iter11_weight_reg_275 <= 4'd10;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter11_weight_reg_275 <= ap_phi_reg_pp0_iter10_weight_reg_275;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((1'b1 == ap_condition_910)) begin
            ap_phi_reg_pp0_iter8_weight_reg_275 <= 4'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter8_weight_reg_275 <= ap_phi_reg_pp0_iter7_weight_reg_275;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            total_w_1_fu_108 <= total_w;
        end else if ((ap_enable_reg_pp0_iter35 == 1'b1)) begin
            total_w_1_fu_108 <= total_w_2_fu_521_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            total_x_1_fu_100 <= total_x;
        end else if ((ap_enable_reg_pp0_iter38 == 1'b1)) begin
            total_x_1_fu_100 <= grp_fu_573_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            total_y_1_fu_104 <= total_y;
        end else if ((ap_enable_reg_pp0_iter38 == 1'b1)) begin
            total_y_1_fu_104 <= grp_fu_565_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln347_fu_330_p2 == 1'd1))) begin
            x_2_fu_112 <= j_fu_336_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_2_fu_112 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_cast3_cast_reg_628 <= A_cast3_cast_fu_299_p1;
        B_reg_647_pp0_iter1_reg <= B_reg_647;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln347_reg_633 <= icmp_ln347_fu_330_p2;
        icmp_ln347_reg_633_pp0_iter1_reg <= icmp_ln347_reg_633;
        lshr_ln_reg_642_pp0_iter1_reg <= lshr_ln_reg_642;
        trunc_ln357_reg_637_pp0_iter1_reg <= trunc_ln357_reg_637;
        yy_cast_cast_reg_623[15 : 0] <= yy_cast_cast_fu_291_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln347_fu_330_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_reg_647 <= B_fu_362_p2;
        lshr_ln_reg_642 <= {{loc_fu_342_p2[15:1]}};
        trunc_ln357_reg_637 <= trunc_ln357_fu_348_p1;
        x_4_reg_652 <= x_4_fu_386_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        B_reg_647_pp0_iter10_reg <= B_reg_647_pp0_iter9_reg;
        B_reg_647_pp0_iter11_reg <= B_reg_647_pp0_iter10_reg;
        B_reg_647_pp0_iter12_reg <= B_reg_647_pp0_iter11_reg;
        B_reg_647_pp0_iter13_reg <= B_reg_647_pp0_iter12_reg;
        B_reg_647_pp0_iter14_reg <= B_reg_647_pp0_iter13_reg;
        B_reg_647_pp0_iter15_reg <= B_reg_647_pp0_iter14_reg;
        B_reg_647_pp0_iter16_reg <= B_reg_647_pp0_iter15_reg;
        B_reg_647_pp0_iter17_reg <= B_reg_647_pp0_iter16_reg;
        B_reg_647_pp0_iter18_reg <= B_reg_647_pp0_iter17_reg;
        B_reg_647_pp0_iter19_reg <= B_reg_647_pp0_iter18_reg;
        B_reg_647_pp0_iter20_reg <= B_reg_647_pp0_iter19_reg;
        B_reg_647_pp0_iter21_reg <= B_reg_647_pp0_iter20_reg;
        B_reg_647_pp0_iter22_reg <= B_reg_647_pp0_iter21_reg;
        B_reg_647_pp0_iter23_reg <= B_reg_647_pp0_iter22_reg;
        B_reg_647_pp0_iter24_reg <= B_reg_647_pp0_iter23_reg;
        B_reg_647_pp0_iter25_reg <= B_reg_647_pp0_iter24_reg;
        B_reg_647_pp0_iter26_reg <= B_reg_647_pp0_iter25_reg;
        B_reg_647_pp0_iter27_reg <= B_reg_647_pp0_iter26_reg;
        B_reg_647_pp0_iter28_reg <= B_reg_647_pp0_iter27_reg;
        B_reg_647_pp0_iter29_reg <= B_reg_647_pp0_iter28_reg;
        B_reg_647_pp0_iter2_reg <= B_reg_647_pp0_iter1_reg;
        B_reg_647_pp0_iter30_reg <= B_reg_647_pp0_iter29_reg;
        B_reg_647_pp0_iter31_reg <= B_reg_647_pp0_iter30_reg;
        B_reg_647_pp0_iter32_reg <= B_reg_647_pp0_iter31_reg;
        B_reg_647_pp0_iter33_reg <= B_reg_647_pp0_iter32_reg;
        B_reg_647_pp0_iter34_reg <= B_reg_647_pp0_iter33_reg;
        B_reg_647_pp0_iter3_reg <= B_reg_647_pp0_iter2_reg;
        B_reg_647_pp0_iter4_reg <= B_reg_647_pp0_iter3_reg;
        B_reg_647_pp0_iter5_reg <= B_reg_647_pp0_iter4_reg;
        B_reg_647_pp0_iter6_reg <= B_reg_647_pp0_iter5_reg;
        B_reg_647_pp0_iter7_reg <= B_reg_647_pp0_iter6_reg;
        B_reg_647_pp0_iter8_reg <= B_reg_647_pp0_iter7_reg;
        B_reg_647_pp0_iter9_reg <= B_reg_647_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln281_reg_735_pp0_iter11_reg <= icmp_ln281_reg_735;
        icmp_ln281_reg_735_pp0_iter12_reg <= icmp_ln281_reg_735_pp0_iter11_reg;
        icmp_ln281_reg_735_pp0_iter13_reg <= icmp_ln281_reg_735_pp0_iter12_reg;
        icmp_ln281_reg_735_pp0_iter14_reg <= icmp_ln281_reg_735_pp0_iter13_reg;
        icmp_ln281_reg_735_pp0_iter15_reg <= icmp_ln281_reg_735_pp0_iter14_reg;
        icmp_ln281_reg_735_pp0_iter16_reg <= icmp_ln281_reg_735_pp0_iter15_reg;
        icmp_ln281_reg_735_pp0_iter17_reg <= icmp_ln281_reg_735_pp0_iter16_reg;
        icmp_ln281_reg_735_pp0_iter18_reg <= icmp_ln281_reg_735_pp0_iter17_reg;
        icmp_ln281_reg_735_pp0_iter19_reg <= icmp_ln281_reg_735_pp0_iter18_reg;
        icmp_ln281_reg_735_pp0_iter20_reg <= icmp_ln281_reg_735_pp0_iter19_reg;
        icmp_ln281_reg_735_pp0_iter21_reg <= icmp_ln281_reg_735_pp0_iter20_reg;
        icmp_ln281_reg_735_pp0_iter22_reg <= icmp_ln281_reg_735_pp0_iter21_reg;
        icmp_ln281_reg_735_pp0_iter23_reg <= icmp_ln281_reg_735_pp0_iter22_reg;
        icmp_ln281_reg_735_pp0_iter24_reg <= icmp_ln281_reg_735_pp0_iter23_reg;
        icmp_ln281_reg_735_pp0_iter25_reg <= icmp_ln281_reg_735_pp0_iter24_reg;
        icmp_ln281_reg_735_pp0_iter26_reg <= icmp_ln281_reg_735_pp0_iter25_reg;
        icmp_ln281_reg_735_pp0_iter27_reg <= icmp_ln281_reg_735_pp0_iter26_reg;
        icmp_ln281_reg_735_pp0_iter28_reg <= icmp_ln281_reg_735_pp0_iter27_reg;
        icmp_ln281_reg_735_pp0_iter29_reg <= icmp_ln281_reg_735_pp0_iter28_reg;
        icmp_ln281_reg_735_pp0_iter30_reg <= icmp_ln281_reg_735_pp0_iter29_reg;
        icmp_ln281_reg_735_pp0_iter31_reg <= icmp_ln281_reg_735_pp0_iter30_reg;
        icmp_ln281_reg_735_pp0_iter32_reg <= icmp_ln281_reg_735_pp0_iter31_reg;
        icmp_ln281_reg_735_pp0_iter33_reg <= icmp_ln281_reg_735_pp0_iter32_reg;
        icmp_ln281_reg_735_pp0_iter34_reg <= icmp_ln281_reg_735_pp0_iter33_reg;
        icmp_ln347_reg_633_pp0_iter10_reg <= icmp_ln347_reg_633_pp0_iter9_reg;
        icmp_ln347_reg_633_pp0_iter11_reg <= icmp_ln347_reg_633_pp0_iter10_reg;
        icmp_ln347_reg_633_pp0_iter12_reg <= icmp_ln347_reg_633_pp0_iter11_reg;
        icmp_ln347_reg_633_pp0_iter13_reg <= icmp_ln347_reg_633_pp0_iter12_reg;
        icmp_ln347_reg_633_pp0_iter14_reg <= icmp_ln347_reg_633_pp0_iter13_reg;
        icmp_ln347_reg_633_pp0_iter15_reg <= icmp_ln347_reg_633_pp0_iter14_reg;
        icmp_ln347_reg_633_pp0_iter16_reg <= icmp_ln347_reg_633_pp0_iter15_reg;
        icmp_ln347_reg_633_pp0_iter17_reg <= icmp_ln347_reg_633_pp0_iter16_reg;
        icmp_ln347_reg_633_pp0_iter18_reg <= icmp_ln347_reg_633_pp0_iter17_reg;
        icmp_ln347_reg_633_pp0_iter19_reg <= icmp_ln347_reg_633_pp0_iter18_reg;
        icmp_ln347_reg_633_pp0_iter20_reg <= icmp_ln347_reg_633_pp0_iter19_reg;
        icmp_ln347_reg_633_pp0_iter21_reg <= icmp_ln347_reg_633_pp0_iter20_reg;
        icmp_ln347_reg_633_pp0_iter22_reg <= icmp_ln347_reg_633_pp0_iter21_reg;
        icmp_ln347_reg_633_pp0_iter23_reg <= icmp_ln347_reg_633_pp0_iter22_reg;
        icmp_ln347_reg_633_pp0_iter24_reg <= icmp_ln347_reg_633_pp0_iter23_reg;
        icmp_ln347_reg_633_pp0_iter25_reg <= icmp_ln347_reg_633_pp0_iter24_reg;
        icmp_ln347_reg_633_pp0_iter26_reg <= icmp_ln347_reg_633_pp0_iter25_reg;
        icmp_ln347_reg_633_pp0_iter27_reg <= icmp_ln347_reg_633_pp0_iter26_reg;
        icmp_ln347_reg_633_pp0_iter28_reg <= icmp_ln347_reg_633_pp0_iter27_reg;
        icmp_ln347_reg_633_pp0_iter29_reg <= icmp_ln347_reg_633_pp0_iter28_reg;
        icmp_ln347_reg_633_pp0_iter2_reg <= icmp_ln347_reg_633_pp0_iter1_reg;
        icmp_ln347_reg_633_pp0_iter30_reg <= icmp_ln347_reg_633_pp0_iter29_reg;
        icmp_ln347_reg_633_pp0_iter31_reg <= icmp_ln347_reg_633_pp0_iter30_reg;
        icmp_ln347_reg_633_pp0_iter32_reg <= icmp_ln347_reg_633_pp0_iter31_reg;
        icmp_ln347_reg_633_pp0_iter33_reg <= icmp_ln347_reg_633_pp0_iter32_reg;
        icmp_ln347_reg_633_pp0_iter34_reg <= icmp_ln347_reg_633_pp0_iter33_reg;
        icmp_ln347_reg_633_pp0_iter35_reg <= icmp_ln347_reg_633_pp0_iter34_reg;
        icmp_ln347_reg_633_pp0_iter36_reg <= icmp_ln347_reg_633_pp0_iter35_reg;
        icmp_ln347_reg_633_pp0_iter3_reg <= icmp_ln347_reg_633_pp0_iter2_reg;
        icmp_ln347_reg_633_pp0_iter4_reg <= icmp_ln347_reg_633_pp0_iter3_reg;
        icmp_ln347_reg_633_pp0_iter5_reg <= icmp_ln347_reg_633_pp0_iter4_reg;
        icmp_ln347_reg_633_pp0_iter6_reg <= icmp_ln347_reg_633_pp0_iter5_reg;
        icmp_ln347_reg_633_pp0_iter7_reg <= icmp_ln347_reg_633_pp0_iter6_reg;
        icmp_ln347_reg_633_pp0_iter8_reg <= icmp_ln347_reg_633_pp0_iter7_reg;
        icmp_ln347_reg_633_pp0_iter9_reg <= icmp_ln347_reg_633_pp0_iter8_reg;
        icmp_ln367_1_reg_706_pp0_iter10_reg <= icmp_ln367_1_reg_706_pp0_iter9_reg;
        icmp_ln367_1_reg_706_pp0_iter11_reg <= icmp_ln367_1_reg_706_pp0_iter10_reg;
        icmp_ln367_1_reg_706_pp0_iter12_reg <= icmp_ln367_1_reg_706_pp0_iter11_reg;
        icmp_ln367_1_reg_706_pp0_iter13_reg <= icmp_ln367_1_reg_706_pp0_iter12_reg;
        icmp_ln367_1_reg_706_pp0_iter14_reg <= icmp_ln367_1_reg_706_pp0_iter13_reg;
        icmp_ln367_1_reg_706_pp0_iter15_reg <= icmp_ln367_1_reg_706_pp0_iter14_reg;
        icmp_ln367_1_reg_706_pp0_iter16_reg <= icmp_ln367_1_reg_706_pp0_iter15_reg;
        icmp_ln367_1_reg_706_pp0_iter17_reg <= icmp_ln367_1_reg_706_pp0_iter16_reg;
        icmp_ln367_1_reg_706_pp0_iter18_reg <= icmp_ln367_1_reg_706_pp0_iter17_reg;
        icmp_ln367_1_reg_706_pp0_iter19_reg <= icmp_ln367_1_reg_706_pp0_iter18_reg;
        icmp_ln367_1_reg_706_pp0_iter20_reg <= icmp_ln367_1_reg_706_pp0_iter19_reg;
        icmp_ln367_1_reg_706_pp0_iter21_reg <= icmp_ln367_1_reg_706_pp0_iter20_reg;
        icmp_ln367_1_reg_706_pp0_iter22_reg <= icmp_ln367_1_reg_706_pp0_iter21_reg;
        icmp_ln367_1_reg_706_pp0_iter23_reg <= icmp_ln367_1_reg_706_pp0_iter22_reg;
        icmp_ln367_1_reg_706_pp0_iter24_reg <= icmp_ln367_1_reg_706_pp0_iter23_reg;
        icmp_ln367_1_reg_706_pp0_iter25_reg <= icmp_ln367_1_reg_706_pp0_iter24_reg;
        icmp_ln367_1_reg_706_pp0_iter26_reg <= icmp_ln367_1_reg_706_pp0_iter25_reg;
        icmp_ln367_1_reg_706_pp0_iter27_reg <= icmp_ln367_1_reg_706_pp0_iter26_reg;
        icmp_ln367_1_reg_706_pp0_iter28_reg <= icmp_ln367_1_reg_706_pp0_iter27_reg;
        icmp_ln367_1_reg_706_pp0_iter29_reg <= icmp_ln367_1_reg_706_pp0_iter28_reg;
        icmp_ln367_1_reg_706_pp0_iter30_reg <= icmp_ln367_1_reg_706_pp0_iter29_reg;
        icmp_ln367_1_reg_706_pp0_iter31_reg <= icmp_ln367_1_reg_706_pp0_iter30_reg;
        icmp_ln367_1_reg_706_pp0_iter32_reg <= icmp_ln367_1_reg_706_pp0_iter31_reg;
        icmp_ln367_1_reg_706_pp0_iter33_reg <= icmp_ln367_1_reg_706_pp0_iter32_reg;
        icmp_ln367_1_reg_706_pp0_iter34_reg <= icmp_ln367_1_reg_706_pp0_iter33_reg;
        icmp_ln367_1_reg_706_pp0_iter7_reg <= icmp_ln367_1_reg_706;
        icmp_ln367_1_reg_706_pp0_iter8_reg <= icmp_ln367_1_reg_706_pp0_iter7_reg;
        icmp_ln367_1_reg_706_pp0_iter9_reg <= icmp_ln367_1_reg_706_pp0_iter8_reg;
        icmp_ln367_2_reg_720_pp0_iter10_reg <= icmp_ln367_2_reg_720_pp0_iter9_reg;
        icmp_ln367_2_reg_720_pp0_iter11_reg <= icmp_ln367_2_reg_720_pp0_iter10_reg;
        icmp_ln367_2_reg_720_pp0_iter12_reg <= icmp_ln367_2_reg_720_pp0_iter11_reg;
        icmp_ln367_2_reg_720_pp0_iter13_reg <= icmp_ln367_2_reg_720_pp0_iter12_reg;
        icmp_ln367_2_reg_720_pp0_iter14_reg <= icmp_ln367_2_reg_720_pp0_iter13_reg;
        icmp_ln367_2_reg_720_pp0_iter15_reg <= icmp_ln367_2_reg_720_pp0_iter14_reg;
        icmp_ln367_2_reg_720_pp0_iter16_reg <= icmp_ln367_2_reg_720_pp0_iter15_reg;
        icmp_ln367_2_reg_720_pp0_iter17_reg <= icmp_ln367_2_reg_720_pp0_iter16_reg;
        icmp_ln367_2_reg_720_pp0_iter18_reg <= icmp_ln367_2_reg_720_pp0_iter17_reg;
        icmp_ln367_2_reg_720_pp0_iter19_reg <= icmp_ln367_2_reg_720_pp0_iter18_reg;
        icmp_ln367_2_reg_720_pp0_iter20_reg <= icmp_ln367_2_reg_720_pp0_iter19_reg;
        icmp_ln367_2_reg_720_pp0_iter21_reg <= icmp_ln367_2_reg_720_pp0_iter20_reg;
        icmp_ln367_2_reg_720_pp0_iter22_reg <= icmp_ln367_2_reg_720_pp0_iter21_reg;
        icmp_ln367_2_reg_720_pp0_iter23_reg <= icmp_ln367_2_reg_720_pp0_iter22_reg;
        icmp_ln367_2_reg_720_pp0_iter24_reg <= icmp_ln367_2_reg_720_pp0_iter23_reg;
        icmp_ln367_2_reg_720_pp0_iter25_reg <= icmp_ln367_2_reg_720_pp0_iter24_reg;
        icmp_ln367_2_reg_720_pp0_iter26_reg <= icmp_ln367_2_reg_720_pp0_iter25_reg;
        icmp_ln367_2_reg_720_pp0_iter27_reg <= icmp_ln367_2_reg_720_pp0_iter26_reg;
        icmp_ln367_2_reg_720_pp0_iter28_reg <= icmp_ln367_2_reg_720_pp0_iter27_reg;
        icmp_ln367_2_reg_720_pp0_iter29_reg <= icmp_ln367_2_reg_720_pp0_iter28_reg;
        icmp_ln367_2_reg_720_pp0_iter30_reg <= icmp_ln367_2_reg_720_pp0_iter29_reg;
        icmp_ln367_2_reg_720_pp0_iter31_reg <= icmp_ln367_2_reg_720_pp0_iter30_reg;
        icmp_ln367_2_reg_720_pp0_iter32_reg <= icmp_ln367_2_reg_720_pp0_iter31_reg;
        icmp_ln367_2_reg_720_pp0_iter33_reg <= icmp_ln367_2_reg_720_pp0_iter32_reg;
        icmp_ln367_2_reg_720_pp0_iter34_reg <= icmp_ln367_2_reg_720_pp0_iter33_reg;
        icmp_ln367_2_reg_720_pp0_iter8_reg <= icmp_ln367_2_reg_720;
        icmp_ln367_2_reg_720_pp0_iter9_reg <= icmp_ln367_2_reg_720_pp0_iter8_reg;
        icmp_ln367_reg_692_pp0_iter10_reg <= icmp_ln367_reg_692_pp0_iter9_reg;
        icmp_ln367_reg_692_pp0_iter11_reg <= icmp_ln367_reg_692_pp0_iter10_reg;
        icmp_ln367_reg_692_pp0_iter12_reg <= icmp_ln367_reg_692_pp0_iter11_reg;
        icmp_ln367_reg_692_pp0_iter13_reg <= icmp_ln367_reg_692_pp0_iter12_reg;
        icmp_ln367_reg_692_pp0_iter14_reg <= icmp_ln367_reg_692_pp0_iter13_reg;
        icmp_ln367_reg_692_pp0_iter15_reg <= icmp_ln367_reg_692_pp0_iter14_reg;
        icmp_ln367_reg_692_pp0_iter16_reg <= icmp_ln367_reg_692_pp0_iter15_reg;
        icmp_ln367_reg_692_pp0_iter17_reg <= icmp_ln367_reg_692_pp0_iter16_reg;
        icmp_ln367_reg_692_pp0_iter18_reg <= icmp_ln367_reg_692_pp0_iter17_reg;
        icmp_ln367_reg_692_pp0_iter19_reg <= icmp_ln367_reg_692_pp0_iter18_reg;
        icmp_ln367_reg_692_pp0_iter20_reg <= icmp_ln367_reg_692_pp0_iter19_reg;
        icmp_ln367_reg_692_pp0_iter21_reg <= icmp_ln367_reg_692_pp0_iter20_reg;
        icmp_ln367_reg_692_pp0_iter22_reg <= icmp_ln367_reg_692_pp0_iter21_reg;
        icmp_ln367_reg_692_pp0_iter23_reg <= icmp_ln367_reg_692_pp0_iter22_reg;
        icmp_ln367_reg_692_pp0_iter24_reg <= icmp_ln367_reg_692_pp0_iter23_reg;
        icmp_ln367_reg_692_pp0_iter25_reg <= icmp_ln367_reg_692_pp0_iter24_reg;
        icmp_ln367_reg_692_pp0_iter26_reg <= icmp_ln367_reg_692_pp0_iter25_reg;
        icmp_ln367_reg_692_pp0_iter27_reg <= icmp_ln367_reg_692_pp0_iter26_reg;
        icmp_ln367_reg_692_pp0_iter28_reg <= icmp_ln367_reg_692_pp0_iter27_reg;
        icmp_ln367_reg_692_pp0_iter29_reg <= icmp_ln367_reg_692_pp0_iter28_reg;
        icmp_ln367_reg_692_pp0_iter30_reg <= icmp_ln367_reg_692_pp0_iter29_reg;
        icmp_ln367_reg_692_pp0_iter31_reg <= icmp_ln367_reg_692_pp0_iter30_reg;
        icmp_ln367_reg_692_pp0_iter32_reg <= icmp_ln367_reg_692_pp0_iter31_reg;
        icmp_ln367_reg_692_pp0_iter33_reg <= icmp_ln367_reg_692_pp0_iter32_reg;
        icmp_ln367_reg_692_pp0_iter34_reg <= icmp_ln367_reg_692_pp0_iter33_reg;
        icmp_ln367_reg_692_pp0_iter6_reg <= icmp_ln367_reg_692;
        icmp_ln367_reg_692_pp0_iter7_reg <= icmp_ln367_reg_692_pp0_iter6_reg;
        icmp_ln367_reg_692_pp0_iter8_reg <= icmp_ln367_reg_692_pp0_iter7_reg;
        icmp_ln367_reg_692_pp0_iter9_reg <= icmp_ln367_reg_692_pp0_iter8_reg;
        lshr_ln_reg_642_pp0_iter2_reg <= lshr_ln_reg_642_pp0_iter1_reg;
        lshr_ln_reg_642_pp0_iter3_reg <= lshr_ln_reg_642_pp0_iter2_reg;
        trunc_ln357_reg_637_pp0_iter2_reg <= trunc_ln357_reg_637_pp0_iter1_reg;
        trunc_ln357_reg_637_pp0_iter3_reg <= trunc_ln357_reg_637_pp0_iter2_reg;
        trunc_ln357_reg_637_pp0_iter4_reg <= trunc_ln357_reg_637_pp0_iter3_reg;
        trunc_ln5_reg_724_pp0_iter8_reg <= trunc_ln5_reg_724;
        trunc_ln5_reg_724_pp0_iter9_reg <= trunc_ln5_reg_724_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln367_reg_692 == 1'd0) & (icmp_ln347_reg_633_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Qu_load_reg_701 <= Qu_q0;
        icmp_ln367_1_reg_706 <= icmp_ln367_1_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln347_reg_633_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln364_reg_662 <= add_ln364_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_weight_reg_275 <= ap_phi_reg_pp0_iter9_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_weight_reg_275 <= ap_phi_reg_pp0_iter11_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_weight_reg_275 <= ap_phi_reg_pp0_iter12_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_weight_reg_275 <= ap_phi_reg_pp0_iter13_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_weight_reg_275 <= ap_phi_reg_pp0_iter14_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_weight_reg_275 <= ap_phi_reg_pp0_iter15_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_weight_reg_275 <= ap_phi_reg_pp0_iter16_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_weight_reg_275 <= ap_phi_reg_pp0_iter17_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_weight_reg_275 <= ap_phi_reg_pp0_iter18_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_weight_reg_275 <= ap_phi_reg_pp0_iter0_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_weight_reg_275 <= ap_phi_reg_pp0_iter19_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_weight_reg_275 <= ap_phi_reg_pp0_iter20_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_weight_reg_275 <= ap_phi_reg_pp0_iter21_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_weight_reg_275 <= ap_phi_reg_pp0_iter22_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter24_weight_reg_275 <= ap_phi_reg_pp0_iter23_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter25_weight_reg_275 <= ap_phi_reg_pp0_iter24_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter26_weight_reg_275 <= ap_phi_reg_pp0_iter25_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter27_weight_reg_275 <= ap_phi_reg_pp0_iter26_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        ap_phi_reg_pp0_iter28_weight_reg_275 <= ap_phi_reg_pp0_iter27_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        ap_phi_reg_pp0_iter29_weight_reg_275 <= ap_phi_reg_pp0_iter28_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_weight_reg_275 <= ap_phi_reg_pp0_iter1_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        ap_phi_reg_pp0_iter30_weight_reg_275 <= ap_phi_reg_pp0_iter29_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        ap_phi_reg_pp0_iter31_weight_reg_275 <= ap_phi_reg_pp0_iter30_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        ap_phi_reg_pp0_iter32_weight_reg_275 <= ap_phi_reg_pp0_iter31_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        ap_phi_reg_pp0_iter33_weight_reg_275 <= ap_phi_reg_pp0_iter32_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        ap_phi_reg_pp0_iter34_weight_reg_275 <= ap_phi_reg_pp0_iter33_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        ap_phi_reg_pp0_iter35_weight_reg_275 <= ap_phi_reg_pp0_iter34_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_weight_reg_275 <= ap_phi_reg_pp0_iter2_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_weight_reg_275 <= ap_phi_reg_pp0_iter3_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_weight_reg_275 <= ap_phi_reg_pp0_iter4_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_weight_reg_275 <= ap_phi_reg_pp0_iter5_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_weight_reg_275 <= ap_phi_reg_pp0_iter6_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_weight_reg_275 <= ap_phi_reg_pp0_iter8_weight_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln347_reg_633_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bin_reg_687 <= bin_fu_425_p3;
        icmp_ln367_reg_692 <= icmp_ln367_fu_432_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln367_2_reg_720_pp0_iter9_reg == 1'd0) & (icmp_ln367_1_reg_706_pp0_iter9_reg == 1'd0) & (icmp_ln367_reg_692_pp0_iter9_reg == 1'd0) & (icmp_ln347_reg_633_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln281_reg_735 <= icmp_ln281_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln367_1_reg_706 == 1'd0) & (icmp_ln367_reg_692_pp0_iter6_reg == 1'd0) & (icmp_ln347_reg_633_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln367_2_reg_720 <= icmp_ln367_2_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln347_reg_633_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln364_reg_682 <= grp_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln367_2_fu_469_p2 == 1'd0) & (icmp_ln367_1_reg_706 == 1'd0) & (icmp_ln367_reg_692_pp0_iter6_reg == 1'd0) & (icmp_ln347_reg_633_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln5_reg_724 <= {{Qu_load_reg_701[31:8]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        BIN_0_ce0 = 1'b1;
    end else begin
        BIN_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        BIN_1_ce0 = 1'b1;
    end else begin
        BIN_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Pu_ce0 = 1'b1;
    end else begin
        Pu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Qu_ce0 = 1'b1;
    end else begin
        Qu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln347_fu_330_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter37_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln281_reg_735_pp0_iter34_reg == 1'd1) & (icmp_ln367_2_reg_720_pp0_iter34_reg == 1'd0) & (icmp_ln367_1_reg_706_pp0_iter34_reg == 1'd0) & (icmp_ln367_reg_692_pp0_iter34_reg == 1'd0) & (icmp_ln347_reg_633_pp0_iter34_reg == 1'd1))) begin
        ap_phi_mux_weight_phi_fu_280_p6 = xFTrackmulSqrtLut_q0;
    end else begin
        ap_phi_mux_weight_phi_fu_280_p6 = ap_phi_reg_pp0_iter35_weight_reg_275;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 15'd0;
    end else begin
        ap_sig_allocacmp_j_1 = x_2_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        ap_sig_allocacmp_total_x_1_load = grp_fu_573_p3;
    end else begin
        ap_sig_allocacmp_total_x_1_load = total_x_1_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        ap_sig_allocacmp_total_y_1_load = grp_fu_565_p3;
    end else begin
        ap_sig_allocacmp_total_y_1_load = total_y_1_fu_104;
    end
end

always @ (*) begin
    if (((icmp_ln347_reg_633_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        total_w_1_out_ap_vld = 1'b1;
    end else begin
        total_w_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln347_reg_633_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        total_x_1_out_ap_vld = 1'b1;
    end else begin
        total_x_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln347_reg_633_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        total_y_1_out_ap_vld = 1'b1;
    end else begin
        total_y_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        xFTrackmulKernelLut_ce0 = 1'b1;
    end else begin
        xFTrackmulKernelLut_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        xFTrackmulSqrtLut_ce0 = 1'b1;
    end else begin
        xFTrackmulSqrtLut_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_cast3_cast_fu_299_p1 = $signed(A_cast3);

assign BIN_0_address0 = zext_ln357_fu_420_p1;

assign BIN_1_address0 = zext_ln357_fu_420_p1;

assign B_fu_362_p2 = (zext_ln347_fu_326_p1 - h_x_1_cast_fu_295_p1);

assign Pu_address0 = zext_ln367_fu_449_p1;

assign Qu_address0 = zext_ln367_1_fu_444_p1;

assign add_ln364_fu_407_p2 = (xx_cast_fu_403_p1 + yy_cast_cast_reg_623);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_910 = ((((icmp_ln367_1_reg_706 == 1'd1) & (icmp_ln347_reg_633_pp0_iter6_reg == 1'd1)) | ((icmp_ln367_2_fu_469_p2 == 1'd1) & (icmp_ln347_reg_633_pp0_iter6_reg == 1'd1))) | ((icmp_ln367_reg_692_pp0_iter6_reg == 1'd1) & (icmp_ln347_reg_633_pp0_iter6_reg == 1'd1)));
end

always @ (*) begin
    ap_condition_928 = ((icmp_ln281_fu_497_p2 == 1'd0) & (icmp_ln367_2_reg_720_pp0_iter9_reg == 1'd0) & (icmp_ln367_1_reg_706_pp0_iter9_reg == 1'd0) & (icmp_ln367_reg_692_pp0_iter9_reg == 1'd0) & (icmp_ln347_reg_633_pp0_iter9_reg == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_n = (1'b1 & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_weight_reg_275 = 'bx;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign bin_fu_425_p3 = ((trunc_ln357_reg_637_pp0_iter4_reg[0:0] == 1'b1) ? BIN_1_q0 : BIN_0_q0);

assign grp_fu_415_p1 = grp_fu_415_p10;

assign grp_fu_415_p10 = add_ln364_reg_662;

assign grp_fu_484_p0 = {{Qu_load_reg_701[31:8]}};

assign grp_fu_484_p1 = {{Pu_q0[31:8]}};

assign grp_fu_558_p0 = grp_fu_558_p00;

assign grp_fu_558_p00 = trunc_ln4_fu_459_p4;

assign grp_fu_558_p1 = 31'd100;

assign grp_fu_565_p0 = A_cast3_cast_reg_628;

assign grp_fu_565_p1 = zext_ln375_1_fu_517_p1;

assign grp_fu_573_p1 = zext_ln375_1_fu_517_p1;

assign h_x_1_cast_fu_295_p1 = h_x_1;

assign icmp_ln281_fu_497_p1 = grp_fu_558_p2;

assign icmp_ln281_fu_497_p2 = ((zext_ln281_1_fu_494_p1 < icmp_ln281_fu_497_p1) ? 1'b1 : 1'b0);

assign icmp_ln347_fu_330_p2 = (($signed(zext_ln347_fu_326_p1) < $signed(buf_size)) ? 1'b1 : 1'b0);

assign icmp_ln367_1_fu_453_p2 = ((Qu_q0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln367_2_fu_469_p2 = ((trunc_ln4_fu_459_p4 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln367_fu_432_p2 = ((mul_ln364_reg_682 > 32'd65791) ? 1'b1 : 1'b0);

assign j_fu_336_p2 = (ap_sig_allocacmp_j_1 + 15'd1);

assign loc_fu_342_p2 = (phi_mul + zext_ln347_fu_326_p1);

assign sub_ln361_fu_380_p2 = (8'd0 - trunc_ln321_fu_368_p1);

assign tmp_1_fu_372_p3 = B_fu_362_p2[32'd15];

assign tmp_fu_437_p3 = {{Qu_offset}, {bin_fu_425_p3}};

assign total_w_1_out = total_w_1_fu_108;

assign total_w_2_fu_521_p2 = (zext_ln375_fu_513_p1 + total_w_1_fu_108);

assign total_x_1_out = total_x_1_fu_100;

assign total_y_1_out = total_y_1_fu_104;

assign trunc_ln321_fu_368_p1 = B_fu_362_p2[7:0];

assign trunc_ln357_fu_348_p1 = loc_fu_342_p2[0:0];

assign trunc_ln4_fu_459_p4 = {{Pu_q0[31:8]}};

assign xFTrackmulKernelLut_address0 = zext_ln362_fu_399_p1;

assign xFTrackmulSqrtLut_address0 = zext_ln282_fu_502_p1;

assign x_4_fu_386_p3 = ((tmp_1_fu_372_p3[0:0] == 1'b1) ? sub_ln361_fu_380_p2 : trunc_ln321_fu_368_p1);

assign xx_cast_fu_403_p1 = xFTrackmulKernelLut_q0;

assign yy_cast_cast_fu_291_p1 = yy_cast;

assign zext_ln281_1_fu_494_p1 = trunc_ln5_reg_724_pp0_iter9_reg;

assign zext_ln282_fu_502_p1 = grp_fu_484_p2;

assign zext_ln347_fu_326_p1 = ap_sig_allocacmp_j_1;

assign zext_ln357_fu_420_p1 = lshr_ln_reg_642_pp0_iter3_reg;

assign zext_ln362_fu_399_p1 = x_4_reg_652;

assign zext_ln367_1_fu_444_p1 = tmp_fu_437_p3;

assign zext_ln367_fu_449_p1 = bin_reg_687;

assign zext_ln375_1_fu_517_p1 = ap_phi_mux_weight_phi_fu_280_p6;

assign zext_ln375_fu_513_p1 = ap_phi_mux_weight_phi_fu_280_p6;

always @ (posedge ap_clk) begin
    yy_cast_cast_reg_623[16] <= 1'b0;
end

endmodule //mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width
