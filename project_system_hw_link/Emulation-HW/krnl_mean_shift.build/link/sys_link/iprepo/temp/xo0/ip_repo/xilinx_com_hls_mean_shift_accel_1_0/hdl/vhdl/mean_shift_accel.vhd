-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mean_shift_accel is
generic (
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM4_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM4_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM4_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM3_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM3_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM5_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM5_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM5_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM4_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM4_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM4_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM3_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM5_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM5_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM5_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    event_done : OUT STD_LOGIC;
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    m_axi_gmem4_AWVALID : OUT STD_LOGIC;
    m_axi_gmem4_AWREADY : IN STD_LOGIC;
    m_axi_gmem4_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem4_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem4_WVALID : OUT STD_LOGIC;
    m_axi_gmem4_WREADY : IN STD_LOGIC;
    m_axi_gmem4_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_DATA_WIDTH-1 downto 0);
    m_axi_gmem4_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem4_WLAST : OUT STD_LOGIC;
    m_axi_gmem4_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_WUSER_WIDTH-1 downto 0);
    m_axi_gmem4_ARVALID : OUT STD_LOGIC;
    m_axi_gmem4_ARREADY : IN STD_LOGIC;
    m_axi_gmem4_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem4_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem4_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem4_RVALID : IN STD_LOGIC;
    m_axi_gmem4_RREADY : OUT STD_LOGIC;
    m_axi_gmem4_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_DATA_WIDTH-1 downto 0);
    m_axi_gmem4_RLAST : IN STD_LOGIC;
    m_axi_gmem4_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_RUSER_WIDTH-1 downto 0);
    m_axi_gmem4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_BVALID : IN STD_LOGIC;
    m_axi_gmem4_BREADY : OUT STD_LOGIC;
    m_axi_gmem4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem4_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_ID_WIDTH-1 downto 0);
    m_axi_gmem4_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM4_BUSER_WIDTH-1 downto 0);
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_WUSER_WIDTH-1 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_RUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_BUSER_WIDTH-1 downto 0);
    m_axi_gmem5_AWVALID : OUT STD_LOGIC;
    m_axi_gmem5_AWREADY : IN STD_LOGIC;
    m_axi_gmem5_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ADDR_WIDTH-1 downto 0);
    m_axi_gmem5_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem5_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem5_WVALID : OUT STD_LOGIC;
    m_axi_gmem5_WREADY : IN STD_LOGIC;
    m_axi_gmem5_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_DATA_WIDTH-1 downto 0);
    m_axi_gmem5_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem5_WLAST : OUT STD_LOGIC;
    m_axi_gmem5_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_WUSER_WIDTH-1 downto 0);
    m_axi_gmem5_ARVALID : OUT STD_LOGIC;
    m_axi_gmem5_ARREADY : IN STD_LOGIC;
    m_axi_gmem5_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ADDR_WIDTH-1 downto 0);
    m_axi_gmem5_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem5_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem5_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem5_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem5_RVALID : IN STD_LOGIC;
    m_axi_gmem5_RREADY : OUT STD_LOGIC;
    m_axi_gmem5_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_DATA_WIDTH-1 downto 0);
    m_axi_gmem5_RLAST : IN STD_LOGIC;
    m_axi_gmem5_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_RUSER_WIDTH-1 downto 0);
    m_axi_gmem5_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_BVALID : IN STD_LOGIC;
    m_axi_gmem5_BREADY : OUT STD_LOGIC;
    m_axi_gmem5_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem5_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_ID_WIDTH-1 downto 0);
    m_axi_gmem5_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM5_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    event_start : OUT STD_LOGIC;
    stall_start_ext : OUT STD_LOGIC;
    stall_done_ext : OUT STD_LOGIC;
    stall_start_str : OUT STD_LOGIC;
    stall_done_str : OUT STD_LOGIC;
    stall_start_int : OUT STD_LOGIC;
    stall_done_int : OUT STD_LOGIC );
end;


architecture behav of mean_shift_accel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mean_shift_accel_mean_shift_accel,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.920000,HLS_SYN_LAT=14054726,HLS_SYN_TPT=none,HLS_SYN_MEM=60,HLS_SYN_DSP=0,HLS_SYN_FF=12771,HLS_SYN_LUT=17192,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal img_inp : STD_LOGIC_VECTOR (63 downto 0);
    signal tlx : STD_LOGIC_VECTOR (63 downto 0);
    signal tly : STD_LOGIC_VECTOR (63 downto 0);
    signal obj_height : STD_LOGIC_VECTOR (63 downto 0);
    signal obj_width : STD_LOGIC_VECTOR (63 downto 0);
    signal dx : STD_LOGIC_VECTOR (63 downto 0);
    signal dy : STD_LOGIC_VECTOR (63 downto 0);
    signal track : STD_LOGIC_VECTOR (63 downto 0);
    signal frame_status : STD_LOGIC_VECTOR (7 downto 0);
    signal no_objects : STD_LOGIC_VECTOR (7 downto 0);
    signal no_of_iterations : STD_LOGIC_VECTOR (7 downto 0);
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal track_read_reg_273 : STD_LOGIC_VECTOR (63 downto 0);
    signal dy_read_reg_278 : STD_LOGIC_VECTOR (63 downto 0);
    signal dx_read_reg_283 : STD_LOGIC_VECTOR (63 downto 0);
    signal obj_width_read_reg_288 : STD_LOGIC_VECTOR (63 downto 0);
    signal obj_height_read_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal tly_read_reg_298 : STD_LOGIC_VECTOR (63 downto 0);
    signal tlx_read_reg_303 : STD_LOGIC_VECTOR (63 downto 0);
    signal img_inp_read_reg_308 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_73_fu_259_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_73_reg_314 : STD_LOGIC_VECTOR (9 downto 0);
    signal outMat_cols_fu_264_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal outMat_cols_reg_320 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_fu_269_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_reg_336 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_ap_start : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_ap_done : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_ap_idle : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_ap_ready : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_ap_ext_blocking_n : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_ap_str_blocking_n : STD_LOGIC;
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_ap_int_blocking_n : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_start : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_idle : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_ready : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WLAST : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_RREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_BREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WLAST : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_RREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_BREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WLAST : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_RREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_BREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WLAST : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARVALID : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_RREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_BREADY : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_ext_blocking_n : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_str_blocking_n : STD_LOGIC;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_int_blocking_n : STD_LOGIC;
    signal gmem1_AWVALID : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WVALID : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARVALID : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RREADY : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_RLAST : STD_LOGIC;
    signal gmem1_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem1_BREADY : STD_LOGIC;
    signal gmem1_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_ARVALID : STD_LOGIC;
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RREADY : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem2_RLAST : STD_LOGIC;
    signal gmem2_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal gmem2_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_AWREADY : STD_LOGIC;
    signal gmem4_WREADY : STD_LOGIC;
    signal gmem4_ARVALID : STD_LOGIC;
    signal gmem4_ARREADY : STD_LOGIC;
    signal gmem4_RVALID : STD_LOGIC;
    signal gmem4_RREADY : STD_LOGIC;
    signal gmem4_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem4_RLAST : STD_LOGIC;
    signal gmem4_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem4_BVALID : STD_LOGIC;
    signal gmem4_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem4_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem4_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_AWVALID : STD_LOGIC;
    signal gmem3_AWREADY : STD_LOGIC;
    signal gmem3_WVALID : STD_LOGIC;
    signal gmem3_WREADY : STD_LOGIC;
    signal gmem3_ARVALID : STD_LOGIC;
    signal gmem3_ARREADY : STD_LOGIC;
    signal gmem3_RVALID : STD_LOGIC;
    signal gmem3_RREADY : STD_LOGIC;
    signal gmem3_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem3_RLAST : STD_LOGIC;
    signal gmem3_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem3_BVALID : STD_LOGIC;
    signal gmem3_BREADY : STD_LOGIC;
    signal gmem3_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem3_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem5_AWVALID : STD_LOGIC;
    signal gmem5_AWREADY : STD_LOGIC;
    signal gmem5_WVALID : STD_LOGIC;
    signal gmem5_WREADY : STD_LOGIC;
    signal gmem5_ARVALID : STD_LOGIC;
    signal gmem5_ARREADY : STD_LOGIC;
    signal gmem5_RVALID : STD_LOGIC;
    signal gmem5_RREADY : STD_LOGIC;
    signal gmem5_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem5_RLAST : STD_LOGIC;
    signal gmem5_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem5_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem5_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem5_BVALID : STD_LOGIC;
    signal gmem5_BREADY : STD_LOGIC;
    signal gmem5_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem5_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem5_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rgb2hsv_9_550_598_1_s_fu_208_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call60 : BOOLEAN;
    signal grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ext_blocking_sub_n : STD_LOGIC;
    signal ap_wait_0 : STD_LOGIC;
    signal ap_sub_ext_blocking_0 : STD_LOGIC;
    signal ap_wait_1 : STD_LOGIC;
    signal ap_sub_ext_blocking_1 : STD_LOGIC;
    signal ap_str_blocking_sub_n : STD_LOGIC;
    signal ap_sub_str_blocking_0 : STD_LOGIC;
    signal ap_sub_str_blocking_1 : STD_LOGIC;
    signal ap_int_blocking_sub_n : STD_LOGIC;
    signal ap_sub_int_blocking_0 : STD_LOGIC;
    signal ap_sub_int_blocking_1 : STD_LOGIC;
    signal ap_ext_blocking_n : STD_LOGIC;
    signal ap_str_blocking_n : STD_LOGIC;
    signal ap_int_blocking_n : STD_LOGIC;
    signal ap_ext_blocking_n_reg : STD_LOGIC;
    signal ap_str_blocking_n_reg : STD_LOGIC;
    signal ap_int_blocking_n_reg : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mean_shift_accel_rgb2hsv_9_550_598_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_src_mat_data : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component mean_shift_accel_MeanShift_10_4_550_598_9_550_598_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (9 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_in_mat_data : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        x1 : IN STD_LOGIC_VECTOR (63 downto 0);
        y1 : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem4_AWVALID : OUT STD_LOGIC;
        m_axi_gmem4_AWREADY : IN STD_LOGIC;
        m_axi_gmem4_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem4_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_WVALID : OUT STD_LOGIC;
        m_axi_gmem4_WREADY : IN STD_LOGIC;
        m_axi_gmem4_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem4_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_WLAST : OUT STD_LOGIC;
        m_axi_gmem4_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_ARVALID : OUT STD_LOGIC;
        m_axi_gmem4_ARREADY : IN STD_LOGIC;
        m_axi_gmem4_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem4_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem4_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_RVALID : IN STD_LOGIC;
        m_axi_gmem4_RREADY : OUT STD_LOGIC;
        m_axi_gmem4_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem4_RLAST : IN STD_LOGIC;
        m_axi_gmem4_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_BVALID : IN STD_LOGIC;
        m_axi_gmem4_BREADY : OUT STD_LOGIC;
        m_axi_gmem4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem4_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem4_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        obj_height : IN STD_LOGIC_VECTOR (63 downto 0);
        obj_width : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWVALID : OUT STD_LOGIC;
        m_axi_gmem3_AWREADY : IN STD_LOGIC;
        m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WVALID : OUT STD_LOGIC;
        m_axi_gmem3_WREADY : IN STD_LOGIC;
        m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_WLAST : OUT STD_LOGIC;
        m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARVALID : OUT STD_LOGIC;
        m_axi_gmem3_ARREADY : IN STD_LOGIC;
        m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RVALID : IN STD_LOGIC;
        m_axi_gmem3_RREADY : OUT STD_LOGIC;
        m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem3_RLAST : IN STD_LOGIC;
        m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BVALID : IN STD_LOGIC;
        m_axi_gmem3_BREADY : OUT STD_LOGIC;
        m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        dx : IN STD_LOGIC_VECTOR (63 downto 0);
        dy : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem5_AWVALID : OUT STD_LOGIC;
        m_axi_gmem5_AWREADY : IN STD_LOGIC;
        m_axi_gmem5_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem5_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem5_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_WVALID : OUT STD_LOGIC;
        m_axi_gmem5_WREADY : IN STD_LOGIC;
        m_axi_gmem5_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem5_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_WLAST : OUT STD_LOGIC;
        m_axi_gmem5_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_ARVALID : OUT STD_LOGIC;
        m_axi_gmem5_ARREADY : IN STD_LOGIC;
        m_axi_gmem5_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem5_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem5_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem5_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem5_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_RVALID : IN STD_LOGIC;
        m_axi_gmem5_RREADY : OUT STD_LOGIC;
        m_axi_gmem5_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem5_RLAST : IN STD_LOGIC;
        m_axi_gmem5_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_BVALID : IN STD_LOGIC;
        m_axi_gmem5_BREADY : OUT STD_LOGIC;
        m_axi_gmem5_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem5_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem5_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        status : IN STD_LOGIC_VECTOR (63 downto 0);
        frame_status : IN STD_LOGIC_VECTOR (7 downto 0);
        no_objects : IN STD_LOGIC_VECTOR (7 downto 0);
        no_iters : IN STD_LOGIC_VECTOR (6 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component mean_shift_accel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        img_inp : OUT STD_LOGIC_VECTOR (63 downto 0);
        tlx : OUT STD_LOGIC_VECTOR (63 downto 0);
        tly : OUT STD_LOGIC_VECTOR (63 downto 0);
        obj_height : OUT STD_LOGIC_VECTOR (63 downto 0);
        obj_width : OUT STD_LOGIC_VECTOR (63 downto 0);
        dx : OUT STD_LOGIC_VECTOR (63 downto 0);
        dy : OUT STD_LOGIC_VECTOR (63 downto 0);
        track : OUT STD_LOGIC_VECTOR (63 downto 0);
        frame_status : OUT STD_LOGIC_VECTOR (7 downto 0);
        no_objects : OUT STD_LOGIC_VECTOR (7 downto 0);
        no_of_iterations : OUT STD_LOGIC_VECTOR (7 downto 0);
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        event_start : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component mean_shift_accel_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component mean_shift_accel_gmem2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component mean_shift_accel_gmem4_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component mean_shift_accel_gmem3_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component mean_shift_accel_gmem5_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_rgb2hsv_9_550_598_1_s_fu_208 : component mean_shift_accel_rgb2hsv_9_550_598_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_rgb2hsv_9_550_598_1_s_fu_208_ap_start,
        ap_done => grp_rgb2hsv_9_550_598_1_s_fu_208_ap_done,
        ap_idle => grp_rgb2hsv_9_550_598_1_s_fu_208_ap_idle,
        ap_ready => grp_rgb2hsv_9_550_598_1_s_fu_208_ap_ready,
        p_read => empty_73_reg_314,
        p_read1 => outMat_cols_reg_320,
        m_axi_gmem1_AWVALID => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => gmem1_AWREADY,
        m_axi_gmem1_AWADDR => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => gmem1_WREADY,
        m_axi_gmem1_WDATA => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => gmem1_RLAST,
        m_axi_gmem1_RID => gmem1_RID,
        m_axi_gmem1_RUSER => gmem1_RUSER,
        m_axi_gmem1_RRESP => gmem1_RRESP,
        m_axi_gmem1_BVALID => gmem1_BVALID,
        m_axi_gmem1_BREADY => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => gmem1_BRESP,
        m_axi_gmem1_BID => gmem1_BID,
        m_axi_gmem1_BUSER => gmem1_BUSER,
        p_src_mat_data => img_inp_read_reg_308,
        ap_ext_blocking_n => grp_rgb2hsv_9_550_598_1_s_fu_208_ap_ext_blocking_n,
        ap_str_blocking_n => grp_rgb2hsv_9_550_598_1_s_fu_208_ap_str_blocking_n,
        ap_int_blocking_n => grp_rgb2hsv_9_550_598_1_s_fu_208_ap_int_blocking_n);

    grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224 : component mean_shift_accel_MeanShift_10_4_550_598_9_550_598_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_start,
        ap_done => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done,
        ap_idle => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_idle,
        ap_ready => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_ready,
        p_read => empty_73_reg_314,
        p_read1 => outMat_cols_reg_320,
        m_axi_gmem1_AWVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => gmem1_RLAST,
        m_axi_gmem1_RID => gmem1_RID,
        m_axi_gmem1_RUSER => gmem1_RUSER,
        m_axi_gmem1_RRESP => gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        p_in_mat_data => img_inp_read_reg_308,
        m_axi_gmem2_AWVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => ap_const_logic_0,
        m_axi_gmem2_AWADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => ap_const_logic_0,
        m_axi_gmem2_WDATA => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => gmem2_ARREADY,
        m_axi_gmem2_ARADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => gmem2_RVALID,
        m_axi_gmem2_RREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => gmem2_RDATA,
        m_axi_gmem2_RLAST => gmem2_RLAST,
        m_axi_gmem2_RID => gmem2_RID,
        m_axi_gmem2_RUSER => gmem2_RUSER,
        m_axi_gmem2_RRESP => gmem2_RRESP,
        m_axi_gmem2_BVALID => ap_const_logic_0,
        m_axi_gmem2_BREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => ap_const_lv2_0,
        m_axi_gmem2_BID => ap_const_lv1_0,
        m_axi_gmem2_BUSER => ap_const_lv1_0,
        x1 => tlx_read_reg_303,
        y1 => tly_read_reg_298,
        m_axi_gmem4_AWVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWVALID,
        m_axi_gmem4_AWREADY => ap_const_logic_0,
        m_axi_gmem4_AWADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWADDR,
        m_axi_gmem4_AWID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWID,
        m_axi_gmem4_AWLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWLEN,
        m_axi_gmem4_AWSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWSIZE,
        m_axi_gmem4_AWBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWBURST,
        m_axi_gmem4_AWLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWLOCK,
        m_axi_gmem4_AWCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWCACHE,
        m_axi_gmem4_AWPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWPROT,
        m_axi_gmem4_AWQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWQOS,
        m_axi_gmem4_AWREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWREGION,
        m_axi_gmem4_AWUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_AWUSER,
        m_axi_gmem4_WVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WVALID,
        m_axi_gmem4_WREADY => ap_const_logic_0,
        m_axi_gmem4_WDATA => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WDATA,
        m_axi_gmem4_WSTRB => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WSTRB,
        m_axi_gmem4_WLAST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WLAST,
        m_axi_gmem4_WID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WID,
        m_axi_gmem4_WUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_WUSER,
        m_axi_gmem4_ARVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARVALID,
        m_axi_gmem4_ARREADY => gmem4_ARREADY,
        m_axi_gmem4_ARADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARADDR,
        m_axi_gmem4_ARID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARID,
        m_axi_gmem4_ARLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARLEN,
        m_axi_gmem4_ARSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARSIZE,
        m_axi_gmem4_ARBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARBURST,
        m_axi_gmem4_ARLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARLOCK,
        m_axi_gmem4_ARCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARCACHE,
        m_axi_gmem4_ARPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARPROT,
        m_axi_gmem4_ARQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARQOS,
        m_axi_gmem4_ARREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARREGION,
        m_axi_gmem4_ARUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARUSER,
        m_axi_gmem4_RVALID => gmem4_RVALID,
        m_axi_gmem4_RREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_RREADY,
        m_axi_gmem4_RDATA => gmem4_RDATA,
        m_axi_gmem4_RLAST => gmem4_RLAST,
        m_axi_gmem4_RID => gmem4_RID,
        m_axi_gmem4_RUSER => gmem4_RUSER,
        m_axi_gmem4_RRESP => gmem4_RRESP,
        m_axi_gmem4_BVALID => ap_const_logic_0,
        m_axi_gmem4_BREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_BREADY,
        m_axi_gmem4_BRESP => ap_const_lv2_0,
        m_axi_gmem4_BID => ap_const_lv1_0,
        m_axi_gmem4_BUSER => ap_const_lv1_0,
        obj_height => obj_height_read_reg_293,
        obj_width => obj_width_read_reg_288,
        m_axi_gmem3_AWVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY => gmem3_AWREADY,
        m_axi_gmem3_AWADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY => gmem3_WREADY,
        m_axi_gmem3_WDATA => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WLAST,
        m_axi_gmem3_WID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WID,
        m_axi_gmem3_WUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY => gmem3_ARREADY,
        m_axi_gmem3_ARADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID => gmem3_RVALID,
        m_axi_gmem3_RREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA => gmem3_RDATA,
        m_axi_gmem3_RLAST => gmem3_RLAST,
        m_axi_gmem3_RID => gmem3_RID,
        m_axi_gmem3_RUSER => gmem3_RUSER,
        m_axi_gmem3_RRESP => gmem3_RRESP,
        m_axi_gmem3_BVALID => gmem3_BVALID,
        m_axi_gmem3_BREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP => gmem3_BRESP,
        m_axi_gmem3_BID => gmem3_BID,
        m_axi_gmem3_BUSER => gmem3_BUSER,
        dx => dx_read_reg_283,
        dy => dy_read_reg_278,
        m_axi_gmem5_AWVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWVALID,
        m_axi_gmem5_AWREADY => gmem5_AWREADY,
        m_axi_gmem5_AWADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWADDR,
        m_axi_gmem5_AWID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWID,
        m_axi_gmem5_AWLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWLEN,
        m_axi_gmem5_AWSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWSIZE,
        m_axi_gmem5_AWBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWBURST,
        m_axi_gmem5_AWLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWLOCK,
        m_axi_gmem5_AWCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWCACHE,
        m_axi_gmem5_AWPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWPROT,
        m_axi_gmem5_AWQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWQOS,
        m_axi_gmem5_AWREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWREGION,
        m_axi_gmem5_AWUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWUSER,
        m_axi_gmem5_WVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WVALID,
        m_axi_gmem5_WREADY => gmem5_WREADY,
        m_axi_gmem5_WDATA => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WDATA,
        m_axi_gmem5_WSTRB => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WSTRB,
        m_axi_gmem5_WLAST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WLAST,
        m_axi_gmem5_WID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WID,
        m_axi_gmem5_WUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WUSER,
        m_axi_gmem5_ARVALID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARVALID,
        m_axi_gmem5_ARREADY => gmem5_ARREADY,
        m_axi_gmem5_ARADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARADDR,
        m_axi_gmem5_ARID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARID,
        m_axi_gmem5_ARLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARLEN,
        m_axi_gmem5_ARSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARSIZE,
        m_axi_gmem5_ARBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARBURST,
        m_axi_gmem5_ARLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARLOCK,
        m_axi_gmem5_ARCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARCACHE,
        m_axi_gmem5_ARPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARPROT,
        m_axi_gmem5_ARQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARQOS,
        m_axi_gmem5_ARREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARREGION,
        m_axi_gmem5_ARUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARUSER,
        m_axi_gmem5_RVALID => gmem5_RVALID,
        m_axi_gmem5_RREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_RREADY,
        m_axi_gmem5_RDATA => gmem5_RDATA,
        m_axi_gmem5_RLAST => gmem5_RLAST,
        m_axi_gmem5_RID => gmem5_RID,
        m_axi_gmem5_RUSER => gmem5_RUSER,
        m_axi_gmem5_RRESP => gmem5_RRESP,
        m_axi_gmem5_BVALID => gmem5_BVALID,
        m_axi_gmem5_BREADY => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_BREADY,
        m_axi_gmem5_BRESP => gmem5_BRESP,
        m_axi_gmem5_BID => gmem5_BID,
        m_axi_gmem5_BUSER => gmem5_BUSER,
        status => track_read_reg_273,
        frame_status => frame_status,
        no_objects => no_objects,
        no_iters => empty_reg_336,
        ap_ext_blocking_n => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_ext_blocking_n,
        ap_str_blocking_n => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_str_blocking_n,
        ap_int_blocking_n => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_int_blocking_n);

    control_s_axi_U : component mean_shift_accel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        img_inp => img_inp,
        tlx => tlx,
        tly => tly,
        obj_height => obj_height,
        obj_width => obj_width,
        dx => dx,
        dy => dy,
        track => track,
        frame_status => frame_status,
        no_objects => no_objects,
        no_of_iterations => no_of_iterations,
        rows => rows,
        cols => cols,
        ap_start => ap_start,
        interrupt => interrupt,
        event_start => event_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    gmem1_m_axi_U : component mean_shift_accel_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem1_ARVALID,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => gmem1_ARADDR,
        I_ARID => gmem1_ARID,
        I_ARLEN => gmem1_ARLEN,
        I_ARSIZE => gmem1_ARSIZE,
        I_ARLOCK => gmem1_ARLOCK,
        I_ARCACHE => gmem1_ARCACHE,
        I_ARQOS => gmem1_ARQOS,
        I_ARPROT => gmem1_ARPROT,
        I_ARUSER => gmem1_ARUSER,
        I_ARBURST => gmem1_ARBURST,
        I_ARREGION => gmem1_ARREGION,
        I_RVALID => gmem1_RVALID,
        I_RREADY => gmem1_RREADY,
        I_RDATA => gmem1_RDATA,
        I_RID => gmem1_RID,
        I_RUSER => gmem1_RUSER,
        I_RRESP => gmem1_RRESP,
        I_RLAST => gmem1_RLAST,
        I_AWVALID => gmem1_AWVALID,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWADDR,
        I_AWID => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWID,
        I_AWLEN => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWLEN,
        I_AWSIZE => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWSIZE,
        I_AWLOCK => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWLOCK,
        I_AWCACHE => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWCACHE,
        I_AWQOS => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWQOS,
        I_AWPROT => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWPROT,
        I_AWUSER => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWUSER,
        I_AWBURST => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWBURST,
        I_AWREGION => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWREGION,
        I_WVALID => gmem1_WVALID,
        I_WREADY => gmem1_WREADY,
        I_WDATA => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WDATA,
        I_WID => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WID,
        I_WUSER => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WUSER,
        I_WLAST => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WLAST,
        I_WSTRB => grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WSTRB,
        I_BVALID => gmem1_BVALID,
        I_BREADY => gmem1_BREADY,
        I_BRESP => gmem1_BRESP,
        I_BID => gmem1_BID,
        I_BUSER => gmem1_BUSER);

    gmem2_m_axi_U : component mean_shift_accel_gmem2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 16,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem2_ARVALID,
        I_ARREADY => gmem2_ARREADY,
        I_ARADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARADDR,
        I_ARID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARID,
        I_ARLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARLEN,
        I_ARSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARSIZE,
        I_ARLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARLOCK,
        I_ARCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARCACHE,
        I_ARQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARQOS,
        I_ARPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARPROT,
        I_ARUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARUSER,
        I_ARBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARBURST,
        I_ARREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARREGION,
        I_RVALID => gmem2_RVALID,
        I_RREADY => gmem2_RREADY,
        I_RDATA => gmem2_RDATA,
        I_RID => gmem2_RID,
        I_RUSER => gmem2_RUSER,
        I_RRESP => gmem2_RRESP,
        I_RLAST => gmem2_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem2_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem2_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_0,
        I_BVALID => gmem2_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem2_BRESP,
        I_BID => gmem2_BID,
        I_BUSER => gmem2_BUSER);

    gmem4_m_axi_U : component mean_shift_accel_gmem4_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 16,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM4_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM4_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM4_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM4_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM4_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM4_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM4_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM4_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM4_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM4_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM4_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem4_AWVALID,
        AWREADY => m_axi_gmem4_AWREADY,
        AWADDR => m_axi_gmem4_AWADDR,
        AWID => m_axi_gmem4_AWID,
        AWLEN => m_axi_gmem4_AWLEN,
        AWSIZE => m_axi_gmem4_AWSIZE,
        AWBURST => m_axi_gmem4_AWBURST,
        AWLOCK => m_axi_gmem4_AWLOCK,
        AWCACHE => m_axi_gmem4_AWCACHE,
        AWPROT => m_axi_gmem4_AWPROT,
        AWQOS => m_axi_gmem4_AWQOS,
        AWREGION => m_axi_gmem4_AWREGION,
        AWUSER => m_axi_gmem4_AWUSER,
        WVALID => m_axi_gmem4_WVALID,
        WREADY => m_axi_gmem4_WREADY,
        WDATA => m_axi_gmem4_WDATA,
        WSTRB => m_axi_gmem4_WSTRB,
        WLAST => m_axi_gmem4_WLAST,
        WID => m_axi_gmem4_WID,
        WUSER => m_axi_gmem4_WUSER,
        ARVALID => m_axi_gmem4_ARVALID,
        ARREADY => m_axi_gmem4_ARREADY,
        ARADDR => m_axi_gmem4_ARADDR,
        ARID => m_axi_gmem4_ARID,
        ARLEN => m_axi_gmem4_ARLEN,
        ARSIZE => m_axi_gmem4_ARSIZE,
        ARBURST => m_axi_gmem4_ARBURST,
        ARLOCK => m_axi_gmem4_ARLOCK,
        ARCACHE => m_axi_gmem4_ARCACHE,
        ARPROT => m_axi_gmem4_ARPROT,
        ARQOS => m_axi_gmem4_ARQOS,
        ARREGION => m_axi_gmem4_ARREGION,
        ARUSER => m_axi_gmem4_ARUSER,
        RVALID => m_axi_gmem4_RVALID,
        RREADY => m_axi_gmem4_RREADY,
        RDATA => m_axi_gmem4_RDATA,
        RLAST => m_axi_gmem4_RLAST,
        RID => m_axi_gmem4_RID,
        RUSER => m_axi_gmem4_RUSER,
        RRESP => m_axi_gmem4_RRESP,
        BVALID => m_axi_gmem4_BVALID,
        BREADY => m_axi_gmem4_BREADY,
        BRESP => m_axi_gmem4_BRESP,
        BID => m_axi_gmem4_BID,
        BUSER => m_axi_gmem4_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem4_ARVALID,
        I_ARREADY => gmem4_ARREADY,
        I_ARADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARADDR,
        I_ARID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARID,
        I_ARLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARLEN,
        I_ARSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARSIZE,
        I_ARLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARLOCK,
        I_ARCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARCACHE,
        I_ARQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARQOS,
        I_ARPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARPROT,
        I_ARUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARUSER,
        I_ARBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARBURST,
        I_ARREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARREGION,
        I_RVALID => gmem4_RVALID,
        I_RREADY => gmem4_RREADY,
        I_RDATA => gmem4_RDATA,
        I_RID => gmem4_RID,
        I_RUSER => gmem4_RUSER,
        I_RRESP => gmem4_RRESP,
        I_RLAST => gmem4_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem4_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem4_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_0,
        I_BVALID => gmem4_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem4_BRESP,
        I_BID => gmem4_BID,
        I_BUSER => gmem4_BUSER);

    gmem3_m_axi_U : component mean_shift_accel_gmem3_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 16,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM3_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM3_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM3_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM3_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM3_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM3_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM3_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM3_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM3_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM3_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM3_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem3_AWVALID,
        AWREADY => m_axi_gmem3_AWREADY,
        AWADDR => m_axi_gmem3_AWADDR,
        AWID => m_axi_gmem3_AWID,
        AWLEN => m_axi_gmem3_AWLEN,
        AWSIZE => m_axi_gmem3_AWSIZE,
        AWBURST => m_axi_gmem3_AWBURST,
        AWLOCK => m_axi_gmem3_AWLOCK,
        AWCACHE => m_axi_gmem3_AWCACHE,
        AWPROT => m_axi_gmem3_AWPROT,
        AWQOS => m_axi_gmem3_AWQOS,
        AWREGION => m_axi_gmem3_AWREGION,
        AWUSER => m_axi_gmem3_AWUSER,
        WVALID => m_axi_gmem3_WVALID,
        WREADY => m_axi_gmem3_WREADY,
        WDATA => m_axi_gmem3_WDATA,
        WSTRB => m_axi_gmem3_WSTRB,
        WLAST => m_axi_gmem3_WLAST,
        WID => m_axi_gmem3_WID,
        WUSER => m_axi_gmem3_WUSER,
        ARVALID => m_axi_gmem3_ARVALID,
        ARREADY => m_axi_gmem3_ARREADY,
        ARADDR => m_axi_gmem3_ARADDR,
        ARID => m_axi_gmem3_ARID,
        ARLEN => m_axi_gmem3_ARLEN,
        ARSIZE => m_axi_gmem3_ARSIZE,
        ARBURST => m_axi_gmem3_ARBURST,
        ARLOCK => m_axi_gmem3_ARLOCK,
        ARCACHE => m_axi_gmem3_ARCACHE,
        ARPROT => m_axi_gmem3_ARPROT,
        ARQOS => m_axi_gmem3_ARQOS,
        ARREGION => m_axi_gmem3_ARREGION,
        ARUSER => m_axi_gmem3_ARUSER,
        RVALID => m_axi_gmem3_RVALID,
        RREADY => m_axi_gmem3_RREADY,
        RDATA => m_axi_gmem3_RDATA,
        RLAST => m_axi_gmem3_RLAST,
        RID => m_axi_gmem3_RID,
        RUSER => m_axi_gmem3_RUSER,
        RRESP => m_axi_gmem3_RRESP,
        BVALID => m_axi_gmem3_BVALID,
        BREADY => m_axi_gmem3_BREADY,
        BRESP => m_axi_gmem3_BRESP,
        BID => m_axi_gmem3_BID,
        BUSER => m_axi_gmem3_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem3_ARVALID,
        I_ARREADY => gmem3_ARREADY,
        I_ARADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARADDR,
        I_ARID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARID,
        I_ARLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARLEN,
        I_ARSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARSIZE,
        I_ARLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARLOCK,
        I_ARCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARCACHE,
        I_ARQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARQOS,
        I_ARPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARPROT,
        I_ARUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARUSER,
        I_ARBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARBURST,
        I_ARREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARREGION,
        I_RVALID => gmem3_RVALID,
        I_RREADY => gmem3_RREADY,
        I_RDATA => gmem3_RDATA,
        I_RID => gmem3_RID,
        I_RUSER => gmem3_RUSER,
        I_RRESP => gmem3_RRESP,
        I_RLAST => gmem3_RLAST,
        I_AWVALID => gmem3_AWVALID,
        I_AWREADY => gmem3_AWREADY,
        I_AWADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWADDR,
        I_AWID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWID,
        I_AWLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWLEN,
        I_AWSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWSIZE,
        I_AWLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWLOCK,
        I_AWCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWCACHE,
        I_AWQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWQOS,
        I_AWPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWPROT,
        I_AWUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWUSER,
        I_AWBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWBURST,
        I_AWREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWREGION,
        I_WVALID => gmem3_WVALID,
        I_WREADY => gmem3_WREADY,
        I_WDATA => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WDATA,
        I_WID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WID,
        I_WUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WUSER,
        I_WLAST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WLAST,
        I_WSTRB => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WSTRB,
        I_BVALID => gmem3_BVALID,
        I_BREADY => gmem3_BREADY,
        I_BRESP => gmem3_BRESP,
        I_BID => gmem3_BID,
        I_BUSER => gmem3_BUSER);

    gmem5_m_axi_U : component mean_shift_accel_gmem5_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 16,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM5_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM5_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM5_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM5_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM5_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM5_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM5_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM5_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM5_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM5_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM5_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem5_AWVALID,
        AWREADY => m_axi_gmem5_AWREADY,
        AWADDR => m_axi_gmem5_AWADDR,
        AWID => m_axi_gmem5_AWID,
        AWLEN => m_axi_gmem5_AWLEN,
        AWSIZE => m_axi_gmem5_AWSIZE,
        AWBURST => m_axi_gmem5_AWBURST,
        AWLOCK => m_axi_gmem5_AWLOCK,
        AWCACHE => m_axi_gmem5_AWCACHE,
        AWPROT => m_axi_gmem5_AWPROT,
        AWQOS => m_axi_gmem5_AWQOS,
        AWREGION => m_axi_gmem5_AWREGION,
        AWUSER => m_axi_gmem5_AWUSER,
        WVALID => m_axi_gmem5_WVALID,
        WREADY => m_axi_gmem5_WREADY,
        WDATA => m_axi_gmem5_WDATA,
        WSTRB => m_axi_gmem5_WSTRB,
        WLAST => m_axi_gmem5_WLAST,
        WID => m_axi_gmem5_WID,
        WUSER => m_axi_gmem5_WUSER,
        ARVALID => m_axi_gmem5_ARVALID,
        ARREADY => m_axi_gmem5_ARREADY,
        ARADDR => m_axi_gmem5_ARADDR,
        ARID => m_axi_gmem5_ARID,
        ARLEN => m_axi_gmem5_ARLEN,
        ARSIZE => m_axi_gmem5_ARSIZE,
        ARBURST => m_axi_gmem5_ARBURST,
        ARLOCK => m_axi_gmem5_ARLOCK,
        ARCACHE => m_axi_gmem5_ARCACHE,
        ARPROT => m_axi_gmem5_ARPROT,
        ARQOS => m_axi_gmem5_ARQOS,
        ARREGION => m_axi_gmem5_ARREGION,
        ARUSER => m_axi_gmem5_ARUSER,
        RVALID => m_axi_gmem5_RVALID,
        RREADY => m_axi_gmem5_RREADY,
        RDATA => m_axi_gmem5_RDATA,
        RLAST => m_axi_gmem5_RLAST,
        RID => m_axi_gmem5_RID,
        RUSER => m_axi_gmem5_RUSER,
        RRESP => m_axi_gmem5_RRESP,
        BVALID => m_axi_gmem5_BVALID,
        BREADY => m_axi_gmem5_BREADY,
        BRESP => m_axi_gmem5_BRESP,
        BID => m_axi_gmem5_BID,
        BUSER => m_axi_gmem5_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem5_ARVALID,
        I_ARREADY => gmem5_ARREADY,
        I_ARADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARADDR,
        I_ARID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARID,
        I_ARLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARLEN,
        I_ARSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARSIZE,
        I_ARLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARLOCK,
        I_ARCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARCACHE,
        I_ARQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARQOS,
        I_ARPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARPROT,
        I_ARUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARUSER,
        I_ARBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARBURST,
        I_ARREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARREGION,
        I_RVALID => gmem5_RVALID,
        I_RREADY => gmem5_RREADY,
        I_RDATA => gmem5_RDATA,
        I_RID => gmem5_RID,
        I_RUSER => gmem5_RUSER,
        I_RRESP => gmem5_RRESP,
        I_RLAST => gmem5_RLAST,
        I_AWVALID => gmem5_AWVALID,
        I_AWREADY => gmem5_AWREADY,
        I_AWADDR => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWADDR,
        I_AWID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWID,
        I_AWLEN => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWLEN,
        I_AWSIZE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWSIZE,
        I_AWLOCK => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWLOCK,
        I_AWCACHE => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWCACHE,
        I_AWQOS => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWQOS,
        I_AWPROT => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWPROT,
        I_AWUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWUSER,
        I_AWBURST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWBURST,
        I_AWREGION => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWREGION,
        I_WVALID => gmem5_WVALID,
        I_WREADY => gmem5_WREADY,
        I_WDATA => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WDATA,
        I_WID => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WID,
        I_WUSER => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WUSER,
        I_WLAST => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WLAST,
        I_WSTRB => grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WSTRB,
        I_BVALID => gmem5_BVALID,
        I_BREADY => gmem5_BREADY,
        I_BRESP => gmem5_BRESP,
        I_BID => gmem5_BID,
        I_BUSER => gmem5_BUSER);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_ready = ap_const_logic_1)) then 
                    grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rgb2hsv_9_550_598_1_s_fu_208_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_rgb2hsv_9_550_598_1_s_fu_208_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_rgb2hsv_9_550_598_1_s_fu_208_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rgb2hsv_9_550_598_1_s_fu_208_ap_ready = ap_const_logic_1)) then 
                    grp_rgb2hsv_9_550_598_1_s_fu_208_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_ext_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ext_blocking_n_reg <= ap_ext_blocking_n;
        end if;
    end process;

    ap_int_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_int_blocking_n_reg <= ap_int_blocking_n;
        end if;
    end process;

    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    ap_str_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_str_blocking_n_reg <= ap_str_blocking_n;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                dx_read_reg_283 <= dx;
                dy_read_reg_278 <= dy;
                empty_73_reg_314 <= empty_73_fu_259_p1;
                img_inp_read_reg_308 <= img_inp;
                obj_height_read_reg_293 <= obj_height;
                obj_width_read_reg_288 <= obj_width;
                outMat_cols_reg_320 <= outMat_cols_fu_264_p1;
                tlx_read_reg_303 <= tlx;
                tly_read_reg_298 <= tly;
                track_read_reg_273 <= track;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                empty_reg_336 <= empty_fu_269_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_ap_done, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_rgb2hsv_9_550_598_1_s_fu_208_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_rgb2hsv_9_550_598_1_s_fu_208_ap_done)
    begin
        if ((grp_rgb2hsv_9_550_598_1_s_fu_208_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done)
    begin
        if ((grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call60_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call60 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done, ap_CS_fsm_state4)
    begin
        if (((grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_ext_blocking_n <= (ap_ext_blocking_sub_n and ap_const_logic_1);

    ap_ext_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_ext_blocking_0, ap_wait_1, ap_sub_ext_blocking_1)
    begin
        if ((((ap_wait_1 and ap_sub_ext_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_ext_blocking_0) = ap_const_logic_1))) then 
            ap_ext_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_ext_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_n <= (ap_int_blocking_sub_n and ap_const_logic_1);

    ap_int_blocking_sub_n_assign_proc : process(ap_wait_0, ap_wait_1, ap_sub_int_blocking_0, ap_sub_int_blocking_1)
    begin
        if ((((ap_wait_1 and ap_sub_int_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_int_blocking_0) = ap_const_logic_1))) then 
            ap_int_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_int_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done, ap_CS_fsm_state4)
    begin
        if (((grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_str_blocking_sub_n and ap_const_logic_1);

    ap_str_blocking_sub_n_assign_proc : process(ap_wait_0, ap_wait_1, ap_sub_str_blocking_0, ap_sub_str_blocking_1)
    begin
        if ((((ap_wait_1 and ap_sub_str_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_str_blocking_0) = ap_const_logic_1))) then 
            ap_str_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_str_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sub_ext_blocking_0_assign_proc : process(grp_rgb2hsv_9_550_598_1_s_fu_208_ap_ext_blocking_n)
    begin
        if ((grp_rgb2hsv_9_550_598_1_s_fu_208_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_1_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_ext_blocking_n)
    begin
        if ((grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_0_assign_proc : process(grp_rgb2hsv_9_550_598_1_s_fu_208_ap_int_blocking_n)
    begin
        if ((grp_rgb2hsv_9_550_598_1_s_fu_208_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_1_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_int_blocking_n)
    begin
        if ((grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_0_assign_proc : process(grp_rgb2hsv_9_550_598_1_s_fu_208_ap_str_blocking_n)
    begin
        if ((grp_rgb2hsv_9_550_598_1_s_fu_208_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_1_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_str_blocking_n)
    begin
        if ((grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state2 = ap_CS_fsm)) then 
            ap_wait_0 <= ap_const_logic_1;
        else 
            ap_wait_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_1_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state4 = ap_CS_fsm)) then 
            ap_wait_1 <= ap_const_logic_1;
        else 
            ap_wait_1 <= ap_const_logic_0;
        end if; 
    end process;

    empty_73_fu_259_p1 <= rows(10 - 1 downto 0);
    empty_fu_269_p1 <= no_of_iterations(7 - 1 downto 0);
    event_done <= ap_done;

    gmem1_ARADDR_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARADDR, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARADDR, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARADDR <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARADDR <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARADDR;
        else 
            gmem1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_ARBURST_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARBURST, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARBURST, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARBURST <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARBURST <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARBURST;
        else 
            gmem1_ARBURST <= "XX";
        end if; 
    end process;


    gmem1_ARCACHE_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARCACHE, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARCACHE, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARCACHE <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARCACHE <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARCACHE;
        else 
            gmem1_ARCACHE <= "XXXX";
        end if; 
    end process;


    gmem1_ARID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARID, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARID <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARID;
        else 
            gmem1_ARID <= "X";
        end if; 
    end process;


    gmem1_ARLEN_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARLEN, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARLEN, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARLEN <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARLEN <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARLEN;
        else 
            gmem1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_ARLOCK_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARLOCK, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARLOCK, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARLOCK <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARLOCK <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARLOCK;
        else 
            gmem1_ARLOCK <= "XX";
        end if; 
    end process;


    gmem1_ARPROT_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARPROT, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARPROT, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARPROT <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARPROT <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARPROT;
        else 
            gmem1_ARPROT <= "XXX";
        end if; 
    end process;


    gmem1_ARQOS_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARQOS, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARQOS, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARQOS <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARQOS <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARQOS;
        else 
            gmem1_ARQOS <= "XXXX";
        end if; 
    end process;


    gmem1_ARREGION_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARREGION, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARREGION, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARREGION <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARREGION <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARREGION;
        else 
            gmem1_ARREGION <= "XXXX";
        end if; 
    end process;


    gmem1_ARSIZE_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARSIZE, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARSIZE, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARSIZE <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARSIZE <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARSIZE;
        else 
            gmem1_ARSIZE <= "XXX";
        end if; 
    end process;


    gmem1_ARUSER_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARUSER, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARUSER, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARUSER <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARUSER <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARUSER;
        else 
            gmem1_ARUSER <= "X";
        end if; 
    end process;


    gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARVALID, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_ARVALID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_ARVALID <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_ARVALID;
        else 
            gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_AWVALID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_AWVALID <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_AWVALID;
        else 
            gmem1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_BREADY_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_BREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_BREADY <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_BREADY;
        else 
            gmem1_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_RREADY_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_RREADY, grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem1_RREADY <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem1_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_RREADY <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_RREADY;
        else 
            gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_WVALID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem1_WVALID <= grp_rgb2hsv_9_550_598_1_s_fu_208_m_axi_gmem1_WVALID;
        else 
            gmem1_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_ARVALID_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem2_ARVALID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_ARVALID;
        else 
            gmem2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_RREADY_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem2_RREADY <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem2_RREADY;
        else 
            gmem2_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_ARVALID_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem3_ARVALID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_ARVALID;
        else 
            gmem3_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_AWVALID_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWVALID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem3_AWVALID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_AWVALID;
        else 
            gmem3_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_BREADY_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_BREADY, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem3_BREADY <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_BREADY;
        else 
            gmem3_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_RREADY_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem3_RREADY <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_RREADY;
        else 
            gmem3_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_WVALID_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WVALID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem3_WVALID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem3_WVALID;
        else 
            gmem3_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem4_ARVALID_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem4_ARVALID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_ARVALID;
        else 
            gmem4_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem4_RREADY_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem4_RREADY <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem4_RREADY;
        else 
            gmem4_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem5_ARVALID_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARVALID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem5_ARVALID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_ARVALID;
        else 
            gmem5_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem5_AWVALID_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWVALID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem5_AWVALID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_AWVALID;
        else 
            gmem5_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem5_BREADY_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_BREADY, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem5_BREADY <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_BREADY;
        else 
            gmem5_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem5_RREADY_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_RREADY, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem5_RREADY <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_RREADY;
        else 
            gmem5_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem5_WVALID_assign_proc : process(grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WVALID, ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem5_WVALID <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_m_axi_gmem5_WVALID;
        else 
            gmem5_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_start <= grp_MeanShift_10_4_550_598_9_550_598_1_s_fu_224_ap_start_reg;
    grp_rgb2hsv_9_550_598_1_s_fu_208_ap_start <= grp_rgb2hsv_9_550_598_1_s_fu_208_ap_start_reg;
    outMat_cols_fu_264_p1 <= cols(10 - 1 downto 0);

    stall_done_ext_assign_proc : process(ap_ext_blocking_n, ap_ext_blocking_n_reg)
    begin
        if (((ap_ext_blocking_n_reg = ap_const_logic_0) and (ap_ext_blocking_n = ap_const_logic_1))) then 
            stall_done_ext <= ap_const_logic_1;
        else 
            stall_done_ext <= ap_const_logic_0;
        end if; 
    end process;


    stall_done_int_assign_proc : process(ap_int_blocking_n, ap_int_blocking_n_reg)
    begin
        if (((ap_int_blocking_n_reg = ap_const_logic_0) and (ap_int_blocking_n = ap_const_logic_1))) then 
            stall_done_int <= ap_const_logic_1;
        else 
            stall_done_int <= ap_const_logic_0;
        end if; 
    end process;


    stall_done_str_assign_proc : process(ap_str_blocking_n, ap_str_blocking_n_reg)
    begin
        if (((ap_str_blocking_n_reg = ap_const_logic_0) and (ap_str_blocking_n = ap_const_logic_1))) then 
            stall_done_str <= ap_const_logic_1;
        else 
            stall_done_str <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_ext_assign_proc : process(ap_ext_blocking_n, ap_ext_blocking_n_reg)
    begin
        if (((ap_ext_blocking_n_reg = ap_const_logic_1) and (ap_ext_blocking_n = ap_const_logic_0))) then 
            stall_start_ext <= ap_const_logic_1;
        else 
            stall_start_ext <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_int_assign_proc : process(ap_int_blocking_n, ap_int_blocking_n_reg)
    begin
        if (((ap_int_blocking_n_reg = ap_const_logic_1) and (ap_int_blocking_n = ap_const_logic_0))) then 
            stall_start_int <= ap_const_logic_1;
        else 
            stall_start_int <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_str_assign_proc : process(ap_str_blocking_n, ap_str_blocking_n_reg)
    begin
        if (((ap_str_blocking_n_reg = ap_const_logic_1) and (ap_str_blocking_n = ap_const_logic_0))) then 
            stall_start_str <= ap_const_logic_1;
        else 
            stall_start_str <= ap_const_logic_0;
        end if; 
    end process;

end behav;
