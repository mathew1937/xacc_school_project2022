-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Qu_offset : IN STD_LOGIC_VECTOR (3 downto 0);
    Pu_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    Pu_ce0 : OUT STD_LOGIC;
    Pu_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    BIN_0_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    BIN_0_ce0 : OUT STD_LOGIC;
    BIN_0_q0 : IN STD_LOGIC_VECTOR (8 downto 0);
    BIN_1_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    BIN_1_ce0 : OUT STD_LOGIC;
    BIN_1_q0 : IN STD_LOGIC_VECTOR (8 downto 0);
    obj_hgt : IN STD_LOGIC_VECTOR (15 downto 0);
    obj_wdt : IN STD_LOGIC_VECTOR (15 downto 0);
    C_x_read : IN STD_LOGIC_VECTOR (15 downto 0);
    C_y_read : IN STD_LOGIC_VECTOR (15 downto 0);
    track_read : IN STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (9 downto 0);
    cols : IN STD_LOGIC_VECTOR (9 downto 0);
    Qu_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    Qu_ce0 : OUT STD_LOGIC;
    Qu_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (48 downto 0) := "0000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (48 downto 0) := "0000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (48 downto 0) := "0000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (48 downto 0) := "0000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (48 downto 0) := "0000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (48 downto 0) := "0000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (48 downto 0) := "0001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (48 downto 0) := "0010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (48 downto 0) := "0100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (48 downto 0) := "1000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_1F0 : STD_LOGIC_VECTOR (8 downto 0) := "111110000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal xFTrackmulKernelLut_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal xFTrackmulKernelLut_ce0 : STD_LOGIC;
    signal xFTrackmulKernelLut_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_255 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln340_1_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal reg_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln382_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_x_reg_731 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal h_y_reg_746 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_width1_reg_753 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln337_fu_300_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln337_reg_758 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_height1_reg_763 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln337_1_fu_317_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln337_1_reg_768 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_323_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_reg_773 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln306_fu_327_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln306_reg_808 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln306_1_fu_331_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln306_1_reg_813 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln327_fu_335_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln327_reg_818 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln328_fu_338_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln328_reg_825 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln330_fu_341_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln330_reg_833 : STD_LOGIC_VECTOR (16 downto 0);
    signal buf_size_fu_344_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_size_reg_839 : STD_LOGIC_VECTOR (15 downto 0);
    signal lshr_ln337_fu_352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln337_reg_844 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln340_fu_357_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln340_reg_849 : STD_LOGIC_VECTOR (16 downto 0);
    signal phi_mul_load_reg_893 : STD_LOGIC_VECTOR (15 downto 0);
    signal A_fu_412_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal A_reg_901 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_1_fu_435_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_1_reg_906 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal xFTrackmulKernelLut_load_reg_919 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal dispx_fu_499_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal dispy_fu_503_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln395_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln395_reg_934 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal select_ln395_fu_545_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln395_reg_939 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln399_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln399_reg_945 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln399_fu_581_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln399_reg_950 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_Inverse_fu_203_ap_start : STD_LOGIC;
    signal grp_Inverse_fu_203_ap_done : STD_LOGIC;
    signal grp_Inverse_fu_203_ap_idle : STD_LOGIC;
    signal grp_Inverse_fu_203_ap_ready : STD_LOGIC;
    signal grp_Inverse_fu_203_x : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_Inverse_fu_203_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Inverse_fu_203_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Inverse_fu_203_ap_ext_blocking_n : STD_LOGIC;
    signal grp_Inverse_fu_203_ap_str_blocking_n : STD_LOGIC;
    signal grp_Inverse_fu_203_ap_int_blocking_n : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_idle : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ready : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_ce0 : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_ce0 : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_ce0 : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out_ap_vld : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out_ap_vld : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out_ap_vld : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_ce0 : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ext_blocking_n : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_str_blocking_n : STD_LOGIC;
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_int_blocking_n : STD_LOGIC;
    signal dispx_1_reg_175 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln340_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dispy_1_reg_189 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_Inverse_fu_203_ap_start_reg : STD_LOGIC := '0';
    signal grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal idxprom54_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal phi_mul_fu_94 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln340_fu_396_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal total_x_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_y_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_w_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_fu_110 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_2_fu_406_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln337_fu_296_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln337_2_fu_314_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln337_1_fu_310_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal sext_ln337_3_fu_349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_417_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_421_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub42_fu_429_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_459_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_465_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln392_fu_512_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln395_fu_517_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln395_fu_521_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln395_1_fu_526_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln396_fu_535_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln396_fu_539_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln391_fu_507_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln399_fu_553_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln399_fu_557_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln399_1_fu_562_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln400_fu_571_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln400_fu_575_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal zext_ln403_fu_589_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln403_fu_592_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln403_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln404_fu_603_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln407_fu_615_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln407_fu_618_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln407_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln408_fu_629_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln407_fu_634_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln403_fu_608_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln407_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_1_fu_667_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln415_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_1_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln413_fu_647_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln414_fu_652_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln415_2_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_459_ap_start : STD_LOGIC;
    signal grp_fu_459_ap_done : STD_LOGIC;
    signal grp_fu_465_ap_start : STD_LOGIC;
    signal grp_fu_465_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (48 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ext_blocking_sub_n : STD_LOGIC;
    signal ap_wait_0 : STD_LOGIC;
    signal ap_sub_ext_blocking_0 : STD_LOGIC;
    signal ap_wait_1 : STD_LOGIC;
    signal ap_sub_ext_blocking_1 : STD_LOGIC;
    signal ap_str_blocking_sub_n : STD_LOGIC;
    signal ap_sub_str_blocking_0 : STD_LOGIC;
    signal ap_sub_str_blocking_1 : STD_LOGIC;
    signal ap_int_blocking_sub_n : STD_LOGIC;
    signal ap_sub_int_blocking_0 : STD_LOGIC;
    signal ap_sub_int_blocking_1 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mean_shift_accel_Inverse IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (14 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        total_w : IN STD_LOGIC_VECTOR (31 downto 0);
        total_y : IN STD_LOGIC_VECTOR (31 downto 0);
        total_x : IN STD_LOGIC_VECTOR (31 downto 0);
        buf_size : IN STD_LOGIC_VECTOR (15 downto 0);
        A_cast3 : IN STD_LOGIC_VECTOR (15 downto 0);
        phi_mul : IN STD_LOGIC_VECTOR (15 downto 0);
        BIN_0_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        BIN_0_ce0 : OUT STD_LOGIC;
        BIN_0_q0 : IN STD_LOGIC_VECTOR (8 downto 0);
        BIN_1_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        BIN_1_ce0 : OUT STD_LOGIC;
        BIN_1_q0 : IN STD_LOGIC_VECTOR (8 downto 0);
        h_x_1 : IN STD_LOGIC_VECTOR (14 downto 0);
        yy_cast : IN STD_LOGIC_VECTOR (15 downto 0);
        wh : IN STD_LOGIC_VECTOR (31 downto 0);
        Qu_offset : IN STD_LOGIC_VECTOR (3 downto 0);
        Pu_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        Pu_ce0 : OUT STD_LOGIC;
        Pu_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        total_w_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        total_w_1_out_ap_vld : OUT STD_LOGIC;
        total_y_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        total_y_1_out_ap_vld : OUT STD_LOGIC;
        total_x_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        total_x_1_out_ap_vld : OUT STD_LOGIC;
        Qu_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        Qu_ce0 : OUT STD_LOGIC;
        Qu_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component mean_shift_accel_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mean_shift_accel_sdiv_32ns_32ns_16_36_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component mean_shift_accel_xFTrackmulHist_550_299_598_1_9_unsigned_int_unsigned_short_Pipeline_loop_histdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    xFTrackmulKernelLut_U : component mean_shift_accel_xFTrackmulHist_550_299_598_1_9_unsigned_int_unsigned_short_Pipeline_loop_histdEe
    generic map (
        DataWidth => 16,
        AddressRange => 200,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => xFTrackmulKernelLut_address0,
        ce0 => xFTrackmulKernelLut_ce0,
        q0 => xFTrackmulKernelLut_q0);

    grp_Inverse_fu_203 : component mean_shift_accel_Inverse
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Inverse_fu_203_ap_start,
        ap_done => grp_Inverse_fu_203_ap_done,
        ap_idle => grp_Inverse_fu_203_ap_idle,
        ap_ready => grp_Inverse_fu_203_ap_ready,
        x => grp_Inverse_fu_203_x,
        ap_return_0 => grp_Inverse_fu_203_ap_return_0,
        ap_return_1 => grp_Inverse_fu_203_ap_return_1,
        ap_ext_blocking_n => grp_Inverse_fu_203_ap_ext_blocking_n,
        ap_str_blocking_n => grp_Inverse_fu_203_ap_str_blocking_n,
        ap_int_blocking_n => grp_Inverse_fu_203_ap_int_blocking_n);

    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210 : component mean_shift_accel_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start,
        ap_done => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done,
        ap_idle => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_idle,
        ap_ready => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ready,
        total_w => reg_255,
        total_y => reg_265,
        total_x => reg_260,
        buf_size => buf_size_reg_839,
        A_cast3 => A_reg_901,
        phi_mul => phi_mul_load_reg_893,
        BIN_0_address0 => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_address0,
        BIN_0_ce0 => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_ce0,
        BIN_0_q0 => BIN_0_q0,
        BIN_1_address0 => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_address0,
        BIN_1_ce0 => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_ce0,
        BIN_1_q0 => BIN_1_q0,
        h_x_1 => h_x_reg_731,
        yy_cast => xFTrackmulKernelLut_load_reg_919,
        wh => lshr_ln337_reg_844,
        Qu_offset => Qu_offset,
        Pu_address0 => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_address0,
        Pu_ce0 => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_ce0,
        Pu_q0 => Pu_q0,
        total_w_1_out => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out,
        total_w_1_out_ap_vld => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out_ap_vld,
        total_y_1_out => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out,
        total_y_1_out_ap_vld => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out_ap_vld,
        total_x_1_out => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out,
        total_x_1_out_ap_vld => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out_ap_vld,
        Qu_address0 => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_address0,
        Qu_ce0 => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_ce0,
        Qu_q0 => Qu_q0,
        ap_ext_blocking_n => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ext_blocking_n,
        ap_str_blocking_n => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_str_blocking_n,
        ap_int_blocking_n => grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_int_blocking_n);

    mul_32s_32s_32_2_1_U144 : component mean_shift_accel_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_height1_reg_763,
        din1 => p_width1_reg_753,
        ce => ap_const_logic_1,
        dout => grp_fu_323_p2);

    sdiv_32ns_32ns_16_36_seq_1_U145 : component mean_shift_accel_sdiv_32ns_32ns_16_36_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_459_ap_start,
        done => grp_fu_459_ap_done,
        din0 => total_x_fu_98,
        din1 => total_w_fu_106,
        ce => ap_const_logic_1,
        dout => grp_fu_459_p2);

    sdiv_32ns_32ns_16_36_seq_1_U146 : component mean_shift_accel_sdiv_32ns_32ns_16_36_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_465_ap_start,
        done => grp_fu_465_ap_done,
        din0 => total_y_fu_102,
        din1 => total_w_fu_106,
        ce => ap_const_logic_1,
        dout => grp_fu_465_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_Inverse_fu_203_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Inverse_fu_203_ap_start_reg <= ap_const_logic_0;
            else
                if ((((grp_Inverse_fu_203_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_Inverse_fu_203_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Inverse_fu_203_ap_ready = ap_const_logic_1)) then 
                    grp_Inverse_fu_203_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ready = ap_const_logic_1)) then 
                    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    dispx_1_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln340_fu_360_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln382_fu_453_p2 = ap_const_lv1_1) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_1)))) then 
                dispx_1_reg_175 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                dispx_1_reg_175 <= dispx_fu_499_p1;
            end if; 
        end if;
    end process;

    dispy_1_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln340_fu_360_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln382_fu_453_p2 = ap_const_lv1_1) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_1)))) then 
                dispy_1_reg_189 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                dispy_1_reg_189 <= dispy_fu_503_p1;
            end if; 
        end if;
    end process;

    i_1_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_360_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_1_fu_110 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_0))) then 
                i_1_fu_110 <= i_2_fu_406_p2;
            end if; 
        end if;
    end process;

    phi_mul_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_360_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                phi_mul_fu_94 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_0))) then 
                phi_mul_fu_94 <= add_ln340_fu_396_p2;
            end if; 
        end if;
    end process;

    total_w_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_360_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                total_w_fu_106 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                total_w_fu_106 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_w_1_out;
            end if; 
        end if;
    end process;

    total_x_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_360_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                total_x_fu_98 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                total_x_fu_98 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_x_1_out;
            end if; 
        end if;
    end process;

    total_y_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_360_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                total_y_fu_102 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                total_y_fu_102 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_total_y_1_out;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_0))) then
                A_reg_901 <= A_fu_412_p2;
                y_1_reg_906 <= y_1_fu_435_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln337_1_reg_768 <= add_ln337_1_fu_317_p2;
                p_height1_reg_763 <= grp_Inverse_fu_203_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln337_reg_758 <= add_ln337_fu_300_p2;
                h_y_reg_746 <= obj_hgt(15 downto 1);
                p_width1_reg_753 <= grp_Inverse_fu_203_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    buf_size_reg_839(15 downto 1) <= buf_size_fu_344_p2(15 downto 1);
                lshr_ln337_reg_844 <= lshr_ln337_fu_352_p2;
                    zext_ln306_1_reg_813(9 downto 0) <= zext_ln306_1_fu_331_p1(9 downto 0);
                    zext_ln306_reg_808(9 downto 0) <= zext_ln306_fu_327_p1(9 downto 0);
                    zext_ln327_reg_818(14 downto 0) <= zext_ln327_fu_335_p1(14 downto 0);
                    zext_ln328_reg_825(14 downto 0) <= zext_ln328_fu_338_p1(14 downto 0);
                    zext_ln330_reg_833(14 downto 0) <= zext_ln330_fu_341_p1(14 downto 0);
                    zext_ln340_reg_849(14 downto 0) <= zext_ln340_fu_357_p1(14 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                h_x_reg_731 <= obj_wdt(15 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                icmp_ln395_reg_934 <= icmp_ln395_fu_529_p2;
                icmp_ln399_reg_945 <= icmp_ln399_fu_565_p2;
                select_ln395_reg_939 <= select_ln395_fu_545_p3;
                select_ln399_reg_950 <= select_ln399_fu_581_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                phi_mul_load_reg_893 <= phi_mul_fu_94;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_1)))) then
                reg_255 <= total_w_fu_106;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln382_fu_453_p2 = ap_const_lv1_0) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_1)))) then
                reg_260 <= total_x_fu_98;
                reg_265 <= total_y_fu_102;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                temp_reg_773 <= grp_fu_323_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                xFTrackmulKernelLut_load_reg_919 <= xFTrackmulKernelLut_q0;
            end if;
        end if;
    end process;
    zext_ln306_reg_808(15 downto 10) <= "000000";
    zext_ln306_1_reg_813(15 downto 10) <= "000000";
    zext_ln327_reg_818(15) <= '0';
    zext_ln328_reg_825(15) <= '0';
    zext_ln330_reg_833(16 downto 15) <= "00";
    buf_size_reg_839(0) <= '1';
    zext_ln340_reg_849(16 downto 15) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, icmp_ln340_1_fu_401_p2, icmp_ln382_fu_453_p2, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state6, grp_Inverse_fu_203_ap_done, grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done, icmp_ln340_fu_360_p2, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_Inverse_fu_203_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_Inverse_fu_203_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln340_fu_360_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln382_fu_453_p2 = ap_const_lv1_1) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln382_fu_453_p2 = ap_const_lv1_0) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    A_fu_412_p2 <= std_logic_vector(unsigned(i_1_fu_110) - unsigned(zext_ln328_reg_825));
    BIN_0_address0 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_address0;
    BIN_0_ce0 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_0_ce0;
    BIN_1_address0 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_address0;
    BIN_1_ce0 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_BIN_1_ce0;
    Pu_address0 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_address0;
    Pu_ce0 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Pu_ce0;
    Qu_address0 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_address0;
    Qu_ce0 <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_Qu_ce0;
    add_ln337_1_fu_317_p2 <= std_logic_vector(signed(sext_ln337_2_fu_314_p1) + signed(sext_ln337_1_fu_310_p1));
    add_ln337_fu_300_p2 <= std_logic_vector(signed(sext_ln337_fu_296_p1) + signed(ap_const_lv9_1F0));
    add_ln340_fu_396_p2 <= std_logic_vector(unsigned(phi_mul_fu_94) + unsigned(obj_wdt));
    add_ln391_fu_507_p2 <= std_logic_vector(unsigned(dispx_1_reg_175) + unsigned(C_x_read));
    add_ln392_fu_512_p2 <= std_logic_vector(unsigned(dispy_1_reg_189) + unsigned(C_y_read));
    add_ln395_fu_521_p2 <= std_logic_vector(unsigned(zext_ln395_fu_517_p1) + unsigned(zext_ln330_reg_833));
    add_ln396_fu_539_p2 <= std_logic_vector(unsigned(sub_ln396_fu_535_p2) + unsigned(ap_const_lv16_FFFF));
    add_ln399_fu_557_p2 <= std_logic_vector(unsigned(zext_ln399_fu_553_p1) + unsigned(zext_ln340_reg_849));
    add_ln400_fu_575_p2 <= std_logic_vector(unsigned(sub_ln400_fu_571_p2) + unsigned(ap_const_lv16_FFFF));
    add_ln404_fu_603_p2 <= std_logic_vector(unsigned(zext_ln328_reg_825) + unsigned(ap_const_lv16_1));
    add_ln408_fu_629_p2 <= std_logic_vector(unsigned(zext_ln327_reg_818) + unsigned(ap_const_lv16_1));
    and_ln415_1_fu_667_p0 <= (0=>track_read, others=>'-');
    and_ln415_1_fu_667_p2 <= (xor_ln415_fu_657_p2 and and_ln415_1_fu_667_p0);
    and_ln415_2_fu_672_p2 <= (and_ln415_fu_663_p2 and and_ln415_1_fu_667_p2);
    and_ln415_fu_663_p2 <= (icmp_ln399_reg_945 and icmp_ln395_reg_934);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done)
    begin
        if ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_Inverse_fu_203_ap_done)
    begin
        if ((grp_Inverse_fu_203_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_Inverse_fu_203_ap_done)
    begin
        if ((grp_Inverse_fu_203_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_ext_blocking_n <= (ap_ext_blocking_sub_n and ap_const_logic_1);

    ap_ext_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_ext_blocking_0, ap_wait_1, ap_sub_ext_blocking_1)
    begin
        if ((((ap_wait_0 and ap_sub_ext_blocking_0) = ap_const_logic_1) and ((ap_wait_1 and ap_sub_ext_blocking_1) = ap_const_logic_1))) then 
            ap_ext_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_ext_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_n <= (ap_int_blocking_sub_n and ap_const_logic_1);

    ap_int_blocking_sub_n_assign_proc : process(ap_wait_0, ap_wait_1, ap_sub_int_blocking_0, ap_sub_int_blocking_1)
    begin
        if ((((ap_wait_1 and ap_sub_int_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_int_blocking_0) = ap_const_logic_1))) then 
            ap_int_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_int_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= sub_ln413_fu_647_p2;
    ap_return_1 <= sub_ln414_fu_652_p2;
    ap_return_2 <= select_ln407_fu_634_p3;
    ap_return_3 <= select_ln403_fu_608_p3;
    ap_return_4 <= and_ln415_2_fu_672_p2;
    ap_str_blocking_n <= (ap_str_blocking_sub_n and ap_const_logic_1);

    ap_str_blocking_sub_n_assign_proc : process(ap_wait_0, ap_wait_1, ap_sub_str_blocking_0, ap_sub_str_blocking_1)
    begin
        if ((((ap_wait_1 and ap_sub_str_blocking_1) = ap_const_logic_1) and ((ap_wait_0 and ap_sub_str_blocking_0) = ap_const_logic_1))) then 
            ap_str_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_str_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sub_ext_blocking_0_assign_proc : process(grp_Inverse_fu_203_ap_ext_blocking_n)
    begin
        if ((grp_Inverse_fu_203_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_ext_blocking_1_assign_proc : process(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ext_blocking_n)
    begin
        if ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_0_assign_proc : process(grp_Inverse_fu_203_ap_int_blocking_n)
    begin
        if ((grp_Inverse_fu_203_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_1_assign_proc : process(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_int_blocking_n)
    begin
        if ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_0_assign_proc : process(grp_Inverse_fu_203_ap_str_blocking_n)
    begin
        if ((grp_Inverse_fu_203_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_1_assign_proc : process(grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_str_blocking_n)
    begin
        if ((grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_1 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state2 = ap_CS_fsm)) then 
            ap_wait_0 <= ap_const_logic_1;
        else 
            ap_wait_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_1_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_state11 = ap_CS_fsm)) then 
            ap_wait_1 <= ap_const_logic_1;
        else 
            ap_wait_1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_size_fu_344_p2 <= (obj_hgt or ap_const_lv16_1);
    dispx_fu_499_p1 <= grp_fu_459_p2(16 - 1 downto 0);
    dispy_fu_503_p1 <= grp_fu_465_p2(16 - 1 downto 0);
    empty_fu_417_p1 <= A_fu_412_p2(8 - 1 downto 0);
    grp_Inverse_fu_203_ap_start <= grp_Inverse_fu_203_ap_start_reg;

    grp_Inverse_fu_203_x_assign_proc : process(h_x_reg_731, ap_CS_fsm_state2, h_y_reg_746, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_Inverse_fu_203_x <= h_y_reg_746;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_Inverse_fu_203_x <= h_x_reg_731;
        else 
            grp_Inverse_fu_203_x <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_459_ap_start_assign_proc : process(ap_CS_fsm_state7, icmp_ln340_1_fu_401_p2, icmp_ln382_fu_453_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln382_fu_453_p2 = ap_const_lv1_0) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_1))) then 
            grp_fu_459_ap_start <= ap_const_logic_1;
        else 
            grp_fu_459_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_465_ap_start_assign_proc : process(ap_CS_fsm_state7, icmp_ln340_1_fu_401_p2, icmp_ln382_fu_453_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln382_fu_453_p2 = ap_const_lv1_0) and (icmp_ln340_1_fu_401_p2 = ap_const_lv1_1))) then 
            grp_fu_465_ap_start <= ap_const_logic_1;
        else 
            grp_fu_465_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start <= grp_xFTrackmulWeight_550_598_598_1_unsigned_int_unsigned_short_Pipeline_loop_weight_width_fu_210_ap_start_reg;
    i_2_fu_406_p2 <= std_logic_vector(unsigned(i_1_fu_110) + unsigned(ap_const_lv16_1));
    icmp_ln340_1_fu_401_p2 <= "1" when (i_1_fu_110 = obj_hgt) else "0";
    icmp_ln340_fu_360_p2 <= "1" when (obj_hgt = ap_const_lv16_0) else "0";
    icmp_ln382_fu_453_p2 <= "1" when (total_w_fu_106 = ap_const_lv32_0) else "0";
    icmp_ln395_fu_529_p2 <= "1" when (unsigned(add_ln395_fu_521_p2) < unsigned(zext_ln395_1_fu_526_p1)) else "0";
    icmp_ln399_fu_565_p2 <= "1" when (unsigned(add_ln399_fu_557_p2) < unsigned(zext_ln399_1_fu_562_p1)) else "0";
    icmp_ln403_fu_597_p2 <= "1" when (signed(sub_ln403_fu_592_p2) < signed(ap_const_lv17_1)) else "0";
    icmp_ln407_fu_623_p2 <= "1" when (signed(sub_ln407_fu_618_p2) < signed(ap_const_lv17_1)) else "0";
    idxprom54_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_1_reg_906),64));
    lshr_ln337_fu_352_p2 <= std_logic_vector(shift_right(unsigned(temp_reg_773),to_integer(unsigned('0' & sext_ln337_3_fu_349_p1(31-1 downto 0)))));
    or_ln407_fu_641_p2 <= (icmp_ln407_fu_623_p2 or icmp_ln403_fu_597_p2);
    select_ln395_fu_545_p3 <= 
        add_ln392_fu_512_p2 when (icmp_ln395_fu_529_p2(0) = '1') else 
        add_ln396_fu_539_p2;
    select_ln399_fu_581_p3 <= 
        add_ln391_fu_507_p2 when (icmp_ln399_fu_565_p2(0) = '1') else 
        add_ln400_fu_575_p2;
    select_ln403_fu_608_p3 <= 
        add_ln404_fu_603_p2 when (icmp_ln403_fu_597_p2(0) = '1') else 
        select_ln395_reg_939;
    select_ln407_fu_634_p3 <= 
        add_ln408_fu_629_p2 when (icmp_ln407_fu_623_p2(0) = '1') else 
        select_ln399_reg_950;
        sext_ln337_1_fu_310_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_Inverse_fu_203_ap_return_1),10));

        sext_ln337_2_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln337_reg_758),10));

        sext_ln337_3_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln337_1_reg_768),32));

        sext_ln337_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_Inverse_fu_203_ap_return_1),9));

    sub42_fu_429_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(empty_fu_417_p1));
    sub_ln396_fu_535_p2 <= std_logic_vector(unsigned(zext_ln306_1_reg_813) - unsigned(zext_ln328_reg_825));
    sub_ln400_fu_571_p2 <= std_logic_vector(unsigned(zext_ln306_reg_808) - unsigned(zext_ln327_reg_818));
    sub_ln403_fu_592_p2 <= std_logic_vector(unsigned(zext_ln403_fu_589_p1) - unsigned(zext_ln330_reg_833));
    sub_ln407_fu_618_p2 <= std_logic_vector(unsigned(zext_ln407_fu_615_p1) - unsigned(zext_ln340_reg_849));
    sub_ln413_fu_647_p2 <= std_logic_vector(unsigned(select_ln407_fu_634_p3) - unsigned(zext_ln327_reg_818));
    sub_ln414_fu_652_p2 <= std_logic_vector(unsigned(select_ln403_fu_608_p3) - unsigned(zext_ln328_reg_825));
    tmp_fu_421_p3 <= A_fu_412_p2(15 downto 15);

    xFTrackmulKernelLut_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, idxprom54_fu_471_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            xFTrackmulKernelLut_address0 <= idxprom54_fu_471_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            xFTrackmulKernelLut_address0 <= ap_const_lv8_0;
        else 
            xFTrackmulKernelLut_address0 <= "XXXXXXXX";
        end if; 
    end process;


    xFTrackmulKernelLut_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            xFTrackmulKernelLut_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            xFTrackmulKernelLut_ce0 <= ap_const_logic_0;
        else 
            xFTrackmulKernelLut_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln415_fu_657_p2 <= (or_ln407_fu_641_p2 xor ap_const_lv1_1);
    y_1_fu_435_p3 <= 
        sub42_fu_429_p2 when (tmp_fu_421_p3(0) = '1') else 
        empty_fu_417_p1;
    zext_ln306_1_fu_331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rows),16));
    zext_ln306_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cols),16));
    zext_ln327_fu_335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_x_reg_731),16));
    zext_ln328_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_y_reg_746),16));
    zext_ln330_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_y_reg_746),17));
    zext_ln340_fu_357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_x_reg_731),17));
    zext_ln395_1_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rows),17));
    zext_ln395_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln392_fu_512_p2),17));
    zext_ln399_1_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cols),17));
    zext_ln399_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln391_fu_507_p2),17));
    zext_ln403_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln395_reg_939),17));
    zext_ln407_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln399_reg_950),17));
end behav;
